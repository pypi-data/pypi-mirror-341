# Code generated by `py-sdk-gen`. DO NOT EDIT.
from .._service import Service, AsyncService
from .types import Membership
import typing
import pydantic


class ListMembershipsParams(pydantic.BaseModel):
    """
    ListMembershipsParams: query parameters for ListMemberships
    """

    kind: typing.Optional[str] = None
    """
	Filter memberships by resource kind.
	"""

    limit: typing.Optional[int] = None
    """
	Maximum number of members to return.
	"""

    offset: typing.Optional[int] = None
    """
	Offset of the first member to return.
	"""

    resource_attributes_sandbox: typing.Optional[bool] = None
    """
	Filter memberships by the sandbox status of the resource the membership is in.
	"""


class ListMemberships200Response(pydantic.BaseModel):
    """
    ListMemberships200Response is a schema definition.
    """

    items: typing.List[Membership]

    total_count: int


class MembershipsService(Service):
    def __init__(self, client):
        super().__init__(client)

    def list(self, params: ListMembershipsParams | None = None) -> ListMemberships200Response:
        """
        list: List memberships
        List memberships of the current user.
        """
        resp = self._client.get(
            "/v0.1/memberships",
            params=params.dict(),
        )
        return ListMemberships200Response(**resp.json())


class AsyncMembershipsService(AsyncService):
    def __init__(self, client):
        super().__init__(client)

    async def list(self, params: ListMembershipsParams | None = None) -> ListMemberships200Response:
        """
        list: List memberships
        List memberships of the current user.
        """
        resp = await self._client.get(
            "/v0.1/memberships",
            params=params.dict(),
        )
        return ListMemberships200Response(**resp.json())
