# Code generated by `py-sdk-gen`. DO NOT EDIT.
from .._service import Service, AsyncService
from .types import (
    Receipt,
)
import typing
import pydantic


class GetReceiptParams(pydantic.BaseModel):
    """
    GetReceiptParams: query parameters for GetReceipt
    """

    mid: str
    """
	Merchant code.
	"""

    tx_event_id: typing.Optional[int] = None
    """
	The ID of the transaction event (refund).
	"""


class ReceiptsService(Service):
    def __init__(self, client):
        super().__init__(client)

    def get(self, id: str, params: GetReceiptParams | None = None) -> Receipt:
        """
        get: Retrieve receipt details
        Retrieves receipt specific data for a transaction.
        """
        resp = self._client.get(
            f"/v1.1/receipts/{id}",
            params=params.dict(),
        )
        return Receipt(**resp.json())


class AsyncReceiptsService(AsyncService):
    def __init__(self, client):
        super().__init__(client)

    async def get(self, id: str, params: GetReceiptParams | None = None) -> Receipt:
        """
        get: Retrieve receipt details
        Retrieves receipt specific data for a transaction.
        """
        resp = await self._client.get(
            f"/v1.1/receipts/{id}",
            params=params.dict(),
        )
        return Receipt(**resp.json())
