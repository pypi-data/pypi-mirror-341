export class AsyncServiceLocator {
    constructor(services, cache, options) {
        this.services = services;
        this.cache = cache;
        this.options = options;
    }
    static getInstance(key, options) {
        const serializedOptions = JSON.stringify(options);
        const instanceKey = `${key}-${serializedOptions}`;
        if (!this.instances[instanceKey]) {
            this.instances[instanceKey] = new AsyncServiceLocator({}, {}, options);
        }
        return this.instances[instanceKey];
    }
    // @ts-ignore Fix the type system
    registerService(name, serviceFactory) {
        return new AsyncServiceLocator({
            ...this.services,
            [name]: serviceFactory,
        }, { ...this.cache, [name]: undefined }, // @varun can you fix?
        this.options);
    }
    async getService(name) {
        const service = this.services[name];
        if (!service) {
            throw new Error(`Service ${String(name)} not found`);
        }
        if (!this.cache[name] || !this.options.cache) {
            // @ts-ignore Fix the type system
            this.cache[name] = await service(this);
        }
        return this.cache[name];
    }
}
AsyncServiceLocator.instances = {};
// class Test {
//   // constructor(name: string, age: number) {}
//
//   public test() {
//     return 'test';
//   }
// }
//
// class Test2 {
//   constructor(private testDependency: Test) {}
//
//   public getName() {
//     return 'test2';
//   }
//
//   public test() {
//     return 'test2';
//   }
// }
//
// const testLocator = AsyncServiceLocator.getInstance('default')
//   .registerService('test', async () => new Test())
//   .registerService('test3', async () => Test)
//   .registerService(
//     'test2',
//     async locator => new Test2(await locator.getService('test')),
//   );
// const testService = await testLocator.getService('test');
// const test2Service = await testLocator.getService('test2');
//
// testService.test();
// test2Service.getName();
//# sourceMappingURL=AsyncServiceLocator.js.map