/**
 * @beta
 * Retry a function until it succeeds or the maximum number of attempts is reached.
 *
 * @param fn - The function to retry.
 * @param options - The retry options.
 * @returns The result of the function.
 */
export const retry = async (fn, options) => {
    let attempts = 0;
    const maxAttempts = options?.maxAttempts ?? 3;
    const retryInterval = options?.retryInterval ?? 1000;
    while (true) {
        attempts += 1;
        try {
            // eslint-disable-next-line no-await-in-loop
            return await fn();
        }
        catch (e) {
            if (attempts < maxAttempts) {
                // eslint-disable-next-line no-await-in-loop
                await new Promise(resolve => setTimeout(resolve, retryInterval));
            }
            throw e;
        }
    }
};
//# sourceMappingURL=utils.js.map