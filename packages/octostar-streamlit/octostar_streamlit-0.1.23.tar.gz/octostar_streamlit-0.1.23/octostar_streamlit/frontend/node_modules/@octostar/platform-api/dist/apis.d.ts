import { Desktop, Ontology, ExtrasApi, RemoteAppApi, SavedSearchAPIInterface } from '@octostar/platform-types';
import { ContextApi, EnsureMethodsReturnPromise } from './types';
/**
 * @beta
 * Provides access to the desktop API.
 * For asynchronous access, use {@link getDesktopApi}.
 */
export declare const desktopApi: () => EnsureMethodsReturnPromise<Desktop>;
export declare const extrasApi: () => EnsureMethodsReturnPromise<ExtrasApi>;
export declare const remoteAppApi: () => EnsureMethodsReturnPromise<RemoteAppApi>;
export declare const savedSearchApi: () => EnsureMethodsReturnPromise<SavedSearchAPIInterface>;
/**
 * @beta
 * Provides access to the ontology API.
 * For asynchronous access, use {@link getOntologyApi}.
 */
export declare const ontologyApi: () => EnsureMethodsReturnPromise<Ontology>;
/**
 * @beta
 * Provides access to the context API.
 * For asynchronous access, use {@link getContextApi}.
 */
export declare const contextApi: () => EnsureMethodsReturnPromise<ContextApi<unknown>>;
/**
 * @beta
 * Get the desktop API asynchronously.
 */
export declare const getDesktopApi: () => Promise<EnsureMethodsReturnPromise<Desktop>>;
/**
 * @beta
 * Get the ontology API asynchronously.
 */
export declare const getOntologyApi: () => Promise<EnsureMethodsReturnPromise<Ontology>>;
/**
 * @beta
 * Get the context API asynchronously.
 */
export declare const getContextApi: () => Promise<EnsureMethodsReturnPromise<ContextApi<unknown>>>;
//# sourceMappingURL=apis.d.ts.map