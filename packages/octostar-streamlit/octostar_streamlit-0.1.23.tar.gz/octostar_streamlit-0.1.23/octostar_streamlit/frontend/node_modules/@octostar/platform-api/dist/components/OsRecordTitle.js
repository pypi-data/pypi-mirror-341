/**
 * @beta
 * Custom element that renders a record title.
 */
export class OsRecordTitle extends HTMLElement {
    constructor() {
        super();
        this.root = this.attachShadow({ mode: 'open' });
    }
    connectedCallback() {
        if (this.record) {
            this.render();
        }
    }
    set recordData(value) {
        this.record = value;
        this.setAttribute('record', JSON.stringify(value));
    }
    get recordData() {
        return this.record;
    }
    static get observedAttributes() {
        return ['record', 'tags', 'contextmenu'];
    }
    async render() {
        if (!this.record) {
            return;
        }
        this.root.innerHTML = `<style>
    :host {
      width: 100%;
      display: flex;
      align-items: center;
      gap: 10px;
      justify-content: space-between;
    }
    :host(:hover) {
        cursor: pointer;
        background-color: #f7f7f7;
      }
      .group {
        display: flex;
        align-items: center;
        gap: 5px;
      }
      .svg-hover:hover {
        border-radius: 6px;
        background-color: #e0e0e0;
    }
    </style>
`;
        const contextMenuTitle = document.createElement('os-context-menu');
        contextMenuTitle.context = {
            item: this.record,
        };
        const contextMenuSvg = document.createElement('os-context-menu');
        contextMenuSvg.setAttribute('trigger', 'click');
        contextMenuSvg.context = {
            item: this.record,
        };
        const leftGroup = document.createElement('div');
        leftGroup.className = 'group';
        const rightGroup = document.createElement('div');
        rightGroup.className = 'group';
        const ellipsisSVG = document.createElement('span');
        ellipsisSVG.className = 'svg-hover';
        ellipsisSVG.innerHTML =
            '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-ellipsis"><circle cx="12" cy="12" r="1"/><circle cx="19" cy="12" r="1"/><circle cx="5" cy="12" r="1"/></svg>';
        contextMenuSvg.appendChild(ellipsisSVG);
        const icon = document.createElement('os-icon');
        const label = document.createElement('p');
        const tags = document.createElement('os-tags');
        label.innerText = this.record.entity_label;
        icon.for = this.record;
        tags.recordData = this.record;
        tags.setAttribute('mode', 'dots');
        leftGroup.appendChild(icon);
        leftGroup.appendChild(label);
        rightGroup.appendChild(tags);
        rightGroup.appendChild(contextMenuSvg);
        contextMenuTitle.appendChild(leftGroup);
        contextMenuTitle.appendChild(rightGroup);
        this.root.appendChild(contextMenuTitle);
    }
}
if (!customElements.get('os-record-title')) {
    customElements.define('os-record-title', OsRecordTitle);
}
//# sourceMappingURL=OsRecordTitle.js.map