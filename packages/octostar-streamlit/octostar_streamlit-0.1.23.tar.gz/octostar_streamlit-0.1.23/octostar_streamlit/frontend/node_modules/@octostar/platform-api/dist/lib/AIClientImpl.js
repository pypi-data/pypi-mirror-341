export class AIClientImpl {
    constructor(osAPIClient) {
        this.osAPIClient = osAPIClient;
    }
    async getChatModels() {
        if (!this.models) {
            this.models = await this.osAPIClient.fetchData({
                endpoint: '/api/v1/chat/models',
            });
        }
        return this.models;
    }
    async prompt(prompt, options) {
        const model = options?.model || (await this.getChatModels())[0]?.model_name;
        const enableRag = options?.enableRag ?? true; // getPreference is not available to this package.
        // TODO: Streaming is not supported yet.
        const chatMessage = await this.osAPIClient.fetchData({
            endpoint: '/api/v1/chat',
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                model_name: model,
                prompt,
                api_key: options?.apiKey || '',
                streaming: false,
                enable_rag: enableRag,
                cohere_key: options?.cohereKey || '',
            }),
        });
        if (chatMessage.response?.content) {
            return chatMessage.response.content;
        }
        return chatMessage.content;
    }
}
//# sourceMappingURL=AIClientImpl.js.map