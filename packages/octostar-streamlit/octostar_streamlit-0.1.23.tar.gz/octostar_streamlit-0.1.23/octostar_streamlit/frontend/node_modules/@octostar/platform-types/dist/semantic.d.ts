import { ConceptName } from './model';
/**
 * @beta
 * Type representing the properties for a template binding.
 */
export interface SemanticBindingProps {
    /** The concept to which the binding applies */
    concept: string;
    /** The priority for the template, lower value means higher priority */
    priority?: number;
    /** Whether the result should be shown in large mode by default */
    maximized?: boolean;
    /** Other properties */
    [key: string]: any;
}
/**
 * @beta
 * Type representing a semantic binding type.
 */
export type SemanticBindingType = 'record_viewer' | string;
/**
 * @beta
 * Type representing a template binding.
 */
export type SemanticBinding = {
    /** The concept to which the binding applies */
    concept: ConceptName;
    /** the role for which the binding applies */
    role?: SemanticBindingType;
    /** The actual binding properties */
    props?: SemanticBindingProps;
};
/**
 * @beta
 * Type representing multiple semantic bindings.
 */
export type SemanticBindings = {
    [k in SemanticBindingType]: (ConceptName | SemanticBinding)[];
};
//# sourceMappingURL=semantic.d.ts.map