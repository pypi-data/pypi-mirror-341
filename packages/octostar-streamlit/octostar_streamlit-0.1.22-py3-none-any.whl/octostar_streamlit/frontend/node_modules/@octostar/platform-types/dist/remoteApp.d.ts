import { Callback } from './callback';
export type UnsubscribeFn = (id: string) => void;
export type SubscribeToContextFn = (id: string, callback: Callback<unknown>) => void;
export type UnsubscribeFromContextFn = UnsubscribeFn;
export type SubscribeDragStartFn = (id: string, callback: Callback<unknown>) => void;
export type UnsubscribeFromDragStartFn = UnsubscribeFn;
export type DropZoneRequestResult = {
    to: any;
    data: any;
};
export type DropZoneRequestFn = (args: any[]) => Promise<DropZoneRequestResult>;
export type SetTransformResultFn = (args: any[]) => Promise<void>;
export type RemoteAppApi = {
    subscribeToContext: SubscribeToContextFn;
    unsubscribeFromContext: UnsubscribeFromContextFn;
    subscribeToDragStart: SubscribeDragStartFn;
    unsubscribeFromDragStart: UnsubscribeFromDragStartFn;
    dropZoneRequest: DropZoneRequestFn;
    setTransformResult: SetTransformResultFn;
};
//# sourceMappingURL=remoteApp.d.ts.map