"""
Enhancing the Youtube video experience by extracting
more information from the videos by using AI.
"""
from yta_youtube_enhanced.dataclasses import DescriptionParameter
from yta_youtube_enhanced.enums import DescriptionParameter as DescriptionParameterName
from yta_youtube.video import YoutubeVideo as YoutubeVideoBase
from yta_ai_utils.gemini import Gemini
from yta_general_utils.programming.validator.parameter import ParameterValidator
from typing import Union


class YoutubeVideo(YoutubeVideoBase):
    """
    Class to represent a youtube video and enhance its
    information by using AI and different tools.
    """

    # TODO: Create 'description' based on subtitles
    # TODO: Create 'summary' based on subtitles
    # TODO: Detect topics through the video
    # TODO: Improve the 'automatic_subtitles' by
    # providing a context and giving them to ChatGPT
    # to improve

    # 1. We have subtitles and/or automatic subtitles
    # to extract the information.
    # 2. We can analyze the audio using whisper and
    # extract subtitles

    # TODO: I need to detect if the video has voice
    # narration or not (a stock video will not have
    # it)

    # TODO: Generate chapters automatically from
    # the subtitles, using the expected format by
    # youtube in the description. Check this:
    # https://support.google.com/youtube/answer/9884579?hl=en

    @property
    def description_parameters(
        self
    ) -> list[DescriptionParameter]:
        """
        The parameters that are written in the video description,
        which have a specific format to be detected. All these
        parameters are set by the user to include extra information
        that cannot be hold in any other field.

        A description parameter looks like this:
        - @parameter:value@

        This is interesting to include information like the key
        moment of a stock video, the name of the people that is
        shown in the video, etc.

        TODO: I'm not sure if this has to be in the enhanced
        library or in the basic one.
        """
        if not hasattr(self, '_description_parameters'):
            self._description_parameters = DescriptionParameter.detect_parameters(self.description)

        return self._description_parameters
    
    @property
    def key_moment(
        self
    ) -> Union[any, None]:
        """
        The key moment of the video, obtained from a description
        parameter if existing.
        """
        return self._get_description_parameter(DescriptionParameterName.KEY_MOMENT.value)
    
    def _get_description_parameter(
        self,
        name: str,
        do_ignore_case: bool = True
    ) -> Union[DescriptionParameter, None]:
        """
        Get a specific description parameter if available. If
        'do_ignore_case' is True, the parameter will be obtained
        ignoring upper or lower case.

        For internal use only.
        """
        return next(
            (
                description_parameter
                for description_parameter in self.description_parameters
                if (
                    description_parameter.name.lower() == name.lower()
                    if do_ignore_case else
                    description_parameter.name == name
                )
            ),
            None
        )

    def _improve_automatic_subtitles(
        self,
        topic: str
    ) -> str:
        """
        Improve and fix the subtitles based on the 
        provided 'topic'. This should fix typos.

        Please, explain what is the video talking
        about and give some context so the subtitles
        are improved in the best possible way.
        """
        ParameterValidator.validate_mandatory_string('topic', topic, do_accept_empty = False)

        if not self.has_automatic_subtitles:
            raise Exception('No automatic subtitles available.')

        # Automatic subtitles mean language chosen
        automatic_subtitles = self.get_automatic_subtitles()

        PROMPT = f'I have subtitles for a YouTube video that are automatically generated by the system. They are in the language {self.language.name} and I want you to correct the errors and fix them taking into account that the video is about {topic}. Here are the subtitles: {automatic_subtitles.text}'

        return Gemini.ask(PROMPT)

    def _extract_main_ideas_from_automatic_subtitles(
        self
    ) -> str:
        """
        Get the main ideas of the video based on the
        automatic subtitles (if available).
        """
        if not self.has_automatic_subtitles:
            raise Exception('No automatic subtitles available.')

        # Automatic subtitles mean language chosen
        automatic_subtitles = self.get_automatic_subtitles()

        PROMPT = f'I want you to act like a pro at interpreting YouTube video subtitles, being able to extract the main ideas from the video, and to make a summary of about 100 words of the most important ideas talked about in the video. I want you to return everything to me in an unnumbered list, where the last thing is the summary paragraph of the video (which will start with "Summary:" and the summary immediately after), and all the lines before that are the main ideas, each starting with an asterisk *. The subtitles are in {self.language.name}, but I want your response in English. These are the subtitles for the video: {automatic_subtitles.text}'

        return Gemini.ask(PROMPT)



"""
ChatGPT said that this is interesting:
¡Claro! Hay muchas formas en las que la inteligencia artificial (IA) puede añadir valor a los vídeos de YouTube, especialmente al aprovechar los datos adicionales como los subtítulos, el audio, las imágenes y el contexto general. Aquí tienes algunas ideas para extraer información útil sobre un vídeo de YouTube que no esté directamente disponible:

1. Resúmenes Automáticos de Contenido
Descripción del contenido: Usando los subtítulos, podrías generar resúmenes automáticos del contenido del vídeo. La IA podría identificar los puntos clave, resaltar las ideas principales y ofrecer una descripción concisa de lo que trata el vídeo, similar a un resumen ejecutivo.
Resumen temporal: Generar resúmenes por capítulos o segmentos. La IA podría identificar momentos clave del vídeo y crear resúmenes más pequeños basados en los cambios de tema o contenido. Esto se puede hacer a través de análisis semántico de los subtítulos y/o del tono del discurso.
2. Detección de Sentimientos o Tono del Vídeo
Análisis de sentimientos: Analizar el tono emocional del vídeo, basado en las palabras y el contexto de los subtítulos o incluso el análisis del audio (tono de voz, cambios emocionales). Esto podría permitir que el sistema identifique si el vídeo es positivo, negativo, neutral, o si tiene momentos de tensión o alegría, por ejemplo.
Detección de emociones por el habla: Usar análisis de audio (prosodia, ritmo, intensidad) para detectar el estado emocional del hablante durante diferentes momentos del vídeo. Esto podría ayudar a obtener información sobre el estado de ánimo del vídeo en diversas secciones (por ejemplo, secciones felices, tristes, de suspense).
3. Generación de Índices de Temas (Capítulos)
Segmentación de temas: Usar IA para analizar los subtítulos y determinar los cambios de tema. De esta manera, se podrían crear "capítulos" automáticos con títulos que describan los temas que se están tratando en cada segmento del vídeo (por ejemplo, "Introducción al tema", "Demostración del producto", "Resumen final").
Reconocimiento de palabras clave: Utilizar técnicas de procesamiento de lenguaje natural (PLN) para identificar términos recurrentes y temas principales que el vídeo trata en cada parte, ayudando a generar un índice temático.
4. Análisis de la Imagen (Visión por Computadora)
Reconocimiento de objetos y escenas: Analizar las imágenes del vídeo (fotogramas) usando visión por computadora para identificar objetos, personas, lugares o escenas clave que aparecen en el vídeo. Esto podría ayudar a agregar descripciones visuales, como "En este momento se muestra un paisaje montañoso" o "Aparecen los personajes X e Y".
Reconocimiento de caras: Detectar las caras de las personas en el vídeo para identificar a los participantes (en caso de que sean conocidos o figuras públicas) y así poder incluir información adicional sobre las personas que aparecen o mencionan.
5. Clasificación de Género o Categoría
Etiquetado del contenido: Utilizando IA, podrías identificar a qué género o categoría pertenece un vídeo, más allá de lo que se indica en su título o descripción. Esto incluiría cosas como: ¿Es un vídeo educativo, de entretenimiento, técnico, deportivo, etc.? La IA podría analizar el contenido y clasificarlo adecuadamente.
Etiquetas automáticas: Generar etiquetas relacionadas con el contenido del vídeo de forma automática (por ejemplo, "tutorial de cocina", "reseña de película", "noticias de tecnología"). Esto ayudaría a organizar y categorizar el contenido de una forma más precisa.
6. Transcripción y Traducción Mejorada
Traducción automática y transcripción en múltiples idiomas: Si el vídeo está en un idioma específico, la IA podría generar transcripciones y luego traducirlas a diferentes idiomas, con una calidad más alta que la traducción automática estándar de YouTube.
Optimización de subtítulos: Mejorar los subtítulos generados automáticamente por YouTube al corregir errores de transcripción, mejorar la puntuación y la gramática, y ofrecer una transcripción más precisa.
7. Análisis de la Estructura del Diálogo
Análisis de interacciones: Si el vídeo es una conversación entre varias personas (por ejemplo, entrevistas, podcasts, debates), la IA podría identificar y analizar las interacciones, quién está hablando en cada momento, y cómo cambian los temas durante la discusión.
Identificación de oradores: Puedes aplicar modelos de reconocimiento de voz para identificar quién está hablando en cada momento y agregar etiquetas a los subtítulos con el nombre del orador (si se conoce).
8. Generación de Recomendaciones
Recomendación de vídeos relacionados: Analizar el contenido de los vídeos y, basándose en el análisis de los temas tratados, generar recomendaciones de otros vídeos similares o relacionados.
Recomendación de recursos adicionales: Por ejemplo, si el vídeo es un tutorial, la IA podría sugerir artículos, documentos o productos relacionados con el tema tratado en el vídeo.
9. Detección de Contenido Problemático
Análisis de contenido inapropiado: Utilizar IA para detectar contenido potencialmente problemático como lenguaje ofensivo, discurso de odio o violencia visual en los vídeos, más allá de los sistemas de moderación estándar de YouTube.
Revisión de políticas de contenido: Revisar automáticamente si el contenido cumple con las políticas de plataformas como YouTube, evaluando aspectos como la desinformación, el contenido engañoso o el cumplimiento de normas éticas.
10. Detección de Publicidad o Marcas
Detección de marcas y productos: Usar visión por computadora o análisis de audio para identificar marcas o productos mencionados en el vídeo, lo que puede ser útil para la monetización, marketing o análisis de patrocinadores.
11. Extracción de Referencias Culturales o Contextuales
Análisis de referencias culturales: La IA podría identificar y contextualizar referencias culturales, históricas o de actualidad presentes en el vídeo (por ejemplo, menciones a eventos recientes, personajes históricos, celebridades, etc.).
Análisis de contexto geográfico: Si se menciona un lugar o se muestran imágenes de una ubicación, la IA podría identificarlo y proporcionar información adicional sobre el contexto geográfico (por ejemplo, "El vídeo menciona Nueva York y habla sobre su arquitectura").
12. Interactividad y Preguntas Frecuentes
Generación de preguntas frecuentes: Usar IA para identificar preguntas comunes relacionadas con el tema del vídeo (por ejemplo, en tutoriales, vídeos educativos o de productos) y generar un conjunto de preguntas y respuestas frecuentes para ofrecer a los usuarios como contenido adicional.
Respuestas automáticas a preguntas del espectador: Si el vídeo tiene comentarios, se podría aplicar IA para responder automáticamente a las preguntas más frecuentes que los usuarios hagan en los comentarios.
"""