# This Docker Compose file is used to start up the Grafana visualization platform and its required services.
# Before running the solution, set the following environment variables:
# $env:OTEL_EXPORTER_OTLP_ENDPOINT = 'http://localhost:4317'
# $env:OTEL_EXPORTER_OTLP_TRACES_ENDPOINT = 'http://localhost:4317'

version: '3.5'

x-app:
  &default-observable
  environment:
    - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    - OTEL_EXPORTER_OTLP_METRICS_INSECURE=true
    - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4317
    - OTEL_EXPORTER_OTLP_TRACES_INSECURE=true

services:

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - rep-obs

  tracelens:
    image: azwepsifujiaksacr.azurecr.io/ansys/md1-obs/tracelens:latest
    ports:
      - 5000:5001
    environment:
      - PlantUml__RemoteUrl=http://host.docker.internal:8082
      - Redis__Server=host.docker.internal
    networks:
      - rep-obs

  plantuml-server:
    image: plantuml/plantuml-server:tomcat
    container_name: plantuml-server
    ports:
      - 8082:8080
    networks:
      - rep-obs

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.62.1
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./_deploy/compose/collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "4317:4317"   # OTLP gRPC receiver
      - "13133:13133" # Health check
    networks:
      - rep-obs

  grafana:
    image: grafana/grafana:9.2.1
    networks:
      - rep-obs
    ports:
      - "3000:3000"
    volumes:
      - ./_deploy/compose/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./_deploy/compose/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./_deploy/compose/grafana/grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./_deploy/compose/grafana/grafana-dashboard.json:/var/lib/grafana/dashboards/grafana-dashboard.json

  jaeger:
    image: jaegertracing/all-in-one:1.38.1
    networks:
      - rep-obs
    ports:
      - "14250:14250" # Proto span
      - "14269:14269" # Health check
      - "16686:16686" # UI

  prometheus:
    image: prom/prometheus:v2.39.1
    networks:
      - rep-obs
    ports:
      - "9090:9090"
    volumes:
      - ./_deploy/compose/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  loki:
    image: grafana/loki:2.6.1
    ports:
      - "3100:3100"
    restart: on-failure
    volumes:
      - ./_deploy/compose/loki/loki.yml:/etc/loki/docker-config.yaml
    command: -config.file=/etc/loki/docker-config.yaml
    networks:
      - rep-obs

networks:
  rep-obs:
    name: rep-obs
