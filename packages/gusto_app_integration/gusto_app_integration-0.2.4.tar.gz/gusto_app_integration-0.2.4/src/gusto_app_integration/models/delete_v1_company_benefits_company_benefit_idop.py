"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .versionheader import VersionHeader
from gusto_app_integration import utils
from gusto_app_integration.types import BaseModel
from gusto_app_integration.utils import FieldMetadata, HeaderMetadata, PathParamMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DeleteV1CompanyBenefitsCompanyBenefitIDRequestTypedDict(TypedDict):
    company_benefit_id: str
    r"""The UUID of the company benefit"""
    x_gusto_api_version: NotRequired[VersionHeader]
    r"""Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used."""


class DeleteV1CompanyBenefitsCompanyBenefitIDRequest(BaseModel):
    company_benefit_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The UUID of the company benefit"""

    x_gusto_api_version: Annotated[
        Optional[VersionHeader],
        pydantic.Field(alias="X-Gusto-API-Version"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = VersionHeader.TWO_THOUSAND_AND_TWENTY_FOUR_MINUS_04_MINUS_01
    r"""Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used."""


class BaseTypedDict(TypedDict):
    type: NotRequired[str]
    message: NotRequired[str]
    full_message: NotRequired[str]


class Base(BaseModel):
    type: Optional[str] = None

    message: Optional[str] = None

    full_message: Optional[str] = None


class ErrorsTypedDict(TypedDict):
    base: NotRequired[List[BaseTypedDict]]


class Errors(BaseModel):
    base: Optional[List[Base]] = None


class DeleteV1CompanyBenefitsCompanyBenefitIDResponseBodyData(BaseModel):
    errors: Optional[Errors] = None


class DeleteV1CompanyBenefitsCompanyBenefitIDResponseBody(Exception):
    r"""Unprocessable Entity"""

    data: DeleteV1CompanyBenefitsCompanyBenefitIDResponseBodyData

    def __init__(self, data: DeleteV1CompanyBenefitsCompanyBenefitIDResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, DeleteV1CompanyBenefitsCompanyBenefitIDResponseBodyData
        )
