[build-system]
requires = ["setuptools>=74.1", "Cython>3", "setuptools-protobuf"]
build-backend = "setuptools.build_meta"

[project]
name = "tfr_reader"
version = "0.8.0"
description = "Tensorflow Record Reader with Random Access"
readme = "README.md"
license = "MIT"
keywords = ["dataframe", "arrow", "out-of-core"]

authors = [
  {name = "Krzysztof Kolasinski"},
]

classifiers = [
  "Environment :: Console",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering",
]

dependencies = [
    "polars~=1.26",
    "tqdm",
]

[project.urls]
Repository = "https://github.com/kmkolasinski/tfrecords-reader"

[project.optional-dependencies]

# Google Storage features + protobuf decoder
google = [
    "gcsfs~=2025.3",
    "fsspec~=2025.3",
    "diskcache~=5.6",
]

# Dependencies for unit testing
dev = [
    "coverage",  # testing
    "mypy",  # static type checking
    "ruff",  # linting
    "pytest~=7.2",
    "pytest-cov~=4.0",
    "pytest-sugar~=0.9",
    "pytest-watch~=4.2.0",
    "pytest-mock",
    "numpy",
    "Pillow",
    "protobuf", # Creating example protobufs
]


[tool.setuptools]

ext-modules = [
    { name = "tfr_reader.cython.indexer", sources = ["src/tfr_reader/cython/indexer.pyx"], extra-compile-args=["-finline-functions", "-O3"] },
    { name = "tfr_reader.cython.decoder", sources = ["src/tfr_reader/cython/decoder.pyx"], extra-compile-args=["-finline-functions", "-O3"] },
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

addopts = [
    "-vv",
    "--durations=3",
]

[tool.ruff]
target-version = "py311"
line-length = 100
indent-width = 4
exclude = [
    ".tox",
    ".git",
    "venv"
]

# Apply fixes automatically
fix = true

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# By default, Ruff enables Flake8's F rules, along with a subset of the E rules,
# omitting any stylistic rules that overlap with the use of a formatter, like ruff format or Black.
# For more details see https://docs.astral.sh/ruff/rules/
[tool.ruff.lint]
exclude = ["*.ipynb", "experimental.py", "*_pb2.py"]
select = ["ALL"]

ignore = [
    "D", # Missing docstring
    "ANN", # Annotations
    "EM101",
    "TRY003", # Avoid specifying long messages outside the exception class
    "T201", # `print` found
    "EM102", # Exception must not use an f-string literal
    "PTH123", # `open()` should be replaced by `Path.open()`
    "COM812",
    "FBT001", # Boolean-typed positional argument in function definition
    "FBT002", # Boolean default positional argument in function definition
    "PTH110", # `Path` object should be used instead of `str` for file paths
    "PTH118", #  `os.path.join()` should be replaced by `Path` with `/` operator
    "SIM115", #  Use a context manager for opening files
    "ISC001",
    "G004", #  Logging statement uses f-string
    "B028", # Ignore missing stack explicit in warning.warn
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101", # Use of `assert` detected
    "D", # Missing docstring
    "ANN", # Annotations
    "SLF001", # Private member accessed
]

# Only allow autofix for these import-related and docstring rules
fixable = ["F401", "F403", "I001", "D411", "D415", "D208", "D209", "RET504"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
show_column_numbers = true
show_error_codes = true

namespace_packages = false
mypy_path = "src/"
explicit_package_bases = false
ignore_missing_imports = false
check_untyped_defs = true
strict = false
# tells `mypy` not to process this module when it's imported
follow_imports = "skip"

[[tool.mypy.overrides]]
module = "tfr_reader.cython,google.*,gcsfs,diskcache,numpy"
ignore_missing_imports = true
