{# type definitions #}
{% set optimizes = {
		'none': 1,
		'low': 2,
		'medium': 3,
		'high': 4,
		'speed': 5,
		'balanced': 6,
		'size': 7,
	}
%}
{% macro optimize_level(optimize, hint, use_hint) -%}
{%- if optimize == 'high' and use_hint == true %}{{ optimizes[hint] }}{% else %}{{ optimizes[optimize] }}{% endif -%}
{%- endmacro %}
{% set c_versions = {
		'c90': 1,
		'gnu90': 2,
		'c99': 3,
		'gnu99': 4,
		'c11': 5,
		'gnu11': 6,
	}
%}
{% set cpp_versions = {
		'c++98': 1,
		'gnu++98': 2,
		'c++11': 3,
		'gnu++11': 4,
		'c++03': 5,
		'c++14': 6,
		'gnu++14': 7,
		'c++17': 8,
		'gnu++17': 9,
	}
%}
{% set warning_level = {
		'no warnings': 1,
		'all warnings': 2,
		'ac5-like warnings': 3,
		'misra compatible': 4,
	}
%}
{% set file_types = {
		'C': 1,
		'ASM': 2,
		'OBJ': 3,
		'LIB': 4,
		'TEXT': 5,
		'CUSTOM': 6,
		'CPP': 7,
		'IMAGE': 8,
	}
%}
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="project_proj.xsd">
	<SchemaVersion>1.1</SchemaVersion>
	<Header>### uVision Project, (C) Keil Software</Header>
	<Targets>
		<Target>
			<TargetName>{{ project.name }}</TargetName>
			<ToolsetNumber>0x4</ToolsetNumber>
			<ToolsetName>ARM-ADS</ToolsetName>
			<uAC6>{% if project.options.keil_compiler == 'v6' %}1{% else %}0{% endif %}</uAC6>
			<TargetOption>
				<TargetCommonOption>
					<Device>{{ target.name }}</Device>
					<Vendor>{{ target.vendor }}</Vendor>
					<Cpu>
						{%- for memory in target.memories.iram %}{{ memory }}({{ target.memories.iram[memory].base }},{{ target.memories.iram[memory].size }}) {% endfor %}
						{% for memory in target.memories.irom %}{{ memory }}({{ target.memories.irom[memory].base }},{{ target.memories.irom[memory].size }}) {% endfor %}
						{% for memory in target.memories.xram %}{{ memory }}({{ target.memories.xram[memory].base }},{{ target.memories.xram[memory].size }}) {% endfor %}
						{% for memory in target.memories.xrom %}{{ memory }}({{ target.memories.xrom[memory].base }},{{ target.memories.xrom[memory].size }}) {% endfor -%}
						 CPUTYPE("{{ target.cpu_type}}") CLOCK({{ target.clock }}) {{ target.additional_info | join(' ') }}</Cpu>
					<FlashUtilSpec/>
					<StartupFile/>
					<FlashDriverDll/>
					<DeviceId/>
					<RegisterFile/>
					<MemoryEnv/>
					<Cmp/>
					<Asm/>
					<Linker/>
					<OHString/>
					<InfinionOptionDll/>
					<SLE66CMisc/>
					<SLE66AMisc/>
					<SLE66LinkerMisc/>
					<SFDFile/>
					<bCustSvd>0</bCustSvd>
					<UseEnv>0</UseEnv>
					<BinPath/>
					<IncludePath/>
					<LibPath/>
					<RegisterFilePath/>
					<DBRegisterFilePath/>
					<TargetStatus>
						<Error>0</Error>
						<ExitCodeStop>0</ExitCodeStop>
						<ButtonStop>0</ButtonStop>
						<NotGenerated>0</NotGenerated>
						<InvalidFlash>1</InvalidFlash>
					</TargetStatus>
					<OutputDirectory>.\Objects\</OutputDirectory>
					<OutputName>{{ project.name }}</OutputName>
					<CreateExecutable>1</CreateExecutable>
					<CreateLib>0</CreateLib>
					<CreateHexFile>1</CreateHexFile>
					<DebugInformation>1</DebugInformation>
					<BrowseInformation>1</BrowseInformation>
					<ListingPath>.\Listings\</ListingPath>
					<HexFormatSelection>1</HexFormatSelection>
					<Merge32K>0</Merge32K>
					<CreateBatchFile>0</CreateBatchFile>
					<BeforeCompile>
						<RunUserProg1>0</RunUserProg1>
						<RunUserProg2>0</RunUserProg2>
						<UserProg1Name/>
						<UserProg2Name/>
						<UserProg1Dos16Mode>0</UserProg1Dos16Mode>
						<UserProg2Dos16Mode>0</UserProg2Dos16Mode>
					</BeforeCompile>
					<BeforeMake>
						<RunUserProg1>0</RunUserProg1>
						<RunUserProg2>0</RunUserProg2>
						<UserProg1Name/>
						<UserProg2Name/>
						<UserProg1Dos16Mode>0</UserProg1Dos16Mode>
						<UserProg2Dos16Mode>0</UserProg2Dos16Mode>
						<nStopB1X>0</nStopB1X>
						<nStopB2X>0</nStopB2X>
					</BeforeMake>
					<AfterMake>
						<RunUserProg1>0</RunUserProg1>
						<RunUserProg2>0</RunUserProg2>
						<UserProg1Name/>
						<UserProg2Name/>
						<UserProg1Dos16Mode>0</UserProg1Dos16Mode>
						<UserProg2Dos16Mode>0</UserProg2Dos16Mode>
					</AfterMake>
					<SelectedForBatchBuild>1</SelectedForBatchBuild>
					<SVCSIdString/>
				</TargetCommonOption>
				<CommonProperty>
					<UseCPPCompiler>0</UseCPPCompiler>
					<RVCTCodeConst>0</RVCTCodeConst>
					<RVCTZI>0</RVCTZI>
					<RVCTOtherData>0</RVCTOtherData>
					<ModuleSelection>0</ModuleSelection>
					<IncludeInBuild>1</IncludeInBuild>
					<AlwaysBuild>0</AlwaysBuild>
					<GenerateAssemblyFile>0</GenerateAssemblyFile>
					<AssembleAssemblyFile>0</AssembleAssemblyFile>
					<PublicsOnly>0</PublicsOnly>
					<StopOnExitCode>3</StopOnExitCode>
					<CustomArgument/>
					<IncludeLibraryModules/>
					<ComprImg/>
				</CommonProperty>
				<DllOption>
					<SimDllName>{{ target.keil_5_dll_opt.sim.dll }}</SimDllName>
					<SimDllArguments>{{ target.keil_5_dll_opt.sim.dll_args }}</SimDllArguments>
					<SimDlgDll>{{ target.keil_5_dll_opt.sim.dlg_dll }}</SimDlgDll>
					<SimDlgDllArguments>{{ target.keil_5_dll_opt.sim.dlg_dll_args }}</SimDlgDllArguments>
					<TargetDllName>{{ target.keil_5_dll_opt.target.dll }}</TargetDllName>
					<TargetDllArguments>{{ target.keil_5_dll_opt.target.dll_args }}</TargetDllArguments>
					<TargetDlgDll>{{ target.keil_5_dll_opt.target.dlg_dll }}</TargetDlgDll>
					<TargetDlgDllArguments>{{ target.keil_5_dll_opt.target.dlg_dll_args }}</TargetDlgDllArguments>
				</DllOption>
				<DebugOption>
					<OPTHX>
						<HexSelection>1</HexSelection>
						<HexRangeLowAddress>0</HexRangeLowAddress>
						<HexRangeHighAddress>0</HexRangeHighAddress>
						<HexOffset>0</HexOffset>
						<Oh166RecLen>16</Oh166RecLen>
					</OPTHX>
				</DebugOption>
				<Utilities>
					<Flash1>
						<UseTargetDll>1</UseTargetDll>
						<UseExternalTool>0</UseExternalTool>
						<RunIndependent>0</RunIndependent>
						<UpdateFlashBeforeDebugging>1</UpdateFlashBeforeDebugging>
						<Capability>1</Capability>
						<DriverSelection>4107</DriverSelection>
					</Flash1>
					<bUseTDR>1</bUseTDR>
					<Flash2>BIN\UL2V8M.DLL</Flash2>
					<Flash3/>
					<Flash4/>
					<pFcarmOut/>
					<pFcarmGrp/>
					<pFcArmRoot/>
					<FcArmLst>0</FcArmLst>
				</Utilities>
				<TargetArmAds>
					<ArmAdsMisc>
						<GenerateListings>0</GenerateListings>
						<asHll>1</asHll>
						<asAsm>1</asAsm>
						<asMacX>1</asMacX>
						<asSyms>1</asSyms>
						<asFals>1</asFals>
						<asDbgD>1</asDbgD>
						<asForm>1</asForm>
						<ldLst>0</ldLst>
						<ldmm>1</ldmm>
						<ldXref>1</ldXref>
						<BigEnd>0</BigEnd>
						<AdsALst>1</AdsALst>
						<AdsACrf>1</AdsACrf>
						<AdsANop>0</AdsANop>
						<AdsANot>0</AdsANot>
						<AdsLLst>1</AdsLLst>
						<AdsLmap>1</AdsLmap>
						<AdsLcgr>1</AdsLcgr>
						<AdsLsym>1</AdsLsym>
						<AdsLszi>1</AdsLszi>
						<AdsLtoi>1</AdsLtoi>
						<AdsLsun>1</AdsLsun>
						<AdsLven>1</AdsLven>
						<AdsLsxf>1</AdsLsxf>
						<RvctClst>0</RvctClst>
						<GenPPlst>0</GenPPlst>
						<AdsCpuType>"{{ target.cpu_type | upper }}"</AdsCpuType>
						<RvctDeviceName/>
						<mOS>0</mOS>
						<uocRom>0</uocRom>
						<uocRam>0</uocRam>
						<hadIROM>1</hadIROM>
						<hadIRAM>1</hadIRAM>
						<hadXRAM>0</hadXRAM>
						<uocXRam>0</uocXRam>
						<RvdsVP>1</RvdsVP>
						<RvdsMve>0</RvdsMve>
						<hadIRAM2>1</hadIRAM2>
						<hadIROM2>1</hadIROM2>
						<StupSel>8</StupSel>
						<useUlib>{% if project.options.keil_micro_lib %}1{% else %}0{% endif %}</useUlib>
						<EndSel>1</EndSel>
						<uLtcg>0</uLtcg>
						<RoSelD>3</RoSelD>
						<RwSelD>4</RwSelD>
						<CodeSel>0</CodeSel>
						<OptFeed>0</OptFeed>
						<NoZi1>0</NoZi1>
						<NoZi2>0</NoZi2>
						<NoZi3>0</NoZi3>
						<NoZi4>0</NoZi4>
						<NoZi5>0</NoZi5>
						<Ro1Chk>{% if target.memories.xrom | length > 0 %}1{% else %}0{% endif %}</Ro1Chk>
						<Ro2Chk>{% if target.memories.xrom | length > 0 %}1{% else %}0{% endif %}</Ro2Chk>
						<Ro3Chk>{% if target.memories.xrom | length > 0 %}1{% else %}0{% endif %}</Ro3Chk>
						<Ir1Chk>{% if target.memories.irom | length > 0 %}1{% else %}0{% endif %}</Ir1Chk>
						<Ir2Chk>{% if target.memories.irom | length > 0 %}1{% else %}0{% endif %}</Ir2Chk>
						<Ra1Chk>{% if target.memories.xram | length > 0 %}1{% else %}0{% endif %}</Ra1Chk>
						<Ra2Chk>{% if target.memories.xram | length > 0 %}1{% else %}0{% endif %}</Ra2Chk>
						<Ra3Chk>{% if target.memories.xram | length > 0 %}1{% else %}0{% endif %}</Ra3Chk>
						<Im1Chk>{% if target.memories.iram | length > 0 %}1{% else %}0{% endif %}</Im1Chk>
						<Im2Chk>{% if target.memories.iram | length > 0 %}1{% else %}0{% endif %}</Im2Chk>
						<OnChipMemories>
							<Ocm1>
								<Type>0</Type>
								<StartAddress>0x0</StartAddress>
								<Size>0x0</Size>
							</Ocm1>
							<Ocm2>
								<Type>0</Type>
								<StartAddress>0x0</StartAddress>
								<Size>0x0</Size>
							</Ocm2>
							<Ocm3>
								<Type>0</Type>
								<StartAddress>0x0</StartAddress>
								<Size>0x0</Size>
							</Ocm3>
							<Ocm4>
								<Type>0</Type>
								<StartAddress>0x0</StartAddress>
								<Size>0x0</Size>
							</Ocm4>
							<Ocm5>
								<Type>0</Type>
								<StartAddress>0x0</StartAddress>
								<Size>0x0</Size>
							</Ocm5>
							<Ocm6>
								<Type>0</Type>
								<StartAddress>0x0</StartAddress>
								<Size>0x0</Size>
							</Ocm6>
							<IRAM>
								<Type>0</Type>
								<StartAddress/>
								<Size/>
							</IRAM>
							<IROM>
								<Type>1</Type>
								<StartAddress/>
								<Size/>
							</IROM>
							<XRAM>
								<Type>0</Type>
								<StartAddress>0x0</StartAddress>
								<Size>0x0</Size>
							</XRAM>
							<OCR_RVCT1>
								<Type>1</Type>
								<StartAddress>0x0</StartAddress>
								<Size>0x0</Size>
							</OCR_RVCT1>
							<OCR_RVCT2>
								<Type>1</Type>
								<StartAddress>0x0</StartAddress>
								<Size>0x0</Size>
							</OCR_RVCT2>
							<OCR_RVCT3>
								<Type>1</Type>
								<StartAddress>0x0</StartAddress>
								<Size>0x0</Size>
							</OCR_RVCT3>
							<OCR_RVCT4>
								<Type>1</Type>
								<StartAddress/>
								<Size/>
							</OCR_RVCT4>
							<OCR_RVCT5>
								<Type>1</Type>
								<StartAddress/>
								<Size/>
							</OCR_RVCT5>
							<OCR_RVCT6>
								<Type>0</Type>
								<StartAddress>0x0</StartAddress>
								<Size>0x0</Size>
							</OCR_RVCT6>
							<OCR_RVCT7>
								<Type>0</Type>
								<StartAddress>0x0</StartAddress>
								<Size>0x0</Size>
							</OCR_RVCT7>
							<OCR_RVCT8>
								<Type>0</Type>
								<StartAddress>0x0</StartAddress>
								<Size>0x0</Size>
							</OCR_RVCT8>
							<OCR_RVCT9>
								<Type>0</Type>
								<StartAddress/>
								<Size/>
							</OCR_RVCT9>
							<OCR_RVCT10>
								<Type>0</Type>
								<StartAddress/>
								<Size/>
							</OCR_RVCT10>
						</OnChipMemories>
						<RvctStartVector/>
					</ArmAdsMisc>
					<Cads>
						<interw>1</interw>
						<Optim>{{ optimize_level(project.options.optimize, project.options.optimize_hint, project.options.keil_use_optimize_hint) }}</Optim>
						<oTime>0</oTime>
						<SplitLS>0</SplitLS>
						<OneElfS>1</OneElfS>
						<Strict>0</Strict>
						<EnumInt>0</EnumInt>
						<PlainCh>0</PlainCh>
						<Ropi>0</Ropi>
						<Rwpi>0</Rwpi>
						<wLevel>{{ warning_level[project.options.keil_warning] }}</wLevel>
						<uThumb>0</uThumb>
						<uSurpInc>0</uSurpInc>
						<uC99>{% if c_versions[project.options.c_version] >= c_versions['c99'] %}1{% else %}0{% endif %}</uC99>
						<uGnu>0</uGnu>
						<useXO>0</useXO>
						<VariousControls>
							<MiscControls/>
							<Define>{{ project.defines | join(',') }}</Define>
							<Undefine/>
							<IncludePath>{{ project.includePaths | join(';') | replace('\\', '/') }}</IncludePath>
						</VariousControls>
					</Cads>
					<Aads>
						<interw>1</interw>
						<Ropi>0</Ropi>
						<Rwpi>0</Rwpi>
						<thumb>0</thumb>
						<SplitLS>0</SplitLS>
						<SwStkChk>0</SwStkChk>
						<NoWarn>0</NoWarn>
						<VariousControls>
							<MiscControls/>
							<Define>{{ project.definesASM | join(',') }}</Define>
							<Undefine/>
							<IncludePath>{{ project.includePathsASM | join(';') | replace('\\', '/') }}</IncludePath>
						</VariousControls>
					</Aads>
					<LDads>
						<umfTarg>{% if project.advanced_options.keil_linker_cfg == none %}1{% else %}0{% endif %}</umfTarg>
						<Ropi>0</Ropi>
						<Rwpi>0</Rwpi>
						<noStLib>0</noStLib>
						<RepFail>1</RepFail>
						<useFile>0</useFile>
						<TextAddressRange/>
						<DataAddressRange/>
						<pXoBase/>
						{%+ if project.advanced_options.keil_linker_cfg == none %}<ScatterFile/>{% else %}<ScatterFile>{{ project.advanced_options.keil_linker_cfg }}</ScatterFile>{% endif +%}
						<IncludeLibs/>
						<IncludeLibsPath/>
						<Misc/>
						<LinkerInputFile/>
						<DisabledWarnings/>
					</LDads>
				</TargetArmAds>
			</TargetOption>
			<Groups>
				{% set ns = namespace(found=false) %}
				{% if project.groups -%}
				{% for group in project.groups recursive %}
				{% set outer_loop = loop %}
				{% if loop.depth == 1 %}
					{% set ns.prefix = "" %}
				{% endif %}
				{% if group.files %}
				<Group>
					<GroupName>{% if ns.prefix != "" %}{{ ns.prefix | replace('%', '/') }}/{% endif %}{{ group.name }}</GroupName>
					<Files>
						{% if group.files %}
						{% for file in group.files %}
						{# 屏蔽IAR特殊路径 #}
						{% if file.path is not iar_toolkit_path %}
						<File>
							<FileName>{{ file.name }}</FileName>
							<FileType>{{ file_types[file.type] }}</FileType>
							<FilePath>{{ file.path | replace('\\', '/') }}</FilePath>
						</File>
						{% endif %}
						{% endfor %}
						{% endif %}
					</Files>
				</Group>
				{% endif %}
				{% if ns.prefix != "" -%}
					{% set ns.prefix = ns.prefix ~ "%%" ~ group.name %}
				{% else %}
					{% set ns.prefix = group.name %}
				{%- endif %}
				{% if group.groups -%}
				{{- outer_loop(group.groups) }}
				{%- endif %}
				{%- set ns.prefix = ns.prefix.split('%%')[:-1] | join('/') %}
				{%- endfor %}
				{%- endif %}
				{# Place project root files in the $$ROOT$$ group #}
				{% if project.files %}
				<Group>
					<GroupName>$$ROOT$$</GroupName>
					<Files>
						{% for file in project.files %}
						{# 屏蔽IAR特殊路径 #}
						{% if file.path is not iar_toolkit_path %}
						<File>
							<FileName>{{ file.name }}</FileName>
							<FileType>{{ file_types[file.type] }}</FileType>
							<FilePath>{{ file.path | replace('\\', '/') }}</FilePath>
						</File>
						{% endif %}
						{% endfor %}
					</Files>
				</Group>
				{% endif %}
			</Groups>
		</Target>
	</Targets>
</Project>
