[project]
name = "bim2rdf"
dynamic = ["version"]
description = "Convert BIM data to RDF models"
authors = [
    { name = "Majid alDosari",  email = "majid.aldosari@pnnl.gov" },
    { name = "Trisha Gupta",    email = "trisha.gupta@pnnl.gov" }, # mapping
]
readme = "README.md"
requires-python = "==3.11.9"
dependencies = [
    #"bim2rdf",
    'dynaconf', # 'python-dotenv', vendored in dyanconf https://www.dynaconf.com/#vendored
    # 'local' ones
    "bim2rdf_rules",
    "bim2rdf_mapping",
    #"ontologies", # ? need this? or just create a ttl loader rule
    "bim2rdf_speckle",
    "rdflib", # just to make a nice looking ttl bc pyoxigraph doesn't. otherwise dont want to use!
]
[project.optional-dependencies]
spklauto = ["bim2rdf_spklauto"]
cli = ["fire", "pyyaml"]

[project.scripts]
bim2rdf = "bim2rdf.cli:run"

[dependency-groups]
dev = [
    #'aider-install', can uvx aider-install
    "ipython", "ipdb",
    "icecream",
    #"marimo", use uv run --with marimo ...
    "cachier",
    # automation
    "project",
    "bim2rdf[spklauto, cli]", #nice
    # testing
    "pytest", "pytest-regressions",
    "rdflib", # just to check if the same
]

[tool.uv.sources]
# just listing the dirs alphabetically
bim2rdf-mapping =   { workspace=true}
#ontologies =     { path = 'ontologies'      , editable = true} 
project =           { workspace=true}
bim2rdf-rules =     { workspace=true}
bim2rdf-speckle =   { workspace=true}
bim2rdf-spklauto =  { workspace=true}
[tool.uv.workspace]
members = [ # same order as above
"mapping",
"project",
"rules",
"speckle",
"spklauto",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
[tool.hatch.version]
path = "src/bim2rdf/__init__.py"