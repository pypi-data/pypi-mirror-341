x,y,x_label,metric,split,lower,upper,prompt
0,0.72,epoch,score,dev,,,"{""identifier"": ""cs_email:b636ec9f"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""User\"">\nYou are a routing assistant. Given a message with the body \""{body}\"" and the subject \""{subject}\"", analyze the content to decide who should handle this inquiry. If the message is about getting started, basic setup, user onboarding, or routine marketing issues such as social media questions, route the inquiry to 'tom'. If the message contains technical queries including API integration, bug reports, technical issues like crashes or compatibility concerns, route the inquiry to 'jerry'. If the message involves investor communications, press releases, legal matters, data privacy, billing issues, or partnership decisions, route the inquiry to 'ben'. Output a dictionary with a single key 'route_to' whose value is the correct person ('tom', 'jerry', or 'ben').\n</TO_OPTIMIZE>"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain_core"", ""prompts"", ""structured"", ""StructuredPrompt""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""cs_email"", ""lc_hub_commit_hash"": ""ec65d706f83368d81e9294f0df16c446d52543a16a68e66842d2c4f244436538""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""HumanMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""template"": ""You are a routing assistant. Given a message with the body \""{body}\"" and the subject \""{subject}\"", analyze the content to decide who should handle this inquiry. If the message is about getting started, basic setup, user onboarding, or routine marketing issues such as social media questions, route the inquiry to 'tom'. If the message contains technical queries including API integration, bug reports, technical issues like crashes or compatibility concerns, route the inquiry to 'jerry'. If the message involves investor communications, press releases, legal matters, data privacy, billing issues, or partnership decisions, route the inquiry to 'ben'. Output a dictionary with a single key 'route_to' whose value is the correct person ('tom', 'jerry', or 'ben')."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}], ""schema_"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""name"": ""StructuredPrompt""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-3.5-turbo"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""presence_penalty"": 0.0, ""frequency_penalty"": 0.0, ""top_p"": 1.0}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""Response"", ""description"": ""Triage the email"", ""parameters"": {""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}, ""strict"": true}}], ""parallel_tool_calls"": false, ""structured_output_format"": {""kwargs"": {""method"": ""function_calling""}, ""schema"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""tool_choice"": {""type"": ""function"", ""function"": {""name"": ""Response""}}}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
1,0.72,epoch,score,dev,,,"{""identifier"": ""langchain-ai/cs_email"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""User\"">\nYou are a routing assistant. Given a message with the body \""{body}\"" and the subject \""{subject}\"", analyze the content to decide who should handle this inquiry. If the message is about getting started, basic setup, user onboarding, or routine marketing issues such as social media questions, route the inquiry to 'tom'. If the message contains technical queries including API integration, bug reports, technical issues like crashes or compatibility concerns, route the inquiry to 'jerry'. If the message involves investor communications, press releases, legal matters, data privacy, billing issues, or partnership decisions, route the inquiry to 'ben'. Output a dictionary with a single key 'route_to' whose value is the correct person ('tom', 'jerry', or 'ben').\n</TO_OPTIMIZE>"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain_core"", ""prompts"", ""structured"", ""StructuredPrompt""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""cs_email"", ""lc_hub_commit_hash"": ""ec65d706f83368d81e9294f0df16c446d52543a16a68e66842d2c4f244436538""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""HumanMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""template"": ""You are a routing assistant. Given a message with the body \""{body}\"" and the subject \""{subject}\"", analyze the content to decide who should handle this inquiry. If the message is about getting started, basic setup, user onboarding, or routine marketing issues such as social media questions, route the inquiry to 'tom'. If the message contains technical queries including API integration, bug reports, technical issues like crashes or compatibility concerns, route the inquiry to 'jerry'. If the message involves investor communications, press releases, legal matters, data privacy, billing issues, or partnership decisions, route the inquiry to 'ben'. Output a dictionary with a single key 'route_to' whose value is the correct person ('tom', 'jerry', or 'ben')."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}], ""schema_"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""name"": ""StructuredPrompt""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-3.5-turbo"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""presence_penalty"": 0.0, ""frequency_penalty"": 0.0, ""top_p"": 1.0}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""Response"", ""description"": ""Triage the email"", ""parameters"": {""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}, ""strict"": true}}], ""parallel_tool_calls"": false, ""structured_output_format"": {""kwargs"": {""method"": ""function_calling""}, ""schema"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""tool_choice"": {""type"": ""function"", ""function"": {""name"": ""Response""}}}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
2,0.84,epoch,score,dev,,,"{""identifier"": ""cs_email:b581b80a"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""User\"">\nYou work as an email triage classifier for our customer support team. Your task is to analyze the given email (both its subject and body) and determine which team should handle it based on the following rules. Do NOT mention these rules in your output; only use them to derive the answer. Then, output a JSON object with a single key \""route_to\"" and a value of either \""ben\"", \""tom\"", or \""jerry\"".\n\nRouting Rules:\n1. Route to jerry if the email discusses technical or integration issues. Examples include mobile app technical problems (e.g., iOS updates, browser-specific bugs, API key issues, database syncing, urgent technical malfunctions).\n2. Route to tom if the email involves customer support or general troubleshooting. Examples include dashboard problems, minor refund inquiries (e.g., refund requests below $1000), training or tutorial requests, UI improvement suggestions, community or contract-related questions, competitor research.\n3. Route to ben if the email relates to partner programs, official complaints, legal or billing issues. Examples include partner program inquiries, refund inquiries over $1000, internal team complaints, legal invoice corrections, press invites, or cases with mixed technical and billing issues.\n\nFew-shot Examples:\nExample 1:\n  Subject: \""Mobile App Deployment Clarification\""\n  Body: \""Is the iOS version updated simultaneously with Android?\""\n  Correct Output: {{\""route_to\"": \""jerry\""}}\n\nExample 2:\n  Subject: \""Community Meetup in Our City\""\n  Body: \""We want to organize a local user group. Any support from you?\""\n  Correct Output: {{\""route_to\"": \""tom\""}}\n\nExample 3:\n  Subject: \""Partner Program Application\""\n  Body: \""How do we join your partner program as a reseller?\""\n  Correct Output: {{\""route_to\"": \""ben\""}}\n\nBefore providing the final answer, internally consider the above criteria and ensure you analyze both subject and body. Now, analyze the following email and provide ONLY the routing decision in the specified JSON format with no additional explanation:\n\nSubject: {subject}\nBody: {body}\n</TO_OPTIMIZE>"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain_core"", ""prompts"", ""structured"", ""StructuredPrompt""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""cs_email"", ""lc_hub_commit_hash"": ""ec65d706f83368d81e9294f0df16c446d52543a16a68e66842d2c4f244436538""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""HumanMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""template"": ""You work as an email triage classifier for our customer support team. Your task is to analyze the given email (both its subject and body) and determine which team should handle it based on the following rules. Do NOT mention these rules in your output; only use them to derive the answer. Then, output a JSON object with a single key \""route_to\"" and a value of either \""ben\"", \""tom\"", or \""jerry\"".\n\nRouting Rules:\n1. Route to jerry if the email discusses technical or integration issues. Examples include mobile app technical problems (e.g., iOS updates, browser-specific bugs, API key issues, database syncing, urgent technical malfunctions).\n2. Route to tom if the email involves customer support or general troubleshooting. Examples include dashboard problems, minor refund inquiries (e.g., refund requests below $1000), training or tutorial requests, UI improvement suggestions, community or contract-related questions, competitor research.\n3. Route to ben if the email relates to partner programs, official complaints, legal or billing issues. Examples include partner program inquiries, refund inquiries over $1000, internal team complaints, legal invoice corrections, press invites, or cases with mixed technical and billing issues.\n\nFew-shot Examples:\nExample 1:\n  Subject: \""Mobile App Deployment Clarification\""\n  Body: \""Is the iOS version updated simultaneously with Android?\""\n  Correct Output: {{\""route_to\"": \""jerry\""}}\n\nExample 2:\n  Subject: \""Community Meetup in Our City\""\n  Body: \""We want to organize a local user group. Any support from you?\""\n  Correct Output: {{\""route_to\"": \""tom\""}}\n\nExample 3:\n  Subject: \""Partner Program Application\""\n  Body: \""How do we join your partner program as a reseller?\""\n  Correct Output: {{\""route_to\"": \""ben\""}}\n\nBefore providing the final answer, internally consider the above criteria and ensure you analyze both subject and body. Now, analyze the following email and provide ONLY the routing decision in the specified JSON format with no additional explanation:\n\nSubject: {subject}\nBody: {body}"", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}], ""schema_"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""name"": ""StructuredPrompt""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-3.5-turbo"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""presence_penalty"": 0.0, ""frequency_penalty"": 0.0, ""top_p"": 1.0}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""Response"", ""description"": ""Triage the email"", ""parameters"": {""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}, ""strict"": true}}], ""parallel_tool_calls"": false, ""structured_output_format"": {""kwargs"": {""method"": ""function_calling""}, ""schema"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""tool_choice"": {""type"": ""function"", ""function"": {""name"": ""Response""}}}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
3,0.84,epoch,score,dev,,,"{""identifier"": ""langchain-ai/cs_email"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""User\"">\nYou work as an email triage classifier for our customer support team. Your task is to analyze the given email (both its subject and body) and determine which team should handle it based on the following rules. Do NOT mention these rules in your output; only use them to derive the answer. Then, output a JSON object with a single key \""route_to\"" and a value of either \""ben\"", \""tom\"", or \""jerry\"".\n\nRouting Rules:\n1. Route to jerry if the email discusses technical or integration issues. Examples include mobile app technical problems (e.g., iOS updates, browser-specific bugs, API key issues, database syncing, urgent technical malfunctions).\n2. Route to tom if the email involves customer support or general troubleshooting. Examples include dashboard problems, minor refund inquiries (e.g., refund requests below $1000), training or tutorial requests, UI improvement suggestions, community or contract-related questions, competitor research.\n3. Route to ben if the email relates to partner programs, official complaints, legal or billing issues. Examples include partner program inquiries, refund inquiries over $1000, internal team complaints, legal invoice corrections, press invites, or cases with mixed technical and billing issues.\n\nFew-shot Examples:\nExample 1:\n  Subject: \""Mobile App Deployment Clarification\""\n  Body: \""Is the iOS version updated simultaneously with Android?\""\n  Correct Output: {{\""route_to\"": \""jerry\""}}\n\nExample 2:\n  Subject: \""Community Meetup in Our City\""\n  Body: \""We want to organize a local user group. Any support from you?\""\n  Correct Output: {{\""route_to\"": \""tom\""}}\n\nExample 3:\n  Subject: \""Partner Program Application\""\n  Body: \""How do we join your partner program as a reseller?\""\n  Correct Output: {{\""route_to\"": \""ben\""}}\n\nBefore providing the final answer, internally consider the above criteria and ensure you analyze both subject and body. Now, analyze the following email and provide ONLY the routing decision in the specified JSON format with no additional explanation:\n\nSubject: {subject}\nBody: {body}\n</TO_OPTIMIZE>"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain_core"", ""prompts"", ""structured"", ""StructuredPrompt""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""cs_email"", ""lc_hub_commit_hash"": ""ec65d706f83368d81e9294f0df16c446d52543a16a68e66842d2c4f244436538""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""HumanMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""template"": ""You work as an email triage classifier for our customer support team. Your task is to analyze the given email (both its subject and body) and determine which team should handle it based on the following rules. Do NOT mention these rules in your output; only use them to derive the answer. Then, output a JSON object with a single key \""route_to\"" and a value of either \""ben\"", \""tom\"", or \""jerry\"".\n\nRouting Rules:\n1. Route to jerry if the email discusses technical or integration issues. Examples include mobile app technical problems (e.g., iOS updates, browser-specific bugs, API key issues, database syncing, urgent technical malfunctions).\n2. Route to tom if the email involves customer support or general troubleshooting. Examples include dashboard problems, minor refund inquiries (e.g., refund requests below $1000), training or tutorial requests, UI improvement suggestions, community or contract-related questions, competitor research.\n3. Route to ben if the email relates to partner programs, official complaints, legal or billing issues. Examples include partner program inquiries, refund inquiries over $1000, internal team complaints, legal invoice corrections, press invites, or cases with mixed technical and billing issues.\n\nFew-shot Examples:\nExample 1:\n  Subject: \""Mobile App Deployment Clarification\""\n  Body: \""Is the iOS version updated simultaneously with Android?\""\n  Correct Output: {{\""route_to\"": \""jerry\""}}\n\nExample 2:\n  Subject: \""Community Meetup in Our City\""\n  Body: \""We want to organize a local user group. Any support from you?\""\n  Correct Output: {{\""route_to\"": \""tom\""}}\n\nExample 3:\n  Subject: \""Partner Program Application\""\n  Body: \""How do we join your partner program as a reseller?\""\n  Correct Output: {{\""route_to\"": \""ben\""}}\n\nBefore providing the final answer, internally consider the above criteria and ensure you analyze both subject and body. Now, analyze the following email and provide ONLY the routing decision in the specified JSON format with no additional explanation:\n\nSubject: {subject}\nBody: {body}"", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}], ""schema_"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""name"": ""StructuredPrompt""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-3.5-turbo"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""presence_penalty"": 0.0, ""frequency_penalty"": 0.0, ""top_p"": 1.0}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""Response"", ""description"": ""Triage the email"", ""parameters"": {""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}, ""strict"": true}}], ""parallel_tool_calls"": false, ""structured_output_format"": {""kwargs"": {""method"": ""function_calling""}, ""schema"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""tool_choice"": {""type"": ""function"", ""function"": {""name"": ""Response""}}}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
4,0.84,epoch,score,dev,,,"{""identifier"": ""langchain-ai/cs_email"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""User\"">\nYou work as an email triage classifier for our customer support team. Your task is to analyze the given email (both its subject and body) and determine which team should handle it based on the following rules. Do NOT mention these rules in your output; only use them to derive the answer. Then, output a JSON object with a single key \""route_to\"" and a value of either \""ben\"", \""tom\"", or \""jerry\"".\n\nRouting Rules:\n1. Route to jerry if the email discusses technical or integration issues. Examples include mobile app technical problems (e.g., iOS updates, browser-specific bugs, API key issues, database syncing, urgent technical malfunctions).\n2. Route to tom if the email involves customer support or general troubleshooting. Examples include dashboard problems, minor refund inquiries (e.g., refund requests below $1000), training or tutorial requests, UI improvement suggestions, community or contract-related questions, competitor research.\n3. Route to ben if the email relates to partner programs, official complaints, legal or billing issues. Examples include partner program inquiries, refund inquiries over $1000, internal team complaints, legal invoice corrections, press invites, or cases with mixed technical and billing issues.\n\nFew-shot Examples:\nExample 1:\n  Subject: \""Mobile App Deployment Clarification\""\n  Body: \""Is the iOS version updated simultaneously with Android?\""\n  Correct Output: {{\""route_to\"": \""jerry\""}}\n\nExample 2:\n  Subject: \""Community Meetup in Our City\""\n  Body: \""We want to organize a local user group. Any support from you?\""\n  Correct Output: {{\""route_to\"": \""tom\""}}\n\nExample 3:\n  Subject: \""Partner Program Application\""\n  Body: \""How do we join your partner program as a reseller?\""\n  Correct Output: {{\""route_to\"": \""ben\""}}\n\nBefore providing the final answer, internally consider the above criteria and ensure you analyze both subject and body. Now, analyze the following email and provide ONLY the routing decision in the specified JSON format with no additional explanation:\n\nSubject: {subject}\nBody: {body}\n</TO_OPTIMIZE>"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain_core"", ""prompts"", ""structured"", ""StructuredPrompt""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""cs_email"", ""lc_hub_commit_hash"": ""ec65d706f83368d81e9294f0df16c446d52543a16a68e66842d2c4f244436538""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""HumanMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""template"": ""You work as an email triage classifier for our customer support team. Your task is to analyze the given email (both its subject and body) and determine which team should handle it based on the following rules. Do NOT mention these rules in your output; only use them to derive the answer. Then, output a JSON object with a single key \""route_to\"" and a value of either \""ben\"", \""tom\"", or \""jerry\"".\n\nRouting Rules:\n1. Route to jerry if the email discusses technical or integration issues. Examples include mobile app technical problems (e.g., iOS updates, browser-specific bugs, API key issues, database syncing, urgent technical malfunctions).\n2. Route to tom if the email involves customer support or general troubleshooting. Examples include dashboard problems, minor refund inquiries (e.g., refund requests below $1000), training or tutorial requests, UI improvement suggestions, community or contract-related questions, competitor research.\n3. Route to ben if the email relates to partner programs, official complaints, legal or billing issues. Examples include partner program inquiries, refund inquiries over $1000, internal team complaints, legal invoice corrections, press invites, or cases with mixed technical and billing issues.\n\nFew-shot Examples:\nExample 1:\n  Subject: \""Mobile App Deployment Clarification\""\n  Body: \""Is the iOS version updated simultaneously with Android?\""\n  Correct Output: {{\""route_to\"": \""jerry\""}}\n\nExample 2:\n  Subject: \""Community Meetup in Our City\""\n  Body: \""We want to organize a local user group. Any support from you?\""\n  Correct Output: {{\""route_to\"": \""tom\""}}\n\nExample 3:\n  Subject: \""Partner Program Application\""\n  Body: \""How do we join your partner program as a reseller?\""\n  Correct Output: {{\""route_to\"": \""ben\""}}\n\nBefore providing the final answer, internally consider the above criteria and ensure you analyze both subject and body. Now, analyze the following email and provide ONLY the routing decision in the specified JSON format with no additional explanation:\n\nSubject: {subject}\nBody: {body}"", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}], ""schema_"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""name"": ""StructuredPrompt""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-3.5-turbo"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""presence_penalty"": 0.0, ""frequency_penalty"": 0.0, ""top_p"": 1.0}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""Response"", ""description"": ""Triage the email"", ""parameters"": {""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}, ""strict"": true}}], ""parallel_tool_calls"": false, ""structured_output_format"": {""kwargs"": {""method"": ""function_calling""}, ""schema"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""tool_choice"": {""type"": ""function"", ""function"": {""name"": ""Response""}}}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
5,0.84,epoch,score,dev,,,"{""identifier"": ""langchain-ai/cs_email"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""User\"">\nYou work as an email triage classifier for our customer support team. Your task is to analyze the given email (both its subject and body) and determine which team should handle it based on the following rules. Do NOT mention these rules in your output; only use them to derive the answer. Then, output a JSON object with a single key \""route_to\"" and a value of either \""ben\"", \""tom\"", or \""jerry\"".\n\nRouting Rules:\n1. Route to jerry if the email discusses technical or integration issues. Examples include mobile app technical problems (e.g., iOS updates, browser-specific bugs, API key issues, database syncing, urgent technical malfunctions).\n2. Route to tom if the email involves customer support or general troubleshooting. Examples include dashboard problems, minor refund inquiries (e.g., refund requests below $1000), training or tutorial requests, UI improvement suggestions, community or contract-related questions, competitor research.\n3. Route to ben if the email relates to partner programs, official complaints, legal or billing issues. Examples include partner program inquiries, refund inquiries over $1000, internal team complaints, legal invoice corrections, press invites, or cases with mixed technical and billing issues.\n\nFew-shot Examples:\nExample 1:\n  Subject: \""Mobile App Deployment Clarification\""\n  Body: \""Is the iOS version updated simultaneously with Android?\""\n  Correct Output: {{\""route_to\"": \""jerry\""}}\n\nExample 2:\n  Subject: \""Community Meetup in Our City\""\n  Body: \""We want to organize a local user group. Any support from you?\""\n  Correct Output: {{\""route_to\"": \""tom\""}}\n\nExample 3:\n  Subject: \""Partner Program Application\""\n  Body: \""How do we join your partner program as a reseller?\""\n  Correct Output: {{\""route_to\"": \""ben\""}}\n\nBefore providing the final answer, internally consider the above criteria and ensure you analyze both subject and body. Now, analyze the following email and provide ONLY the routing decision in the specified JSON format with no additional explanation:\n\nSubject: {subject}\nBody: {body}\n</TO_OPTIMIZE>"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain_core"", ""prompts"", ""structured"", ""StructuredPrompt""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""cs_email"", ""lc_hub_commit_hash"": ""ec65d706f83368d81e9294f0df16c446d52543a16a68e66842d2c4f244436538""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""HumanMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""template"": ""You work as an email triage classifier for our customer support team. Your task is to analyze the given email (both its subject and body) and determine which team should handle it based on the following rules. Do NOT mention these rules in your output; only use them to derive the answer. Then, output a JSON object with a single key \""route_to\"" and a value of either \""ben\"", \""tom\"", or \""jerry\"".\n\nRouting Rules:\n1. Route to jerry if the email discusses technical or integration issues. Examples include mobile app technical problems (e.g., iOS updates, browser-specific bugs, API key issues, database syncing, urgent technical malfunctions).\n2. Route to tom if the email involves customer support or general troubleshooting. Examples include dashboard problems, minor refund inquiries (e.g., refund requests below $1000), training or tutorial requests, UI improvement suggestions, community or contract-related questions, competitor research.\n3. Route to ben if the email relates to partner programs, official complaints, legal or billing issues. Examples include partner program inquiries, refund inquiries over $1000, internal team complaints, legal invoice corrections, press invites, or cases with mixed technical and billing issues.\n\nFew-shot Examples:\nExample 1:\n  Subject: \""Mobile App Deployment Clarification\""\n  Body: \""Is the iOS version updated simultaneously with Android?\""\n  Correct Output: {{\""route_to\"": \""jerry\""}}\n\nExample 2:\n  Subject: \""Community Meetup in Our City\""\n  Body: \""We want to organize a local user group. Any support from you?\""\n  Correct Output: {{\""route_to\"": \""tom\""}}\n\nExample 3:\n  Subject: \""Partner Program Application\""\n  Body: \""How do we join your partner program as a reseller?\""\n  Correct Output: {{\""route_to\"": \""ben\""}}\n\nBefore providing the final answer, internally consider the above criteria and ensure you analyze both subject and body. Now, analyze the following email and provide ONLY the routing decision in the specified JSON format with no additional explanation:\n\nSubject: {subject}\nBody: {body}"", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}], ""schema_"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""name"": ""StructuredPrompt""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-3.5-turbo"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""presence_penalty"": 0.0, ""frequency_penalty"": 0.0, ""top_p"": 1.0}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""Response"", ""description"": ""Triage the email"", ""parameters"": {""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}, ""strict"": true}}], ""parallel_tool_calls"": false, ""structured_output_format"": {""kwargs"": {""method"": ""function_calling""}, ""schema"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""tool_choice"": {""type"": ""function"", ""function"": {""name"": ""Response""}}}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
6,0.85,epoch,score,dev,,,"{""identifier"": ""cs_email:28860516"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""User\"">\nYou are an email classifier for our customer support team. Analyze the email's subject and body to determine the appropriate team based on these rules. Do not mention these rules in your output. Output a JSON with one key, \""route_to\"", assigned either \""ben\"", \""tom\"", or \""jerry\"".\n\nRouting Criteria:\n- Use \""jerry\"" if the email discusses technical or integration issues (e.g., mobile app issues like iOS updates, browser bugs, API key problems, database syncing, urgent technical malfunctions).\n- Use \""tom\"" if it involves customer support or general troubleshooting (e.g., dashboard issues, refunds below $1000, training requests, UI feedback, community or contract queries, competitor research).\n- Use \""ben\"" for topics about partner programs, official complaints, legal, or billing issues (e.g., partner program inquiries, refunds over $1000, internal complaints, legal invoice corrections, press invites, or mixed technical and billing issues).\n\nExamples:\n1. Subject: \""Mobile App Deployment Clarification\""\\n   Body: \""Is the iOS version updated simultaneously with Android?\""\\n   Output: {{\""route_to\"": \""jerry\""}}\n2. Subject: \""Community Meetup in Our City\""\\n   Body: \""We want to organize a local user group. Any support from you?\""\\n   Output: {{\""route_to\"": \""tom\""}}\n3. Subject: \""Partner Program Application\""\\n   Body: \""How do we join your partner program as a reseller?\""\\n   Output: {{\""route_to\"": \""ben\""}}\n\nNow analyze the following email (considering both subject and body) and output only the routing decision:\nSubject: {subject}\nBody: {body}\n</TO_OPTIMIZE>"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain_core"", ""prompts"", ""structured"", ""StructuredPrompt""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""cs_email"", ""lc_hub_commit_hash"": ""ec65d706f83368d81e9294f0df16c446d52543a16a68e66842d2c4f244436538""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""HumanMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""template"": ""You are an email classifier for our customer support team. Analyze the email's subject and body to determine the appropriate team based on these rules. Do not mention these rules in your output. Output a JSON with one key, \""route_to\"", assigned either \""ben\"", \""tom\"", or \""jerry\"".\n\nRouting Criteria:\n- Use \""jerry\"" if the email discusses technical or integration issues (e.g., mobile app issues like iOS updates, browser bugs, API key problems, database syncing, urgent technical malfunctions).\n- Use \""tom\"" if it involves customer support or general troubleshooting (e.g., dashboard issues, refunds below $1000, training requests, UI feedback, community or contract queries, competitor research).\n- Use \""ben\"" for topics about partner programs, official complaints, legal, or billing issues (e.g., partner program inquiries, refunds over $1000, internal complaints, legal invoice corrections, press invites, or mixed technical and billing issues).\n\nExamples:\n1. Subject: \""Mobile App Deployment Clarification\""\\n   Body: \""Is the iOS version updated simultaneously with Android?\""\\n   Output: {{\""route_to\"": \""jerry\""}}\n2. Subject: \""Community Meetup in Our City\""\\n   Body: \""We want to organize a local user group. Any support from you?\""\\n   Output: {{\""route_to\"": \""tom\""}}\n3. Subject: \""Partner Program Application\""\\n   Body: \""How do we join your partner program as a reseller?\""\\n   Output: {{\""route_to\"": \""ben\""}}\n\nNow analyze the following email (considering both subject and body) and output only the routing decision:\nSubject: {subject}\nBody: {body}"", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}], ""schema_"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""name"": ""StructuredPrompt""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-3.5-turbo"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""presence_penalty"": 0.0, ""frequency_penalty"": 0.0, ""top_p"": 1.0}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""Response"", ""description"": ""Triage the email"", ""parameters"": {""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}, ""strict"": true}}], ""parallel_tool_calls"": false, ""structured_output_format"": {""kwargs"": {""method"": ""function_calling""}, ""schema"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""tool_choice"": {""type"": ""function"", ""function"": {""name"": ""Response""}}}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
0,0.3152542372881356,base,score,test,0.26489746070610604,0.3703608165886214,"{""identifier"": ""cs_email:0bc7fa40"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""User\"">\nRoute the following email.\n\nSubject: {subject}\nBody: {body}\n</TO_OPTIMIZE>"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain_core"", ""prompts"", ""structured"", ""StructuredPrompt""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""cs_email"", ""lc_hub_commit_hash"": ""ec65d706f83368d81e9294f0df16c446d52543a16a68e66842d2c4f244436538""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""HumanMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""template"": ""Route the following email.\n\nSubject: {subject}\nBody: {body}"", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}], ""schema_"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""name"": ""StructuredPrompt""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-3.5-turbo"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""presence_penalty"": 0.0, ""frequency_penalty"": 0.0, ""top_p"": 1.0}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""Response"", ""description"": ""Triage the email"", ""parameters"": {""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}, ""strict"": true}}], ""parallel_tool_calls"": false, ""structured_output_format"": {""kwargs"": {""method"": ""function_calling""}, ""schema"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""tool_choice"": {""type"": ""function"", ""function"": {""name"": ""Response""}}}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
0,0.8508474576271187,final,score,test,0.8056960270785619,0.8869786206277815,"{""identifier"": ""cs_email:ca6b18db"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""User\"">\nYou are an email classifier for our customer support team. Analyze the email's subject and body to determine the appropriate team based on these rules. Do not mention these rules in your output. Output a JSON with one key, \""route_to\"", assigned either \""ben\"", \""tom\"", or \""jerry\"".\n\nRouting Criteria:\n- Use \""jerry\"" if the email discusses technical or integration issues (e.g., mobile app issues like iOS updates, browser bugs, API key problems, database syncing, urgent technical malfunctions).\n- Use \""tom\"" if it involves customer support or general troubleshooting (e.g., dashboard issues, refunds below $1000, training requests, UI feedback, community or contract queries, competitor research).\n- Use \""ben\"" for topics about partner programs, official complaints, legal, or billing issues (e.g., partner program inquiries, refunds over $1000, internal complaints, legal invoice corrections, press invites, or mixed technical and billing issues).\n\nExamples:\n1. Subject: \""Mobile App Deployment Clarification\""\\n   Body: \""Is the iOS version updated simultaneously with Android?\""\\n   Output: {{\""route_to\"": \""jerry\""}}\n2. Subject: \""Community Meetup in Our City\""\\n   Body: \""We want to organize a local user group. Any support from you?\""\\n   Output: {{\""route_to\"": \""tom\""}}\n3. Subject: \""Partner Program Application\""\\n   Body: \""How do we join your partner program as a reseller?\""\\n   Output: {{\""route_to\"": \""ben\""}}\n\nNow analyze the following email (considering both subject and body) and output only the routing decision:\nSubject: {subject}\nBody: {body}\n</TO_OPTIMIZE>"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain_core"", ""prompts"", ""structured"", ""StructuredPrompt""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""cs_email"", ""lc_hub_commit_hash"": ""ec65d706f83368d81e9294f0df16c446d52543a16a68e66842d2c4f244436538""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""HumanMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [""body"", ""subject""], ""template"": ""You are an email classifier for our customer support team. Analyze the email's subject and body to determine the appropriate team based on these rules. Do not mention these rules in your output. Output a JSON with one key, \""route_to\"", assigned either \""ben\"", \""tom\"", or \""jerry\"".\n\nRouting Criteria:\n- Use \""jerry\"" if the email discusses technical or integration issues (e.g., mobile app issues like iOS updates, browser bugs, API key problems, database syncing, urgent technical malfunctions).\n- Use \""tom\"" if it involves customer support or general troubleshooting (e.g., dashboard issues, refunds below $1000, training requests, UI feedback, community or contract queries, competitor research).\n- Use \""ben\"" for topics about partner programs, official complaints, legal, or billing issues (e.g., partner program inquiries, refunds over $1000, internal complaints, legal invoice corrections, press invites, or mixed technical and billing issues).\n\nExamples:\n1. Subject: \""Mobile App Deployment Clarification\""\\n   Body: \""Is the iOS version updated simultaneously with Android?\""\\n   Output: {{\""route_to\"": \""jerry\""}}\n2. Subject: \""Community Meetup in Our City\""\\n   Body: \""We want to organize a local user group. Any support from you?\""\\n   Output: {{\""route_to\"": \""tom\""}}\n3. Subject: \""Partner Program Application\""\\n   Body: \""How do we join your partner program as a reseller?\""\\n   Output: {{\""route_to\"": \""ben\""}}\n\nNow analyze the following email (considering both subject and body) and output only the routing decision:\nSubject: {subject}\nBody: {body}"", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}], ""schema_"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""name"": ""StructuredPrompt""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-3.5-turbo"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""presence_penalty"": 0.0, ""frequency_penalty"": 0.0, ""top_p"": 1.0}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""Response"", ""description"": ""Triage the email"", ""parameters"": {""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}, ""strict"": true}}], ""parallel_tool_calls"": false, ""structured_output_format"": {""kwargs"": {""method"": ""function_calling""}, ""schema"": {""title"": ""Response"", ""description"": ""Triage the email"", ""type"": ""object"", ""properties"": {""route_to"": {""type"": ""string"", ""description"": ""of the email"", ""enum"": [""ben"", ""tom"", ""jerry""]}}, ""required"": [""route_to""], ""strict"": true, ""additionalProperties"": false}}, ""tool_choice"": {""type"": ""function"", ""function"": {""name"": ""Response""}}}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
