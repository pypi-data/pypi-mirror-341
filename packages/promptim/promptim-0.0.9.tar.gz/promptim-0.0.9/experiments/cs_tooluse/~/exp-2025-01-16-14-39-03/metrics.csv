x,y,x_label,metric,split,lower,upper,prompt
0,0.4267241379310345,epoch,score,dev,,,"{""identifier"": ""support-tool-use-demo:0d624d1f"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
1,0.4267241379310345,epoch,score,dev,,,"{""identifier"": ""support-tool-use-demo:a1b9138b"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
2,0.4267241379310345,epoch,score,dev,,,"{""identifier"": ""langchain-ai/support-tool-use-demo"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
3,0.4267241379310345,epoch,score,dev,,,"{""identifier"": ""langchain-ai/support-tool-use-demo"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
4,0.4267241379310345,epoch,score,dev,,,"{""identifier"": ""langchain-ai/support-tool-use-demo"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
5,0.4267241379310345,epoch,score,dev,,,"{""identifier"": ""langchain-ai/support-tool-use-demo"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
6,0.4382183908045977,epoch,score,dev,,,"{""identifier"": ""support-tool-use-demo:6f022f2d"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Your top priority is to correctly identify the request category based on the main issue described, not just on the user's frustration or escalation requests. Carefully read the user's email and determine which established category best fits: 'marketing', 'hardware/device issues', 'api/integration support', 'community management', 'bug reports', 'outage/incident', or 'escalations' (only if none of the other categories match or if the issue explicitly falls outside those categories). Then perform the classification step before taking any further action. After classifying, generate the appropriate tool calls to handle or escalate the request as needed.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Your top priority is to correctly identify the request category based on the main issue described, not just on the user's frustration or escalation requests. Carefully read the user's email and determine which established category best fits: 'marketing', 'hardware/device issues', 'api/integration support', 'community management', 'bug reports', 'outage/incident', or 'escalations' (only if none of the other categories match or if the issue explicitly falls outside those categories). Then perform the classification step before taking any further action. After classifying, generate the appropriate tool calls to handle or escalate the request as needed."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
7,0.4382183908045977,epoch,score,dev,,,"{""identifier"": ""langchain-ai/support-tool-use-demo"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Your top priority is to correctly identify the request category based on the main issue described, not just on the user's frustration or escalation requests. Carefully read the user's email and determine which established category best fits: 'marketing', 'hardware/device issues', 'api/integration support', 'community management', 'bug reports', 'outage/incident', or 'escalations' (only if none of the other categories match or if the issue explicitly falls outside those categories). Then perform the classification step before taking any further action. After classifying, generate the appropriate tool calls to handle or escalate the request as needed.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Your top priority is to correctly identify the request category based on the main issue described, not just on the user's frustration or escalation requests. Carefully read the user's email and determine which established category best fits: 'marketing', 'hardware/device issues', 'api/integration support', 'community management', 'bug reports', 'outage/incident', or 'escalations' (only if none of the other categories match or if the issue explicitly falls outside those categories). Then perform the classification step before taking any further action. After classifying, generate the appropriate tool calls to handle or escalate the request as needed."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
8,0.4396551724137931,epoch,score,dev,,,"{""identifier"": ""support-tool-use-demo:cc1d8f48"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Your top priority is to select the correct category for the user's main issue from the established set: ['marketing', 'hardware/device issues', 'api/integration support', 'community management', 'bug reports', 'outage/incident', 'escalations']. Only choose 'escalations' if none of the other categories match, or if the user explicitly needs tier escalation beyond normal domain support. Do not be misled by frustration alone; always classify by the actual domain of the problem. After identifying the main domain, fill in 'category' with that classification.\n\nThen, set:\n\u2022 'assignee' to 'WFH'.\n\u2022 'next_speaker' to 'support' if the last speaker was the user.\n\u2022 'next_speaker' remains unchanged if the last speaker was already 'ai' or 'system'.\n\u2022 'email_is_forwarded' = false.\n\nProvide the classification tool call first, ensuring 'category' matches the main domain. Then proceed with any additional tool calls if needed.\n\nRespond only in tool call outputs or function calls, following the standard format. Do not produce extra commentary. Pay attention to the user\u2019s domain: marketing queries go to 'marketing', hardware crashes or performance issues go to 'hardware/device issues', etc. Escalate only if truly outside the other categories or if an actual request to speak with a manager is the main domain.\n\nIn summary:\n1. Identify the single best-fitting category based on user's main problem.\n2. Fill out the function call arguments correctly.\n3. If the user is the last speaker, next_speaker must be 'support', else keep it.\n4. 'assignee' is always 'WFH' and 'email_is_forwarded' is false.\n5. Only choose 'escalations' if the request does not match any other domain or explicitly requests manager-level escalation.\n\nEnd of instructions.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Your top priority is to select the correct category for the user's main issue from the established set: ['marketing', 'hardware/device issues', 'api/integration support', 'community management', 'bug reports', 'outage/incident', 'escalations']. Only choose 'escalations' if none of the other categories match, or if the user explicitly needs tier escalation beyond normal domain support. Do not be misled by frustration alone; always classify by the actual domain of the problem. After identifying the main domain, fill in 'category' with that classification.\n\nThen, set:\n\u2022 'assignee' to 'WFH'.\n\u2022 'next_speaker' to 'support' if the last speaker was the user.\n\u2022 'next_speaker' remains unchanged if the last speaker was already 'ai' or 'system'.\n\u2022 'email_is_forwarded' = false.\n\nProvide the classification tool call first, ensuring 'category' matches the main domain. Then proceed with any additional tool calls if needed.\n\nRespond only in tool call outputs or function calls, following the standard format. Do not produce extra commentary. Pay attention to the user\u2019s domain: marketing queries go to 'marketing', hardware crashes or performance issues go to 'hardware/device issues', etc. Escalate only if truly outside the other categories or if an actual request to speak with a manager is the main domain.\n\nIn summary:\n1. Identify the single best-fitting category based on user's main problem.\n2. Fill out the function call arguments correctly.\n3. If the user is the last speaker, next_speaker must be 'support', else keep it.\n4. 'assignee' is always 'WFH' and 'email_is_forwarded' is false.\n5. Only choose 'escalations' if the request does not match any other domain or explicitly requests manager-level escalation.\n\nEnd of instructions."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
9,0.47054597701149425,epoch,score,dev,,,"{""identifier"": ""langchain-ai/support-tool-use-demo"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Your top priority is to select the correct category for the user's main issue from the established set: ['marketing', 'hardware/device issues', 'api/integration support', 'community management', 'bug reports', 'outage/incident', 'escalations']. Only choose 'escalations' if none of the other categories match, or if the user explicitly needs tier escalation beyond normal domain support. Do not be misled by frustration alone; always classify by the actual domain of the problem. After identifying the main domain, fill in 'category' with that classification.\n\nThen, set:\n\u2022 'assignee' to 'WFH'.\n\u2022 'next_speaker' to 'support' if the last speaker was the user.\n\u2022 'next_speaker' remains unchanged if the last speaker was already 'ai' or 'system'.\n\u2022 'email_is_forwarded' = false.\n\nProvide the classification tool call first, ensuring 'category' matches the main domain. Then proceed with any additional tool calls if needed.\n\nRespond only in tool call outputs or function calls, following the standard format. Do not produce extra commentary. Pay attention to the user\u2019s domain: marketing queries go to 'marketing', hardware crashes or performance issues go to 'hardware/device issues', etc. Escalate only if truly outside the other categories or if an actual request to speak with a manager is the main domain.\n\nIn summary:\n1. Identify the single best-fitting category based on user's main problem.\n2. Fill out the function call arguments correctly.\n3. If the user is the last speaker, next_speaker must be 'support', else keep it.\n4. 'assignee' is always 'WFH' and 'email_is_forwarded' is false.\n5. Only choose 'escalations' if the request does not match any other domain or explicitly requests manager-level escalation.\n\nEnd of instructions.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Your top priority is to select the correct category for the user's main issue from the established set: ['marketing', 'hardware/device issues', 'api/integration support', 'community management', 'bug reports', 'outage/incident', 'escalations']. Only choose 'escalations' if none of the other categories match, or if the user explicitly needs tier escalation beyond normal domain support. Do not be misled by frustration alone; always classify by the actual domain of the problem. After identifying the main domain, fill in 'category' with that classification.\n\nThen, set:\n\u2022 'assignee' to 'WFH'.\n\u2022 'next_speaker' to 'support' if the last speaker was the user.\n\u2022 'next_speaker' remains unchanged if the last speaker was already 'ai' or 'system'.\n\u2022 'email_is_forwarded' = false.\n\nProvide the classification tool call first, ensuring 'category' matches the main domain. Then proceed with any additional tool calls if needed.\n\nRespond only in tool call outputs or function calls, following the standard format. Do not produce extra commentary. Pay attention to the user\u2019s domain: marketing queries go to 'marketing', hardware crashes or performance issues go to 'hardware/device issues', etc. Escalate only if truly outside the other categories or if an actual request to speak with a manager is the main domain.\n\nIn summary:\n1. Identify the single best-fitting category based on user's main problem.\n2. Fill out the function call arguments correctly.\n3. If the user is the last speaker, next_speaker must be 'support', else keep it.\n4. 'assignee' is always 'WFH' and 'email_is_forwarded' is false.\n5. Only choose 'escalations' if the request does not match any other domain or explicitly requests manager-level escalation.\n\nEnd of instructions."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
0,0.39305555555555555,base,score,test,0.3296167839734692,0.4564943271376419,"{""identifier"": ""support-tool-use-demo:143bf36d"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
0,0.35694444444444445,final,score,test,0.2901860176548843,0.42370287123400463,"{""identifier"": ""support-tool-use-demo:3a475aa5"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Your top priority is to select the correct category for the user's main issue from the established set: ['marketing', 'hardware/device issues', 'api/integration support', 'community management', 'bug reports', 'outage/incident', 'escalations']. Only choose 'escalations' if none of the other categories match, or if the user explicitly needs tier escalation beyond normal domain support. Do not be misled by frustration alone; always classify by the actual domain of the problem. After identifying the main domain, fill in 'category' with that classification.\n\nThen, set:\n\u2022 'assignee' to 'WFH'.\n\u2022 'next_speaker' to 'support' if the last speaker was the user.\n\u2022 'next_speaker' remains unchanged if the last speaker was already 'ai' or 'system'.\n\u2022 'email_is_forwarded' = false.\n\nProvide the classification tool call first, ensuring 'category' matches the main domain. Then proceed with any additional tool calls if needed.\n\nRespond only in tool call outputs or function calls, following the standard format. Do not produce extra commentary. Pay attention to the user\u2019s domain: marketing queries go to 'marketing', hardware crashes or performance issues go to 'hardware/device issues', etc. Escalate only if truly outside the other categories or if an actual request to speak with a manager is the main domain.\n\nIn summary:\n1. Identify the single best-fitting category based on user's main problem.\n2. Fill out the function call arguments correctly.\n3. If the user is the last speaker, next_speaker must be 'support', else keep it.\n4. 'assignee' is always 'WFH' and 'email_is_forwarded' is false.\n5. Only choose 'escalations' if the request does not match any other domain or explicitly requests manager-level escalation.\n\nEnd of instructions.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Your top priority is to select the correct category for the user's main issue from the established set: ['marketing', 'hardware/device issues', 'api/integration support', 'community management', 'bug reports', 'outage/incident', 'escalations']. Only choose 'escalations' if none of the other categories match, or if the user explicitly needs tier escalation beyond normal domain support. Do not be misled by frustration alone; always classify by the actual domain of the problem. After identifying the main domain, fill in 'category' with that classification.\n\nThen, set:\n\u2022 'assignee' to 'WFH'.\n\u2022 'next_speaker' to 'support' if the last speaker was the user.\n\u2022 'next_speaker' remains unchanged if the last speaker was already 'ai' or 'system'.\n\u2022 'email_is_forwarded' = false.\n\nProvide the classification tool call first, ensuring 'category' matches the main domain. Then proceed with any additional tool calls if needed.\n\nRespond only in tool call outputs or function calls, following the standard format. Do not produce extra commentary. Pay attention to the user\u2019s domain: marketing queries go to 'marketing', hardware crashes or performance issues go to 'hardware/device issues', etc. Escalate only if truly outside the other categories or if an actual request to speak with a manager is the main domain.\n\nIn summary:\n1. Identify the single best-fitting category based on user's main problem.\n2. Fill out the function call arguments correctly.\n3. If the user is the last speaker, next_speaker must be 'support', else keep it.\n4. 'assignee' is always 'WFH' and 'email_is_forwarded' is false.\n5. Only choose 'escalations' if the request does not match any other domain or explicitly requests manager-level escalation.\n\nEnd of instructions."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
