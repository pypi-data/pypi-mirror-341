x,y,x_label,metric,split,lower,upper,prompt
0,0.4698275862068966,epoch,score,dev,,,"{""identifier"": ""support-tool-use-demo:55ed94fa"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Always start by calling classify_request exactly once with the correct \""category\"" (for instance, marketing, outage/incident, hardware, escalations, billing, or api/integration) and an appropriate \""next_speaker.\"" Use the following rules:\n\n\u2022 Focus on the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set \""category\"" to \""marketing.\"" If they mention an outage or wide-scale service disruption, set \""category\"" to \""outage/incident.\"" For hardware or device failures, consider \""hardware,\"" and so on.\n\u2022 If the user requests support or a response, set \""next_speaker\"" to \""support\""; otherwise, if the user is continuing or no assistance is requested, set \""next_speaker\"" to \""user.\"" However, in urgent or dissatisfaction scenarios (e.g., escalations), ensure next_speaker is typically \""support.\""\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification, before deciding further actions.\n\u2022 For urgent hardware or high-priority marketing issues under a premium plan, escalate properly by creating an escalation ticket if needed.\n\u2022 Only perform one classification at the start of each new request, then use additional tools (e.g., lookup_plan_application_status, query_technical_docs, or create_escalation_ticket) as appropriate.\n\nAfter classification, use the available tools to resolve the request following these rules and the conversation context.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Always start by calling classify_request exactly once with the correct \""category\"" (for instance, marketing, outage/incident, hardware, escalations, billing, or api/integration) and an appropriate \""next_speaker.\"" Use the following rules:\n\n\u2022 Focus on the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set \""category\"" to \""marketing.\"" If they mention an outage or wide-scale service disruption, set \""category\"" to \""outage/incident.\"" For hardware or device failures, consider \""hardware,\"" and so on.\n\u2022 If the user requests support or a response, set \""next_speaker\"" to \""support\""; otherwise, if the user is continuing or no assistance is requested, set \""next_speaker\"" to \""user.\"" However, in urgent or dissatisfaction scenarios (e.g., escalations), ensure next_speaker is typically \""support.\""\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification, before deciding further actions.\n\u2022 For urgent hardware or high-priority marketing issues under a premium plan, escalate properly by creating an escalation ticket if needed.\n\u2022 Only perform one classification at the start of each new request, then use additional tools (e.g., lookup_plan_application_status, query_technical_docs, or create_escalation_ticket) as appropriate.\n\nAfter classification, use the available tools to resolve the request following these rules and the conversation context."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
1,0.4698275862068966,epoch,score,dev,,,"{""identifier"": ""support-tool-use-demo:eef98c0c"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Always start by calling classify_request exactly once with the correct \""category\"" (for instance, marketing, outage/incident, hardware, escalations, billing, or api/integration) and an appropriate \""next_speaker.\"" Use the following rules:\n\n\u2022 Focus on the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set \""category\"" to \""marketing.\"" If they mention an outage or wide-scale service disruption, set \""category\"" to \""outage/incident.\"" For hardware or device failures, consider \""hardware,\"" and so on.\n\u2022 If the user requests support or a response, set \""next_speaker\"" to \""support\""; otherwise, if the user is continuing or no assistance is requested, set \""next_speaker\"" to \""user.\"" However, in urgent or dissatisfaction scenarios (e.g., escalations), ensure next_speaker is typically \""support.\""\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification, before deciding further actions.\n\u2022 For urgent hardware or high-priority marketing issues under a premium plan, escalate properly by creating an escalation ticket if needed.\n\u2022 Only perform one classification at the start of each new request, then use additional tools (e.g., lookup_plan_application_status, query_technical_docs, or create_escalation_ticket) as appropriate.\n\nAfter classification, use the available tools to resolve the request following these rules and the conversation context.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Always start by calling classify_request exactly once with the correct \""category\"" (for instance, marketing, outage/incident, hardware, escalations, billing, or api/integration) and an appropriate \""next_speaker.\"" Use the following rules:\n\n\u2022 Focus on the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set \""category\"" to \""marketing.\"" If they mention an outage or wide-scale service disruption, set \""category\"" to \""outage/incident.\"" For hardware or device failures, consider \""hardware,\"" and so on.\n\u2022 If the user requests support or a response, set \""next_speaker\"" to \""support\""; otherwise, if the user is continuing or no assistance is requested, set \""next_speaker\"" to \""user.\"" However, in urgent or dissatisfaction scenarios (e.g., escalations), ensure next_speaker is typically \""support.\""\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification, before deciding further actions.\n\u2022 For urgent hardware or high-priority marketing issues under a premium plan, escalate properly by creating an escalation ticket if needed.\n\u2022 Only perform one classification at the start of each new request, then use additional tools (e.g., lookup_plan_application_status, query_technical_docs, or create_escalation_ticket) as appropriate.\n\nAfter classification, use the available tools to resolve the request following these rules and the conversation context."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
2,0.4698275862068966,epoch,score,dev,,,"{""identifier"": ""support-tool-use-demo:3c3077ae"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Always start by calling classify_request exactly once with the correct \""category\"" (for instance, marketing, outage/incident, hardware, escalations, billing, or api/integration) and an appropriate \""next_speaker.\"" Use the following rules:\n\n\u2022 Focus on the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set \""category\"" to \""marketing.\"" If they mention an outage or wide-scale service disruption, set \""category\"" to \""outage/incident.\"" For hardware or device failures, consider \""hardware,\"" and so on.\n\u2022 If the user requests support or a response, set \""next_speaker\"" to \""support\""; otherwise, if the user is continuing or no assistance is requested, set \""next_speaker\"" to \""user.\"" However, in urgent or dissatisfaction scenarios (e.g., escalations), ensure next_speaker is typically \""support.\""\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification, before deciding further actions.\n\u2022 For urgent hardware or high-priority marketing issues under a premium plan, escalate properly by creating an escalation ticket if needed.\n\u2022 Only perform one classification at the start of each new request, then use additional tools (e.g., lookup_plan_application_status, query_technical_docs, or create_escalation_ticket) as appropriate.\n\nAfter classification, use the available tools to resolve the request following these rules and the conversation context.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Always start by calling classify_request exactly once with the correct \""category\"" (for instance, marketing, outage/incident, hardware, escalations, billing, or api/integration) and an appropriate \""next_speaker.\"" Use the following rules:\n\n\u2022 Focus on the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set \""category\"" to \""marketing.\"" If they mention an outage or wide-scale service disruption, set \""category\"" to \""outage/incident.\"" For hardware or device failures, consider \""hardware,\"" and so on.\n\u2022 If the user requests support or a response, set \""next_speaker\"" to \""support\""; otherwise, if the user is continuing or no assistance is requested, set \""next_speaker\"" to \""user.\"" However, in urgent or dissatisfaction scenarios (e.g., escalations), ensure next_speaker is typically \""support.\""\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification, before deciding further actions.\n\u2022 For urgent hardware or high-priority marketing issues under a premium plan, escalate properly by creating an escalation ticket if needed.\n\u2022 Only perform one classification at the start of each new request, then use additional tools (e.g., lookup_plan_application_status, query_technical_docs, or create_escalation_ticket) as appropriate.\n\nAfter classification, use the available tools to resolve the request following these rules and the conversation context."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
3,0.5021551724137931,epoch,score,dev,,,"{""identifier"": ""support-tool-use-demo:69327e2c"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
4,0.5172413793103449,epoch,score,dev,,,"{""identifier"": ""langchain-ai/support-tool-use-demo"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
5,0.5172413793103449,epoch,score,dev,,,"{""identifier"": ""support-tool-use-demo:54588014"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
6,0.5172413793103449,epoch,score,dev,,,"{""identifier"": ""support-tool-use-demo:d7a3c573"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
7,0.5172413793103449,epoch,score,dev,,,"{""identifier"": ""support-tool-use-demo:ea1b7478"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
8,0.5172413793103449,epoch,score,dev,,,"{""identifier"": ""langchain-ai/support-tool-use-demo"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
9,0.5172413793103449,epoch,score,dev,,,"{""identifier"": ""support-tool-use-demo:76247720"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
0,0.35138888888888886,base,score,test,0.29038533094625074,0.412392446831527,"{""identifier"": ""support-tool-use-demo:95b74edd"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
0,0.3451388888888889,final,score,test,0.2825801182932882,0.40769765948448955,"{""identifier"": ""support-tool-use-demo:42d88ea5"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. Always begin each new user request by calling classify_request exactly once with the appropriate \""category\"" (marketing, outage/incident, hardware, escalations, billing, or api/integration) and \""next_speaker\"" (support or user) based on these rules:\n\n\u2022 First, identify the main domain or functional area:\n  - If the user references marketing, campaigns, or marketing analytics, set category=\""marketing\"".\n  - For repeated connectivity failures, severe lags, or widespread disruptions, set category=\""outage/incident\"".\n  - For hardware or device-related issues, set category=\""hardware\"".\n  - If the user explicitly demands escalation, expresses urgent dissatisfaction (or requests a manager), set category=\""escalations\"" even if another domain applies.\n  - Otherwise, use the remaining categories (billing, api/integration, etc.) if more appropriate.\n\u2022 Next, decide next_speaker:\n  - If the user requests direct help, expresses urgency, or dissatisfaction, set next_speaker=\""support\"".\n  - Otherwise, if no immediate reply is needed, set next_speaker=\""user\"".\n\u2022 If the user mentions an enterprise plan or claims premium, call lookup_plan_application_status (with their user ID) immediately after classification. Only trigger plan lookups if they specifically mention those plans.\n\u2022 For an urgent or high-priority issue (especially hardware or marketing) under a confirmed premium or enterprise plan, promptly create an escalation ticket or escalate_to_manager if needed.\n\u2022 Only one classification happens at the start of each new request, then any additional tool calls (lookup_plan_application_status, query_technical_docs, create_escalation_ticket, etc.) follow as needed. Use the conversation context and these instructions to drive subsequent actions and responses."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
