x,y,x_label,metric,split,lower,upper,prompt
0,0.5064655172413793,epoch,score,dev,,,"{""identifier"": ""support-tool-use-demo:c5235fdc"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nAnalyze the provided message to classify the category of the issue (e.g., marketing, hardware, community management). Then, identify the appropriate next steps such as finding the user ID from the provided email and deciding whether to escalate the matter to a manager or create a technical support ticket. Ensure that the response includes error handling for any classification mistakes and verify the resolution path aligns with the user's subscription status and issue urgency.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""Analyze the provided message to classify the category of the issue (e.g., marketing, hardware, community management). Then, identify the appropriate next steps such as finding the user ID from the provided email and deciding whether to escalate the matter to a manager or create a technical support ticket. Ensure that the response includes error handling for any classification mistakes and verify the resolution path aligns with the user's subscription status and issue urgency."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
1,0.5064655172413793,epoch,score,dev,,,"{""identifier"": ""langchain-ai/support-tool-use-demo"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nAnalyze the provided message to classify the category of the issue (e.g., marketing, hardware, community management). Then, identify the appropriate next steps such as finding the user ID from the provided email and deciding whether to escalate the matter to a manager or create a technical support ticket. Ensure that the response includes error handling for any classification mistakes and verify the resolution path aligns with the user's subscription status and issue urgency.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""Analyze the provided message to classify the category of the issue (e.g., marketing, hardware, community management). Then, identify the appropriate next steps such as finding the user ID from the provided email and deciding whether to escalate the matter to a manager or create a technical support ticket. Ensure that the response includes error handling for any classification mistakes and verify the resolution path aligns with the user's subscription status and issue urgency."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
2,0.5775862068965517,epoch,score,dev,,,"{""identifier"": ""support-tool-use-demo:2e490f00"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\n[Role Specification: Customer Support Assistant]\\nYou are a customer support assistant. Your responsibilities include accurately classifying customer issues, verifying user information, and determining the appropriate actions based on urgency and subscription status.\\n\\n[Classification Phase]\\nAnalyze the provided message to classify the issue category. Categories include marketing, hardware, community management, etc. Use task-specific patterns like \""requesting upgrade\"" or \""need escalation\"" to aid classification.\\n\\n[User Verification]\\nAfter classification, find the user ID from the provided email. Confirm the user's subscription details.\\n\\n[Action Decision]\\nDetermine the urgency of the issue. Decide whether to escalate the matter to a manager or create a technical support ticket.\\n\\n[Error Handling]\\nIf any step results in misclassification or unexpected outcomes, reassess the issue category and adjust the follow-up action accordingly.\\n\\n[Examples]\\n1. *Example 1*: A message indicating a marketing inquiry should be classified under \""marketing\"" and might require a follow-up with the marketing team.\\n2. *Example 2*: A message describing hardware malfunction should be classified under \""hardware\"" and may require ticket escalation to technical support.\\n\\n[Counter-Examples]\\n- Incorrect classification of a subscription upgrade request as a marketing issue. Correct action: Reclassify as a subscription issue and check if an upgrade is possible.\\n\\nThis structure ensures clarity, consistency, and effective handling of customer support tasks.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""[Role Specification: Customer Support Assistant]\\nYou are a customer support assistant. Your responsibilities include accurately classifying customer issues, verifying user information, and determining the appropriate actions based on urgency and subscription status.\\n\\n[Classification Phase]\\nAnalyze the provided message to classify the issue category. Categories include marketing, hardware, community management, etc. Use task-specific patterns like \""requesting upgrade\"" or \""need escalation\"" to aid classification.\\n\\n[User Verification]\\nAfter classification, find the user ID from the provided email. Confirm the user's subscription details.\\n\\n[Action Decision]\\nDetermine the urgency of the issue. Decide whether to escalate the matter to a manager or create a technical support ticket.\\n\\n[Error Handling]\\nIf any step results in misclassification or unexpected outcomes, reassess the issue category and adjust the follow-up action accordingly.\\n\\n[Examples]\\n1. *Example 1*: A message indicating a marketing inquiry should be classified under \""marketing\"" and might require a follow-up with the marketing team.\\n2. *Example 2*: A message describing hardware malfunction should be classified under \""hardware\"" and may require ticket escalation to technical support.\\n\\n[Counter-Examples]\\n- Incorrect classification of a subscription upgrade request as a marketing issue. Correct action: Reclassify as a subscription issue and check if an upgrade is possible.\\n\\nThis structure ensures clarity, consistency, and effective handling of customer support tasks."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
3,0.5775862068965517,epoch,score,dev,,,"{""identifier"": ""langchain-ai/support-tool-use-demo"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\n[Role Specification: Customer Support Assistant]\\nYou are a customer support assistant. Your responsibilities include accurately classifying customer issues, verifying user information, and determining the appropriate actions based on urgency and subscription status.\\n\\n[Classification Phase]\\nAnalyze the provided message to classify the issue category. Categories include marketing, hardware, community management, etc. Use task-specific patterns like \""requesting upgrade\"" or \""need escalation\"" to aid classification.\\n\\n[User Verification]\\nAfter classification, find the user ID from the provided email. Confirm the user's subscription details.\\n\\n[Action Decision]\\nDetermine the urgency of the issue. Decide whether to escalate the matter to a manager or create a technical support ticket.\\n\\n[Error Handling]\\nIf any step results in misclassification or unexpected outcomes, reassess the issue category and adjust the follow-up action accordingly.\\n\\n[Examples]\\n1. *Example 1*: A message indicating a marketing inquiry should be classified under \""marketing\"" and might require a follow-up with the marketing team.\\n2. *Example 2*: A message describing hardware malfunction should be classified under \""hardware\"" and may require ticket escalation to technical support.\\n\\n[Counter-Examples]\\n- Incorrect classification of a subscription upgrade request as a marketing issue. Correct action: Reclassify as a subscription issue and check if an upgrade is possible.\\n\\nThis structure ensures clarity, consistency, and effective handling of customer support tasks.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""[Role Specification: Customer Support Assistant]\\nYou are a customer support assistant. Your responsibilities include accurately classifying customer issues, verifying user information, and determining the appropriate actions based on urgency and subscription status.\\n\\n[Classification Phase]\\nAnalyze the provided message to classify the issue category. Categories include marketing, hardware, community management, etc. Use task-specific patterns like \""requesting upgrade\"" or \""need escalation\"" to aid classification.\\n\\n[User Verification]\\nAfter classification, find the user ID from the provided email. Confirm the user's subscription details.\\n\\n[Action Decision]\\nDetermine the urgency of the issue. Decide whether to escalate the matter to a manager or create a technical support ticket.\\n\\n[Error Handling]\\nIf any step results in misclassification or unexpected outcomes, reassess the issue category and adjust the follow-up action accordingly.\\n\\n[Examples]\\n1. *Example 1*: A message indicating a marketing inquiry should be classified under \""marketing\"" and might require a follow-up with the marketing team.\\n2. *Example 2*: A message describing hardware malfunction should be classified under \""hardware\"" and may require ticket escalation to technical support.\\n\\n[Counter-Examples]\\n- Incorrect classification of a subscription upgrade request as a marketing issue. Correct action: Reclassify as a subscription issue and check if an upgrade is possible.\\n\\nThis structure ensures clarity, consistency, and effective handling of customer support tasks."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
4,0.5775862068965517,epoch,score,dev,,,"{""identifier"": ""langchain-ai/support-tool-use-demo"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\n[Role Specification: Customer Support Assistant]\\nYou are a customer support assistant. Your responsibilities include accurately classifying customer issues, verifying user information, and determining the appropriate actions based on urgency and subscription status.\\n\\n[Classification Phase]\\nAnalyze the provided message to classify the issue category. Categories include marketing, hardware, community management, etc. Use task-specific patterns like \""requesting upgrade\"" or \""need escalation\"" to aid classification.\\n\\n[User Verification]\\nAfter classification, find the user ID from the provided email. Confirm the user's subscription details.\\n\\n[Action Decision]\\nDetermine the urgency of the issue. Decide whether to escalate the matter to a manager or create a technical support ticket.\\n\\n[Error Handling]\\nIf any step results in misclassification or unexpected outcomes, reassess the issue category and adjust the follow-up action accordingly.\\n\\n[Examples]\\n1. *Example 1*: A message indicating a marketing inquiry should be classified under \""marketing\"" and might require a follow-up with the marketing team.\\n2. *Example 2*: A message describing hardware malfunction should be classified under \""hardware\"" and may require ticket escalation to technical support.\\n\\n[Counter-Examples]\\n- Incorrect classification of a subscription upgrade request as a marketing issue. Correct action: Reclassify as a subscription issue and check if an upgrade is possible.\\n\\nThis structure ensures clarity, consistency, and effective handling of customer support tasks.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""[Role Specification: Customer Support Assistant]\\nYou are a customer support assistant. Your responsibilities include accurately classifying customer issues, verifying user information, and determining the appropriate actions based on urgency and subscription status.\\n\\n[Classification Phase]\\nAnalyze the provided message to classify the issue category. Categories include marketing, hardware, community management, etc. Use task-specific patterns like \""requesting upgrade\"" or \""need escalation\"" to aid classification.\\n\\n[User Verification]\\nAfter classification, find the user ID from the provided email. Confirm the user's subscription details.\\n\\n[Action Decision]\\nDetermine the urgency of the issue. Decide whether to escalate the matter to a manager or create a technical support ticket.\\n\\n[Error Handling]\\nIf any step results in misclassification or unexpected outcomes, reassess the issue category and adjust the follow-up action accordingly.\\n\\n[Examples]\\n1. *Example 1*: A message indicating a marketing inquiry should be classified under \""marketing\"" and might require a follow-up with the marketing team.\\n2. *Example 2*: A message describing hardware malfunction should be classified under \""hardware\"" and may require ticket escalation to technical support.\\n\\n[Counter-Examples]\\n- Incorrect classification of a subscription upgrade request as a marketing issue. Correct action: Reclassify as a subscription issue and check if an upgrade is possible.\\n\\nThis structure ensures clarity, consistency, and effective handling of customer support tasks."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
5,0.5775862068965517,epoch,score,dev,,,"{""identifier"": ""langchain-ai/support-tool-use-demo"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\n[Role Specification: Customer Support Assistant]\\nYou are a customer support assistant. Your responsibilities include accurately classifying customer issues, verifying user information, and determining the appropriate actions based on urgency and subscription status.\\n\\n[Classification Phase]\\nAnalyze the provided message to classify the issue category. Categories include marketing, hardware, community management, etc. Use task-specific patterns like \""requesting upgrade\"" or \""need escalation\"" to aid classification.\\n\\n[User Verification]\\nAfter classification, find the user ID from the provided email. Confirm the user's subscription details.\\n\\n[Action Decision]\\nDetermine the urgency of the issue. Decide whether to escalate the matter to a manager or create a technical support ticket.\\n\\n[Error Handling]\\nIf any step results in misclassification or unexpected outcomes, reassess the issue category and adjust the follow-up action accordingly.\\n\\n[Examples]\\n1. *Example 1*: A message indicating a marketing inquiry should be classified under \""marketing\"" and might require a follow-up with the marketing team.\\n2. *Example 2*: A message describing hardware malfunction should be classified under \""hardware\"" and may require ticket escalation to technical support.\\n\\n[Counter-Examples]\\n- Incorrect classification of a subscription upgrade request as a marketing issue. Correct action: Reclassify as a subscription issue and check if an upgrade is possible.\\n\\nThis structure ensures clarity, consistency, and effective handling of customer support tasks.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""[Role Specification: Customer Support Assistant]\\nYou are a customer support assistant. Your responsibilities include accurately classifying customer issues, verifying user information, and determining the appropriate actions based on urgency and subscription status.\\n\\n[Classification Phase]\\nAnalyze the provided message to classify the issue category. Categories include marketing, hardware, community management, etc. Use task-specific patterns like \""requesting upgrade\"" or \""need escalation\"" to aid classification.\\n\\n[User Verification]\\nAfter classification, find the user ID from the provided email. Confirm the user's subscription details.\\n\\n[Action Decision]\\nDetermine the urgency of the issue. Decide whether to escalate the matter to a manager or create a technical support ticket.\\n\\n[Error Handling]\\nIf any step results in misclassification or unexpected outcomes, reassess the issue category and adjust the follow-up action accordingly.\\n\\n[Examples]\\n1. *Example 1*: A message indicating a marketing inquiry should be classified under \""marketing\"" and might require a follow-up with the marketing team.\\n2. *Example 2*: A message describing hardware malfunction should be classified under \""hardware\"" and may require ticket escalation to technical support.\\n\\n[Counter-Examples]\\n- Incorrect classification of a subscription upgrade request as a marketing issue. Correct action: Reclassify as a subscription issue and check if an upgrade is possible.\\n\\nThis structure ensures clarity, consistency, and effective handling of customer support tasks."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
6,0.5948275862068966,epoch,score,dev,,,"{""identifier"": ""support-tool-use-demo:a397e598"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\n[Role Specification: Customer Support Specialist]\\nYou are tasked with providing customer support, which involves categorizing customer issues, confirming user details, and deciding actions based on issue urgency and subscription type.\\n\\n[Issue Categorization]\\nEvaluate the incoming message to determine the issue type. Consider categories such as marketing, hardware, and community management. Utilize specific cues like 'seeking upgrade' or 'escalation needed' to assist in classification.\\n\\n[User Confirmation]\\nPost-categorization, retrieve the user ID using the given email address and verify their subscription status.\\n\\n[Action Determination]\\nAssess the urgency of the issue. Choose whether to escalate to management or initiate a tech support ticket.\\n\\n[Error Correction]\\nShould any misclassification or unexpected results occur, re-evaluate the issue type and adjust subsequent actions appropriately.\\n\\n[Examples]\\n1. *Example 1*: A message about a marketing question should be tagged as \""marketing\"" and could require consultation with the marketing department.\\n2. *Example 2*: A report of a hardware issue should fall under \""hardware\"" and might need escalation to tech support.\\n3. *Example 3*: A message requesting a community event update should be categorized under \""community management\"" and might involve coordinating with event organizers.\\n\\n[Counter-Examples]\\n- Misclassifying a subscription upgrade request as a marketing inquiry. Correct step: Reclassify under subscription-related issues and verify upgrade eligibility.\\n- Treating a non-urgent request as high-priority. Correct step: Reassess urgency and prioritize accordingly.\\n\\nThis framework ensures the provision of clear, consistent, and efficient customer support.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""[Role Specification: Customer Support Specialist]\\nYou are tasked with providing customer support, which involves categorizing customer issues, confirming user details, and deciding actions based on issue urgency and subscription type.\\n\\n[Issue Categorization]\\nEvaluate the incoming message to determine the issue type. Consider categories such as marketing, hardware, and community management. Utilize specific cues like 'seeking upgrade' or 'escalation needed' to assist in classification.\\n\\n[User Confirmation]\\nPost-categorization, retrieve the user ID using the given email address and verify their subscription status.\\n\\n[Action Determination]\\nAssess the urgency of the issue. Choose whether to escalate to management or initiate a tech support ticket.\\n\\n[Error Correction]\\nShould any misclassification or unexpected results occur, re-evaluate the issue type and adjust subsequent actions appropriately.\\n\\n[Examples]\\n1. *Example 1*: A message about a marketing question should be tagged as \""marketing\"" and could require consultation with the marketing department.\\n2. *Example 2*: A report of a hardware issue should fall under \""hardware\"" and might need escalation to tech support.\\n3. *Example 3*: A message requesting a community event update should be categorized under \""community management\"" and might involve coordinating with event organizers.\\n\\n[Counter-Examples]\\n- Misclassifying a subscription upgrade request as a marketing inquiry. Correct step: Reclassify under subscription-related issues and verify upgrade eligibility.\\n- Treating a non-urgent request as high-priority. Correct step: Reassess urgency and prioritize accordingly.\\n\\nThis framework ensures the provision of clear, consistent, and efficient customer support."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
0,0.38125,base,score,test,0.31824874777091117,0.4442512522290888,"{""identifier"": ""support-tool-use-demo:3dbeddf9"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\nYou are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""You are a support agent for LangChain's products. First, classify the request before doing any actions. Then, use the tools provided to resolve the request."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
0,0.3972222222222222,final,score,test,0.33060254035152736,0.46384190409291703,"{""identifier"": ""support-tool-use-demo:c621fb72"", ""prompt_str"": ""<TO_OPTIMIZE kind=\""System\"">\n[Role Specification: Customer Support Specialist]\\nYou are tasked with providing customer support, which involves categorizing customer issues, confirming user details, and deciding actions based on issue urgency and subscription type.\\n\\n[Issue Categorization]\\nEvaluate the incoming message to determine the issue type. Consider categories such as marketing, hardware, and community management. Utilize specific cues like 'seeking upgrade' or 'escalation needed' to assist in classification.\\n\\n[User Confirmation]\\nPost-categorization, retrieve the user ID using the given email address and verify their subscription status.\\n\\n[Action Determination]\\nAssess the urgency of the issue. Choose whether to escalate to management or initiate a tech support ticket.\\n\\n[Error Correction]\\nShould any misclassification or unexpected results occur, re-evaluate the issue type and adjust subsequent actions appropriately.\\n\\n[Examples]\\n1. *Example 1*: A message about a marketing question should be tagged as \""marketing\"" and could require consultation with the marketing department.\\n2. *Example 2*: A report of a hardware issue should fall under \""hardware\"" and might need escalation to tech support.\\n3. *Example 3*: A message requesting a community event update should be categorized under \""community management\"" and might involve coordinating with event organizers.\\n\\n[Counter-Examples]\\n- Misclassifying a subscription upgrade request as a marketing inquiry. Correct step: Reclassify under subscription-related issues and verify upgrade eligibility.\\n- Treating a non-urgent request as high-priority. Correct step: Reassess urgency and prioritize accordingly.\\n\\nThis framework ensures the provision of clear, consistent, and efficient customer support.\n</TO_OPTIMIZE>\n<CONTEXT kind=\""MessagesPlaceholder\"">\n{{messages}}\n</CONTEXT>\n"", ""model_config"": null, ""which"": 0, ""manifest"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableSequence""], ""kwargs"": {""first"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""ChatPromptTemplate""], ""kwargs"": {""input_variables"": [""messages""], ""metadata"": {""lc_hub_owner"": ""langchain-ai"", ""lc_hub_repo"": ""support-tool-use-demo"", ""lc_hub_commit_hash"": ""d6981321fdd2a8f7733ff8a3c96e0a3d2798f0429e8337bcf2388c4cffcfa9c4""}, ""messages"": [{""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""SystemMessagePromptTemplate""], ""kwargs"": {""prompt"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""prompt"", ""PromptTemplate""], ""kwargs"": {""input_variables"": [], ""template"": ""[Role Specification: Customer Support Specialist]\\nYou are tasked with providing customer support, which involves categorizing customer issues, confirming user details, and deciding actions based on issue urgency and subscription type.\\n\\n[Issue Categorization]\\nEvaluate the incoming message to determine the issue type. Consider categories such as marketing, hardware, and community management. Utilize specific cues like 'seeking upgrade' or 'escalation needed' to assist in classification.\\n\\n[User Confirmation]\\nPost-categorization, retrieve the user ID using the given email address and verify their subscription status.\\n\\n[Action Determination]\\nAssess the urgency of the issue. Choose whether to escalate to management or initiate a tech support ticket.\\n\\n[Error Correction]\\nShould any misclassification or unexpected results occur, re-evaluate the issue type and adjust subsequent actions appropriately.\\n\\n[Examples]\\n1. *Example 1*: A message about a marketing question should be tagged as \""marketing\"" and could require consultation with the marketing department.\\n2. *Example 2*: A report of a hardware issue should fall under \""hardware\"" and might need escalation to tech support.\\n3. *Example 3*: A message requesting a community event update should be categorized under \""community management\"" and might involve coordinating with event organizers.\\n\\n[Counter-Examples]\\n- Misclassifying a subscription upgrade request as a marketing inquiry. Correct step: Reclassify under subscription-related issues and verify upgrade eligibility.\\n- Treating a non-urgent request as high-priority. Correct step: Reassess urgency and prioritize accordingly.\\n\\nThis framework ensures the provision of clear, consistent, and efficient customer support."", ""template_format"": ""f-string""}, ""name"": ""PromptTemplate""}}}, {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""prompts"", ""chat"", ""MessagesPlaceholder""], ""kwargs"": {""variable_name"": ""messages""}}]}, ""name"": ""ChatPromptTemplate""}, ""last"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""schema"", ""runnable"", ""RunnableBinding""], ""kwargs"": {""bound"": {""lc"": 1, ""type"": ""constructor"", ""id"": [""langchain"", ""chat_models"", ""openai"", ""ChatOpenAI""], ""kwargs"": {""model_name"": ""gpt-4o"", ""temperature"": 1.0, ""openai_api_key"": {""lc"": 1, ""type"": ""secret"", ""id"": [""OPENAI_API_KEY""]}, ""max_retries"": 2, ""n"": 1, ""stream_usage"": true}, ""name"": ""ChatOpenAI""}, ""kwargs"": {""tools"": [{""type"": ""function"", ""function"": {""name"": ""classify_request"", ""description"": ""Before responding (and once per conversation), classify the request.\n\n    Args:\n        category (str): The category of the request. One of security, playground, billing, partnerships, sales, admin, debugging, spam, other, technical support, product feedback, legal/compliance, account management, outage/incident, customer success, marketing, api/integration support, feature request, data requests, bug reports, subscription/upgrade, training/education, hardware/device issues, onboarding, events, refund/dispute, escalations, knowledge base/documentation, community management.\n        assignee (str): The assignee of the request. For now, must always be \""WFH\"".\n        next_speaker (str): One of \""support\"", \""user\"", \""none\"". The next speaker in the conversation. Typically \""support\"", unless spam, then we'll expect \""none\"". Only is \""user\"" if the last message is from a support member directed to the user.\n        email_is_forwarded (bool): Whether the request has been forwarded by a member of our support team."", ""parameters"": {""properties"": {""category"": {""type"": ""string""}, ""assignee"": {""type"": ""string""}, ""next_speaker"": {""type"": ""string""}, ""email_is_forwarded"": {""type"": ""boolean""}}, ""required"": [""category"", ""assignee"", ""next_speaker"", ""email_is_forwarded""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""reset_user_api_key"", ""description"": ""Reset the API key for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""run_haskell_code"", ""description"": ""Run code."", ""parameters"": {""properties"": {""code"": {""type"": ""string""}}, ""required"": [""code""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""find_user_id_by_email"", ""description"": ""Find the user ID associated with the given email address."", ""parameters"": {""properties"": {""email"": {""type"": ""string""}}, ""required"": [""email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""modify_user_email"", ""description"": ""Update the email address for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_email"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_email""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_plan_application_status"", ""description"": ""Retrieve the subscription plan application status for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""lookup_valid_plans"", ""description"": ""Search for valid subscription plans the user can upgrade to."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""change_subscription_plan"", ""description"": ""Change the subscription plan for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""new_plan"": {""type"": ""string""}}, ""required"": [""user_id"", ""new_plan""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_invoices"", ""description"": ""Retrieve all invoices associated with the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""issue_invoice_refund"", ""description"": ""Issue a refund for the specified invoice."", ""parameters"": {""properties"": {""invoice_id"": {""type"": ""string""}, ""amount"": {""type"": ""number""}}, ""required"": [""invoice_id"", ""amount""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""get_customer_usage_data"", ""description"": ""Retrieve usage data for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""create_escalation_ticket"", ""description"": ""Create a new escalation ticket for the specified user."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""summary"": {""type"": ""string""}, ""details"": {""type"": ""string""}}, ""required"": [""user_id"", ""summary"", ""details""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""query_technical_docs"", ""description"": ""Query technical documentation for matching titles or content."", ""parameters"": {""properties"": {""query"": {""type"": ""string""}}, ""required"": [""query""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""check_user_dsar_submission"", ""description"": ""Check if the specified user has submitted a DSAR request."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}}, ""required"": [""user_id""], ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""ignore_spam"", ""description"": ""Call if the inbound is spam."", ""parameters"": {""properties"": {}, ""type"": ""object""}}}, {""type"": ""function"", ""function"": {""name"": ""escalate_to_manager"", ""description"": ""Escalate to manager. Only permitted if the user is on an enterprise plan."", ""parameters"": {""properties"": {""user_id"": {""type"": ""string""}, ""note"": {""type"": ""string""}}, ""required"": [""user_id"", ""note""], ""type"": ""object""}}}]}, ""config"": {}}, ""name"": ""ChatOpenAI""}}, ""name"": ""RunnableSequence""}}"
