[project]
name = "iracing-mcp"
version = "0.1.1.dev0"
description = "A model context protocol server to chat with iRacing data."
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
authors = [{ name = "Antonio Rodríguez", email = "hi@musantro.com" }]
requires-python = ">=3.11.8"
dependencies = ["iracingdataapi>=1.2.2", "mcp[cli]>=1.6.0"]

[project.scripts]
iracing-mcp = "iracing_mcp.entrypoints.server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 119

extend-exclude = [".venv"]

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # flake8-async
  "ASYNC",
  # pydocstyle
  "D",
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.bumpversion]
current_version = "0.1.1.dev0"
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        \\.                           # dash separator for pre-release section
        (?P<pre_l>[a-zA-Z-]+)         # pre-release label
        (?P<pre_n>0|[1-9]\\d*)        # pre-release version number
    )?                                # pre-release section is optional
"""
serialize = [
    "{major}.{minor}.{patch}.{pre_l}{pre_n}",
    "{major}.{minor}.{patch}",
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = ""


[tool.bumpversion.parts.pre_l]
values = ["dev", "rc", "final"]
optional_value = "final"
