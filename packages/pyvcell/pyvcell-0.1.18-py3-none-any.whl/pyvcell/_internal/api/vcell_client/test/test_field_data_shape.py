"""
VCell API

VCell API

The version of the OpenAPI document: 1.0.1
Contact: vcell_support@uchc.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import unittest

from pyvcell._internal.api.vcell_client.models.field_data_shape import FieldDataShape


class TestFieldDataShape(unittest.TestCase):
    """FieldDataShape unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FieldDataShape:
        """Test FieldDataShape
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `FieldDataShape`
        """
        model = FieldDataShape()
        if include_optional:
            return FieldDataShape(
                extent = pyvcell._internal.api.vcell_client.models.extent.Extent(
                    x = 1.337,
                    y = 1.337,
                    z = 1.337, ),
                origin = pyvcell._internal.api.vcell_client.models.origin.Origin(
                    x = 1.337,
                    y = 1.337,
                    z = 1.337, ),
                isize = pyvcell._internal.api.vcell_client.models.i_size.ISize(
                    x = 56,
                    y = 56,
                    z = 56, ),
                data_identifier = [
                    pyvcell._internal.api.vcell_client.models.data_identifier.DataIdentifier(
                        name = '',
                        display_name = '',
                        variable_type = pyvcell._internal.api.vcell_client.models.variable_type.VariableType(
                            type = 56,
                            variable_domain = 'VARIABLEDOMAIN_POSTPROCESSING',
                            name = '',
                            units = '',
                            label = '',
                            legacy_warn = True,
                            default_label = '',
                            default_units = '',
                            type_name = '', ),
                        domain = pyvcell._internal.api.vcell_client.models.domain.Domain(
                            name = '', ),
                        b_function = True,
                        function = True,
                        visible = True, )
                    ],
                times = [
                    1.337
                    ]
            )
        else:
            return FieldDataShape(
        )
        """

    def testFieldDataShape(self):
        """Test FieldDataShape"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
