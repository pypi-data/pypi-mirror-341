[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp_snowflake"
version = "0.2.0"
description = "MCP server for performing read-only operations against Snowflake"
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [
    {name = "MCP Server Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
keywords = ["snowflake", "mcp", "claude", "database", "sql"]
dependencies = [
    "snowflake-connector-python>=3.8.0",
    "pydantic>=2.4.2",
    "python-dotenv>=1.0.0",
    "cryptography>=41.0.0",
    "mcp",
    "anyio>=3.7.1",
    "sqlglot>=11.5.5"
]

[project.urls]
Repository = "https://github.com/dynamike/mcp-server-snowflake"
Issues = "https://github.com/dynamike/mcp-server-snowflake/issues"

[project.scripts]
mcp-snowflake = "mcp_server_snowflake.main:run_stdio_server"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E501"]  # Ignore line too long errors

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.hatch.build.targets.wheel]
packages = ["mcp_server_snowflake"]