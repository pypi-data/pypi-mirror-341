# generated by datamodel-codegen:
#   filename:  properties_directory/structural/basis.json
#   version:   0.28.5

from __future__ import annotations

from enum import Enum
from typing import List, Optional, Union

from pydantic import BaseModel, Field, conint


class AtomicElements(BaseModel):
    id: float
    value: str
    occurrence: Optional[float] = None
    """
    Occurrence is for fractional occupations
    """
    oxidationState: Optional[float] = None


class AtomicCoordinate(BaseModel):
    id: Optional[float] = None
    value: Optional[Union[List[float], List[bool]]] = Field(None, title="vector schema")


class Units(Enum):
    crystal = "crystal"
    cartesian = "cartesian"


class AtomicLabel(BaseModel):
    id: Optional[float] = None
    value: Optional[conint(ge=1, le=9)] = Field(None, title="integer positive single digit")


class BasisSchema(BaseModel):
    elements: List[AtomicElements]
    coordinates: List[AtomicCoordinate]
    units: Optional[Units] = "crystal"
    labels: Optional[List[AtomicLabel]] = []
