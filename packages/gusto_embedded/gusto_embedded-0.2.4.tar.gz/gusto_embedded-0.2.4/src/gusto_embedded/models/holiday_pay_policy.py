"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from gusto_embedded.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class NewYearsDayTypedDict(TypedDict):
    selected: NotRequired[bool]
    name: NotRequired[str]
    date_: NotRequired[str]


class NewYearsDay(BaseModel):
    selected: Optional[bool] = None

    name: Optional[str] = None

    date_: Annotated[Optional[str], pydantic.Field(alias="date")] = None


class MlkDayTypedDict(TypedDict):
    selected: NotRequired[bool]
    name: NotRequired[str]
    date_: NotRequired[str]


class MlkDay(BaseModel):
    selected: Optional[bool] = None

    name: Optional[str] = None

    date_: Annotated[Optional[str], pydantic.Field(alias="date")] = None


class PresidentsDayTypedDict(TypedDict):
    selected: NotRequired[bool]
    name: NotRequired[str]
    date_: NotRequired[str]


class PresidentsDay(BaseModel):
    selected: Optional[bool] = None

    name: Optional[str] = None

    date_: Annotated[Optional[str], pydantic.Field(alias="date")] = None


class MemorialDayTypedDict(TypedDict):
    selected: NotRequired[bool]
    name: NotRequired[str]
    date_: NotRequired[str]


class MemorialDay(BaseModel):
    selected: Optional[bool] = None

    name: Optional[str] = None

    date_: Annotated[Optional[str], pydantic.Field(alias="date")] = None


class JuneteenthTypedDict(TypedDict):
    selected: NotRequired[bool]
    name: NotRequired[str]
    date_: NotRequired[str]


class Juneteenth(BaseModel):
    selected: Optional[bool] = None

    name: Optional[str] = None

    date_: Annotated[Optional[str], pydantic.Field(alias="date")] = None


class IndependenceDayTypedDict(TypedDict):
    selected: NotRequired[bool]
    name: NotRequired[str]
    date_: NotRequired[str]


class IndependenceDay(BaseModel):
    selected: Optional[bool] = None

    name: Optional[str] = None

    date_: Annotated[Optional[str], pydantic.Field(alias="date")] = None


class LaborDayTypedDict(TypedDict):
    selected: NotRequired[bool]
    name: NotRequired[str]
    date_: NotRequired[str]


class LaborDay(BaseModel):
    selected: Optional[bool] = None

    name: Optional[str] = None

    date_: Annotated[Optional[str], pydantic.Field(alias="date")] = None


class ColumbusDayTypedDict(TypedDict):
    selected: NotRequired[bool]
    name: NotRequired[str]
    date_: NotRequired[str]


class ColumbusDay(BaseModel):
    selected: Optional[bool] = None

    name: Optional[str] = None

    date_: Annotated[Optional[str], pydantic.Field(alias="date")] = None


class VeteransDayTypedDict(TypedDict):
    selected: NotRequired[bool]
    name: NotRequired[str]
    date_: NotRequired[str]


class VeteransDay(BaseModel):
    selected: Optional[bool] = None

    name: Optional[str] = None

    date_: Annotated[Optional[str], pydantic.Field(alias="date")] = None


class ThanksgivingTypedDict(TypedDict):
    selected: NotRequired[bool]
    name: NotRequired[str]
    date_: NotRequired[str]


class Thanksgiving(BaseModel):
    selected: Optional[bool] = None

    name: Optional[str] = None

    date_: Annotated[Optional[str], pydantic.Field(alias="date")] = None


class FederalHolidaysTypedDict(TypedDict):
    new_years_day: NotRequired[NewYearsDayTypedDict]
    mlk_day: NotRequired[MlkDayTypedDict]
    presidents_day: NotRequired[PresidentsDayTypedDict]
    memorial_day: NotRequired[MemorialDayTypedDict]
    juneteenth: NotRequired[JuneteenthTypedDict]
    independence_day: NotRequired[IndependenceDayTypedDict]
    labor_day: NotRequired[LaborDayTypedDict]
    columbus_day: NotRequired[ColumbusDayTypedDict]
    veterans_day: NotRequired[VeteransDayTypedDict]
    thanksgiving: NotRequired[ThanksgivingTypedDict]


class FederalHolidays(BaseModel):
    new_years_day: Optional[NewYearsDay] = None

    mlk_day: Optional[MlkDay] = None

    presidents_day: Optional[PresidentsDay] = None

    memorial_day: Optional[MemorialDay] = None

    juneteenth: Optional[Juneteenth] = None

    independence_day: Optional[IndependenceDay] = None

    labor_day: Optional[LaborDay] = None

    columbus_day: Optional[ColumbusDay] = None

    veterans_day: Optional[VeteransDay] = None

    thanksgiving: Optional[Thanksgiving] = None


class HolidayPayPolicyEmployeesTypedDict(TypedDict):
    uuid: NotRequired[str]


class HolidayPayPolicyEmployees(BaseModel):
    uuid: Optional[str] = None


class HolidayPayPolicyTypedDict(TypedDict):
    r"""Representation of a Holiday Pay Policy"""

    version: str
    r"""The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer) for information on how to use this field."""
    company_uuid: str
    r"""A unique identifier for the company owning the holiday pay policy"""
    federal_holidays: List[FederalHolidaysTypedDict]
    r"""List of the eleven supported federal holidays and their details"""
    employees: List[HolidayPayPolicyEmployeesTypedDict]
    r"""List of employee uuids under a time off policy"""


class HolidayPayPolicy(BaseModel):
    r"""Representation of a Holiday Pay Policy"""

    version: str
    r"""The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer) for information on how to use this field."""

    company_uuid: str
    r"""A unique identifier for the company owning the holiday pay policy"""

    federal_holidays: List[FederalHolidays]
    r"""List of the eleven supported federal holidays and their details"""

    employees: List[HolidayPayPolicyEmployees]
    r"""List of employee uuids under a time off policy"""
