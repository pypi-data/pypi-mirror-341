
/* This file defines some tables and functions for introspecting
 * Mavlink header files. This is a generated file; do not edit.
 ****************************************************************/

#pragma once

#include "mavlink/mavlink_types.h"
#include "table.h"

typedef cStruct*(*unboxer)(const mavlink_message_t*);

extern unboxer unboxers[];

cStruct* unbox_icarous_heartbeat(const mavlink_message_t* message);
cStruct* unbox_icarous_kinematic_bands(const mavlink_message_t* message);
cStruct* unbox_limits_status(const mavlink_message_t* message);
cStruct* unbox_secure_command(const mavlink_message_t* message);
cStruct* unbox_ahrs3(const mavlink_message_t* message);
cStruct* unbox_vision_position_delta(const mavlink_message_t* message);
cStruct* unbox_gopro_get_response(const mavlink_message_t* message);
cStruct* unbox_esc_telemetry_29_to_32(const mavlink_message_t* message);
cStruct* unbox_battery2(const mavlink_message_t* message);
cStruct* unbox_led_control(const mavlink_message_t* message);
cStruct* unbox_rally_fetch_point(const mavlink_message_t* message);
cStruct* unbox_esc_telemetry_9_to_12(const mavlink_message_t* message);
cStruct* unbox_gopro_get_request(const mavlink_message_t* message);
cStruct* unbox_device_op_write_reply(const mavlink_message_t* message);
cStruct* unbox_remote_log_data_block(const mavlink_message_t* message);
cStruct* unbox_esc_telemetry_21_to_24(const mavlink_message_t* message);
cStruct* unbox_ekf_status_report(const mavlink_message_t* message);
cStruct* unbox_ap_adc(const mavlink_message_t* message);
cStruct* unbox_esc_telemetry_5_to_8(const mavlink_message_t* message);
cStruct* unbox_gopro_heartbeat(const mavlink_message_t* message);
cStruct* unbox_water_depth(const mavlink_message_t* message);
cStruct* unbox_data64(const mavlink_message_t* message);
cStruct* unbox_data32(const mavlink_message_t* message);
cStruct* unbox_sensor_offsets(const mavlink_message_t* message);
cStruct* unbox_rally_point(const mavlink_message_t* message);
cStruct* unbox_camera_feedback(const mavlink_message_t* message);
cStruct* unbox_mount_configure(const mavlink_message_t* message);
cStruct* unbox_obstacle_distance_3d(const mavlink_message_t* message);
cStruct* unbox_rpm(const mavlink_message_t* message);
cStruct* unbox_data16(const mavlink_message_t* message);
cStruct* unbox_compassmot_status(const mavlink_message_t* message);
cStruct* unbox_pid_tuning(const mavlink_message_t* message);
cStruct* unbox_mount_status(const mavlink_message_t* message);
cStruct* unbox_ahrs(const mavlink_message_t* message);
cStruct* unbox_osd_param_config_reply(const mavlink_message_t* message);
cStruct* unbox_osd_param_show_config_reply(const mavlink_message_t* message);
cStruct* unbox_digicam_configure(const mavlink_message_t* message);
cStruct* unbox_deepstall(const mavlink_message_t* message);
cStruct* unbox_meminfo(const mavlink_message_t* message);
cStruct* unbox_fence_point(const mavlink_message_t* message);
cStruct* unbox_rangefinder(const mavlink_message_t* message);
cStruct* unbox_airspeed_autocal(const mavlink_message_t* message);
cStruct* unbox_ahrs2(const mavlink_message_t* message);
cStruct* unbox_simstate(const mavlink_message_t* message);
cStruct* unbox_gimbal_report(const mavlink_message_t* message);
cStruct* unbox_device_op_write(const mavlink_message_t* message);
cStruct* unbox_set_mag_offsets(const mavlink_message_t* message);
cStruct* unbox_osd_param_show_config(const mavlink_message_t* message);
cStruct* unbox_camera_status(const mavlink_message_t* message);
cStruct* unbox_osd_param_config(const mavlink_message_t* message);
cStruct* unbox_fence_fetch_point(const mavlink_message_t* message);
cStruct* unbox_esc_telemetry_25_to_28(const mavlink_message_t* message);
cStruct* unbox_digicam_control(const mavlink_message_t* message);
cStruct* unbox_esc_telemetry_1_to_4(const mavlink_message_t* message);
cStruct* unbox_esc_telemetry_13_to_16(const mavlink_message_t* message);
cStruct* unbox_device_op_read_reply(const mavlink_message_t* message);
cStruct* unbox_autopilot_version_request(const mavlink_message_t* message);
cStruct* unbox_device_op_read(const mavlink_message_t* message);
cStruct* unbox_mag_cal_progress(const mavlink_message_t* message);
cStruct* unbox_remote_log_block_status(const mavlink_message_t* message);
cStruct* unbox_data96(const mavlink_message_t* message);
cStruct* unbox_mcu_status(const mavlink_message_t* message);
cStruct* unbox_mount_control(const mavlink_message_t* message);
cStruct* unbox_wind(const mavlink_message_t* message);
cStruct* unbox_gimbal_control(const mavlink_message_t* message);
cStruct* unbox_esc_telemetry_17_to_20(const mavlink_message_t* message);
cStruct* unbox_hwstatus(const mavlink_message_t* message);
cStruct* unbox_adap_tuning(const mavlink_message_t* message);
cStruct* unbox_gimbal_torque_cmd_report(const mavlink_message_t* message);
cStruct* unbox_gopro_set_request(const mavlink_message_t* message);
cStruct* unbox_aoa_ssa(const mavlink_message_t* message);
cStruct* unbox_radio(const mavlink_message_t* message);
cStruct* unbox_gopro_set_response(const mavlink_message_t* message);
cStruct* unbox_secure_command_reply(const mavlink_message_t* message);
cStruct* unbox_uavionix_adsb_out_cfg(const mavlink_message_t* message);
cStruct* unbox_uavionix_adsb_transceiver_health_report(const mavlink_message_t* message);
cStruct* unbox_uavionix_adsb_out_dynamic(const mavlink_message_t* message);
cStruct* unbox_battery_status_v2(const mavlink_message_t* message);
cStruct* unbox_target_relative(const mavlink_message_t* message);
cStruct* unbox_target_absolute(const mavlink_message_t* message);
cStruct* unbox_group_start(const mavlink_message_t* message);
cStruct* unbox_airspeed(const mavlink_message_t* message);
cStruct* unbox_control_status(const mavlink_message_t* message);
cStruct* unbox_figure_eight_execution_status(const mavlink_message_t* message);
cStruct* unbox_set_velocity_limits(const mavlink_message_t* message);
cStruct* unbox_group_end(const mavlink_message_t* message);
cStruct* unbox_gnss_integrity(const mavlink_message_t* message);
cStruct* unbox_radio_rc_channels(const mavlink_message_t* message);
cStruct* unbox_velocity_limits(const mavlink_message_t* message);
cStruct* unbox_cubepilot_raw_rc(const mavlink_message_t* message);
cStruct* unbox_cubepilot_firmware_update_resp(const mavlink_message_t* message);
cStruct* unbox_herelink_video_stream_information(const mavlink_message_t* message);
cStruct* unbox_cubepilot_firmware_update_start(const mavlink_message_t* message);
cStruct* unbox_herelink_telem(const mavlink_message_t* message);
cStruct* unbox_loweheiser_gov_efi(const mavlink_message_t* message);
cStruct* unbox_heartbeat(const mavlink_message_t* message);
cStruct* unbox_protocol_version(const mavlink_message_t* message);
cStruct* unbox_storm32_gimbal_manager_correct_roll(const mavlink_message_t* message);
cStruct* unbox_qshot_status(const mavlink_message_t* message);
cStruct* unbox_storm32_gimbal_manager_control(const mavlink_message_t* message);
cStruct* unbox_storm32_gimbal_manager_status(const mavlink_message_t* message);
cStruct* unbox_param_value_array(const mavlink_message_t* message);
cStruct* unbox_storm32_gimbal_manager_information(const mavlink_message_t* message);
cStruct* unbox_frsky_passthrough_array(const mavlink_message_t* message);
cStruct* unbox_storm32_gimbal_manager_control_pitchyaw(const mavlink_message_t* message);
cStruct* unbox_avss_drone_imu(const mavlink_message_t* message);
cStruct* unbox_avss_prs_sys_status(const mavlink_message_t* message);
cStruct* unbox_avss_drone_operation_mode(const mavlink_message_t* message);
cStruct* unbox_avss_drone_position(const mavlink_message_t* message);
cStruct* unbox_param_ext_value(const mavlink_message_t* message);
cStruct* unbox_open_drone_id_arm_status(const mavlink_message_t* message);
cStruct* unbox_open_drone_id_basic_id(const mavlink_message_t* message);
cStruct* unbox_collision(const mavlink_message_t* message);
cStruct* unbox_gimbal_manager_information(const mavlink_message_t* message);
cStruct* unbox_position_target_local_ned(const mavlink_message_t* message);
cStruct* unbox_gps_input(const mavlink_message_t* message);
cStruct* unbox_uavcan_node_info(const mavlink_message_t* message);
cStruct* unbox_resource_request(const mavlink_message_t* message);
cStruct* unbox_available_modes_monitor(const mavlink_message_t* message);
cStruct* unbox_attitude(const mavlink_message_t* message);
cStruct* unbox_mission_item(const mavlink_message_t* message);
cStruct* unbox_auth_key(const mavlink_message_t* message);
cStruct* unbox_log_entry(const mavlink_message_t* message);
cStruct* unbox_trajectory_representation_bezier(const mavlink_message_t* message);
cStruct* unbox_set_position_target_global_int(const mavlink_message_t* message);
cStruct* unbox_terrain_check(const mavlink_message_t* message);
cStruct* unbox_video_stream_information(const mavlink_message_t* message);
cStruct* unbox_hygrometer_sensor(const mavlink_message_t* message);
cStruct* unbox_change_operator_control_ack(const mavlink_message_t* message);
cStruct* unbox_open_drone_id_authentication(const mavlink_message_t* message);
cStruct* unbox_open_drone_id_self_id(const mavlink_message_t* message);
cStruct* unbox_att_pos_mocap(const mavlink_message_t* message);
cStruct* unbox_v2_extension(const mavlink_message_t* message);
cStruct* unbox_cellular_config(const mavlink_message_t* message);
cStruct* unbox_battery_status(const mavlink_message_t* message);
cStruct* unbox_set_position_target_local_ned(const mavlink_message_t* message);
cStruct* unbox_mission_count(const mavlink_message_t* message);
cStruct* unbox_open_drone_id_system_update(const mavlink_message_t* message);
cStruct* unbox_rc_channels(const mavlink_message_t* message);
cStruct* unbox_gps2_rtk(const mavlink_message_t* message);
cStruct* unbox_param_set(const mavlink_message_t* message);
cStruct* unbox_wheel_distance(const mavlink_message_t* message);
cStruct* unbox_orbit_execution_status(const mavlink_message_t* message);
cStruct* unbox_local_position_ned_system_global_offset(const mavlink_message_t* message);
cStruct* unbox_gimbal_device_information(const mavlink_message_t* message);
cStruct* unbox_power_status(const mavlink_message_t* message);
cStruct* unbox_log_request_data(const mavlink_message_t* message);
cStruct* unbox_open_drone_id_system(const mavlink_message_t* message);
cStruct* unbox_camera_tracking_geo_status(const mavlink_message_t* message);
cStruct* unbox_optical_flow_rad(const mavlink_message_t* message);
cStruct* unbox_button_change(const mavlink_message_t* message);
cStruct* unbox_param_value(const mavlink_message_t* message);
cStruct* unbox_sim_state(const mavlink_message_t* message);
cStruct* unbox_gps_raw_int(const mavlink_message_t* message);
cStruct* unbox_mission_clear_all(const mavlink_message_t* message);
cStruct* unbox_terrain_data(const mavlink_message_t* message);
cStruct* unbox_obstacle_distance(const mavlink_message_t* message);
cStruct* unbox_manual_control(const mavlink_message_t* message);
cStruct* unbox_encapsulated_data(const mavlink_message_t* message);
cStruct* unbox_event(const mavlink_message_t* message);
cStruct* unbox_param_map_rc(const mavlink_message_t* message);
cStruct* unbox_camera_settings(const mavlink_message_t* message);
cStruct* unbox_wifi_config_ap(const mavlink_message_t* message);
cStruct* unbox_message_interval(const mavlink_message_t* message);
cStruct* unbox_rc_channels_scaled(const mavlink_message_t* message);
cStruct* unbox_gimbal_manager_status(const mavlink_message_t* message);
cStruct* unbox_component_metadata(const mavlink_message_t* message);
cStruct* unbox_scaled_imu3(const mavlink_message_t* message);
cStruct* unbox_param_ext_set(const mavlink_message_t* message);
cStruct* unbox_vfr_hud(const mavlink_message_t* message);
cStruct* unbox_debug(const mavlink_message_t* message);
cStruct* unbox_set_attitude_target(const mavlink_message_t* message);
cStruct* unbox_supported_tunes(const mavlink_message_t* message);
cStruct* unbox_high_latency2(const mavlink_message_t* message);
cStruct* unbox_component_information(const mavlink_message_t* message);
cStruct* unbox_gimbal_manager_set_attitude(const mavlink_message_t* message);
cStruct* unbox_vision_speed_estimate(const mavlink_message_t* message);
cStruct* unbox_gimbal_device_set_attitude(const mavlink_message_t* message);
cStruct* unbox_logging_data_acked(const mavlink_message_t* message);
cStruct* unbox_file_transfer_protocol(const mavlink_message_t* message);
cStruct* unbox_command_int(const mavlink_message_t* message);
cStruct* unbox_manual_setpoint(const mavlink_message_t* message);
cStruct* unbox_global_position_int(const mavlink_message_t* message);
cStruct* unbox_hil_controls(const mavlink_message_t* message);
cStruct* unbox_local_position_ned_cov(const mavlink_message_t* message);
cStruct* unbox_illuminator_status(const mavlink_message_t* message);
cStruct* unbox_smart_battery_info(const mavlink_message_t* message);
cStruct* unbox_link_node_status(const mavlink_message_t* message);
cStruct* unbox_camera_image_captured(const mavlink_message_t* message);
cStruct* unbox_set_gps_global_origin(const mavlink_message_t* message);
cStruct* unbox_can_filter_modify(const mavlink_message_t* message);
cStruct* unbox_distance_sensor(const mavlink_message_t* message);
cStruct* unbox_named_value_int(const mavlink_message_t* message);
cStruct* unbox_follow_target(const mavlink_message_t* message);
cStruct* unbox_mount_orientation(const mavlink_message_t* message);
cStruct* unbox_nav_controller_output(const mavlink_message_t* message);
cStruct* unbox_flight_information(const mavlink_message_t* message);
cStruct* unbox_adsb_vehicle(const mavlink_message_t* message);
cStruct* unbox_gps_inject_data(const mavlink_message_t* message);
cStruct* unbox_odometry(const mavlink_message_t* message);
cStruct* unbox_storage_information(const mavlink_message_t* message);
cStruct* unbox_gps_rtk(const mavlink_message_t* message);
cStruct* unbox_mag_cal_report(const mavlink_message_t* message);
cStruct* unbox_log_erase(const mavlink_message_t* message);
cStruct* unbox_raw_pressure(const mavlink_message_t* message);
cStruct* unbox_mission_current(const mavlink_message_t* message);
cStruct* unbox_logging_data(const mavlink_message_t* message);
cStruct* unbox_altitude(const mavlink_message_t* message);
cStruct* unbox_request_data_stream(const mavlink_message_t* message);
cStruct* unbox_generator_status(const mavlink_message_t* message);
cStruct* unbox_set_mode(const mavlink_message_t* message);
cStruct* unbox_param_ext_ack(const mavlink_message_t* message);
cStruct* unbox_hil_state_quaternion(const mavlink_message_t* message);
cStruct* unbox_ais_vessel(const mavlink_message_t* message);
cStruct* unbox_mission_set_current(const mavlink_message_t* message);
cStruct* unbox_wind_cov(const mavlink_message_t* message);
cStruct* unbox_play_tune(const mavlink_message_t* message);
cStruct* unbox_mission_request(const mavlink_message_t* message);
cStruct* unbox_gimbal_manager_set_manual_control(const mavlink_message_t* message);
cStruct* unbox_open_drone_id_operator_id(const mavlink_message_t* message);
cStruct* unbox_actuator_output_status(const mavlink_message_t* message);
cStruct* unbox_canfd_frame(const mavlink_message_t* message);
cStruct* unbox_gimbal_manager_set_pitchyaw(const mavlink_message_t* message);
cStruct* unbox_estimator_status(const mavlink_message_t* message);
cStruct* unbox_debug_float_array(const mavlink_message_t* message);
cStruct* unbox_scaled_imu(const mavlink_message_t* message);
cStruct* unbox_param_ext_request_read(const mavlink_message_t* message);
cStruct* unbox_open_drone_id_location(const mavlink_message_t* message);
cStruct* unbox_control_system_state(const mavlink_message_t* message);
cStruct* unbox_rc_channels_override(const mavlink_message_t* message);
cStruct* unbox_gps_global_origin(const mavlink_message_t* message);
cStruct* unbox_change_operator_control(const mavlink_message_t* message);
cStruct* unbox_high_latency(const mavlink_message_t* message);
cStruct* unbox_gimbal_device_attitude_status(const mavlink_message_t* message);
cStruct* unbox_mission_item_int(const mavlink_message_t* message);
cStruct* unbox_mission_request_list(const mavlink_message_t* message);
cStruct* unbox_autopilot_version(const mavlink_message_t* message);
cStruct* unbox_gps2_raw(const mavlink_message_t* message);
cStruct* unbox_hil_sensor(const mavlink_message_t* message);
cStruct* unbox_raw_rpm(const mavlink_message_t* message);
cStruct* unbox_terrain_request(const mavlink_message_t* message);
cStruct* unbox_serial_control(const mavlink_message_t* message);
cStruct* unbox_set_actuator_control_target(const mavlink_message_t* message);
cStruct* unbox_camera_information(const mavlink_message_t* message);
cStruct* unbox_gps_status(const mavlink_message_t* message);
cStruct* unbox_statustext(const mavlink_message_t* message);
cStruct* unbox_mission_item_reached(const mavlink_message_t* message);
cStruct* unbox_log_request_list(const mavlink_message_t* message);
cStruct* unbox_current_event_sequence(const mavlink_message_t* message);
cStruct* unbox_can_frame(const mavlink_message_t* message);
cStruct* unbox_camera_thermal_range(const mavlink_message_t* message);
cStruct* unbox_request_event(const mavlink_message_t* message);
cStruct* unbox_scaled_pressure2(const mavlink_message_t* message);
cStruct* unbox_battery_info(const mavlink_message_t* message);
cStruct* unbox_named_value_float(const mavlink_message_t* message);
cStruct* unbox_data_transmission_handshake(const mavlink_message_t* message);
cStruct* unbox_sys_status(const mavlink_message_t* message);
cStruct* unbox_ping(const mavlink_message_t* message);
cStruct* unbox_set_home_position(const mavlink_message_t* message);
cStruct* unbox_logging_ack(const mavlink_message_t* message);
cStruct* unbox_vision_position_estimate(const mavlink_message_t* message);
cStruct* unbox_mission_request_int(const mavlink_message_t* message);
cStruct* unbox_scaled_imu2(const mavlink_message_t* message);
cStruct* unbox_command_ack(const mavlink_message_t* message);
cStruct* unbox_response_event_error(const mavlink_message_t* message);
cStruct* unbox_setup_signing(const mavlink_message_t* message);
cStruct* unbox_tunnel(const mavlink_message_t* message);
cStruct* unbox_vibration(const mavlink_message_t* message);
cStruct* unbox_mission_write_partial_list(const mavlink_message_t* message);
cStruct* unbox_time_estimate_to_target(const mavlink_message_t* message);
cStruct* unbox_extended_sys_state(const mavlink_message_t* message);
cStruct* unbox_system_time(const mavlink_message_t* message);
cStruct* unbox_command_cancel(const mavlink_message_t* message);
cStruct* unbox_param_request_read(const mavlink_message_t* message);
cStruct* unbox_camera_fov_status(const mavlink_message_t* message);
cStruct* unbox_mission_request_partial_list(const mavlink_message_t* message);
cStruct* unbox_rc_channels_raw(const mavlink_message_t* message);
cStruct* unbox_highres_imu(const mavlink_message_t* message);
cStruct* unbox_available_modes(const mavlink_message_t* message);
cStruct* unbox_video_stream_status(const mavlink_message_t* message);
cStruct* unbox_landing_target(const mavlink_message_t* message);
cStruct* unbox_position_target_global_int(const mavlink_message_t* message);
cStruct* unbox_component_information_basic(const mavlink_message_t* message);
cStruct* unbox_hil_optical_flow(const mavlink_message_t* message);
cStruct* unbox_hil_state(const mavlink_message_t* message);
cStruct* unbox_raw_imu(const mavlink_message_t* message);
cStruct* unbox_play_tune_v2(const mavlink_message_t* message);
cStruct* unbox_scaled_pressure(const mavlink_message_t* message);
cStruct* unbox_gps_rtcm_data(const mavlink_message_t* message);
cStruct* unbox_uavcan_node_status(const mavlink_message_t* message);
cStruct* unbox_param_request_list(const mavlink_message_t* message);
cStruct* unbox_radio_status(const mavlink_message_t* message);
cStruct* unbox_actuator_control_target(const mavlink_message_t* message);
cStruct* unbox_winch_status(const mavlink_message_t* message);
cStruct* unbox_mission_ack(const mavlink_message_t* message);
cStruct* unbox_local_position_ned(const mavlink_message_t* message);
cStruct* unbox_autopilot_state_for_gimbal_device(const mavlink_message_t* message);
cStruct* unbox_log_request_end(const mavlink_message_t* message);
cStruct* unbox_optical_flow(const mavlink_message_t* message);
cStruct* unbox_safety_set_allowed_area(const mavlink_message_t* message);
cStruct* unbox_attitude_target(const mavlink_message_t* message);
cStruct* unbox_global_position_int_cov(const mavlink_message_t* message);
cStruct* unbox_cellular_status(const mavlink_message_t* message);
cStruct* unbox_fence_status(const mavlink_message_t* message);
cStruct* unbox_vicon_position_estimate(const mavlink_message_t* message);
cStruct* unbox_command_long(const mavlink_message_t* message);
cStruct* unbox_param_ext_request_list(const mavlink_message_t* message);
cStruct* unbox_camera_capture_status(const mavlink_message_t* message);
cStruct* unbox_servo_output_raw(const mavlink_message_t* message);
cStruct* unbox_data_stream(const mavlink_message_t* message);
cStruct* unbox_esc_status(const mavlink_message_t* message);
cStruct* unbox_camera_trigger(const mavlink_message_t* message);
cStruct* unbox_efi_status(const mavlink_message_t* message);
cStruct* unbox_utm_global_position(const mavlink_message_t* message);
cStruct* unbox_scaled_pressure3(const mavlink_message_t* message);
cStruct* unbox_hil_rc_inputs_raw(const mavlink_message_t* message);
cStruct* unbox_terrain_report(const mavlink_message_t* message);
cStruct* unbox_trajectory_representation_waypoints(const mavlink_message_t* message);
cStruct* unbox_open_drone_id_message_pack(const mavlink_message_t* message);
cStruct* unbox_isbd_link_status(const mavlink_message_t* message);
cStruct* unbox_memory_vect(const mavlink_message_t* message);
cStruct* unbox_safety_allowed_area(const mavlink_message_t* message);
cStruct* unbox_onboard_computer_status(const mavlink_message_t* message);
cStruct* unbox_debug_vect(const mavlink_message_t* message);
cStruct* unbox_attitude_quaternion(const mavlink_message_t* message);
cStruct* unbox_hil_gps(const mavlink_message_t* message);
cStruct* unbox_esc_info(const mavlink_message_t* message);
cStruct* unbox_home_position(const mavlink_message_t* message);
cStruct* unbox_global_vision_position_estimate(const mavlink_message_t* message);
cStruct* unbox_attitude_quaternion_cov(const mavlink_message_t* message);
cStruct* unbox_current_mode(const mavlink_message_t* message);
cStruct* unbox_fuel_status(const mavlink_message_t* message);
cStruct* unbox_timesync(const mavlink_message_t* message);
cStruct* unbox_log_data(const mavlink_message_t* message);
cStruct* unbox_hil_actuator_controls(const mavlink_message_t* message);
cStruct* unbox_camera_tracking_image_status(const mavlink_message_t* message);
cStruct* unbox_array_test_7(const mavlink_message_t* message);
cStruct* unbox_array_test_4(const mavlink_message_t* message);
cStruct* unbox_array_test_8(const mavlink_message_t* message);
cStruct* unbox_array_test_0(const mavlink_message_t* message);
cStruct* unbox_array_test_1(const mavlink_message_t* message);
cStruct* unbox_array_test_5(const mavlink_message_t* message);
cStruct* unbox_array_test_3(const mavlink_message_t* message);
cStruct* unbox_array_test_6(const mavlink_message_t* message);
cStruct* unbox_test_types(const mavlink_message_t* message);
cStruct* unbox_sens_mppt(const mavlink_message_t* message);
cStruct* unbox_satcom_link_status(const mavlink_message_t* message);
cStruct* unbox_sens_batmon(const mavlink_message_t* message);
cStruct* unbox_fw_soaring_data(const mavlink_message_t* message);
cStruct* unbox_asluav_status(const mavlink_message_t* message);
cStruct* unbox_ekf_ext(const mavlink_message_t* message);
cStruct* unbox_aslctrl_data(const mavlink_message_t* message);
cStruct* unbox_sensor_airflow_angles(const mavlink_message_t* message);
cStruct* unbox_sens_power(const mavlink_message_t* message);
cStruct* unbox_sens_atmos(const mavlink_message_t* message);
cStruct* unbox_sensorpod_status(const mavlink_message_t* message);
cStruct* unbox_sens_power_board(const mavlink_message_t* message);
cStruct* unbox_command_long_stamped(const mavlink_message_t* message);
cStruct* unbox_aslctrl_debug(const mavlink_message_t* message);
cStruct* unbox_command_int_stamped(const mavlink_message_t* message);
cStruct* unbox_gsm_link_status(const mavlink_message_t* message);
cStruct* unbox_asl_obctrl(const mavlink_message_t* message);
cStruct* unbox_airlink_auth(const mavlink_message_t* message);
cStruct* unbox_airlink_eye_turn_init(const mavlink_message_t* message);
cStruct* unbox_airlink_eye_hp(const mavlink_message_t* message);
cStruct* unbox_airlink_eye_gs_hole_push_request(const mavlink_message_t* message);
cStruct* unbox_airlink_eye_gs_hole_push_response(const mavlink_message_t* message);
cStruct* unbox_airlink_auth_response(const mavlink_message_t* message);
cStruct* unbox_ualberta_sys_status(const mavlink_message_t* message);
cStruct* unbox_nav_filter_bias(const mavlink_message_t* message);
cStruct* unbox_radio_calibration(const mavlink_message_t* message);

