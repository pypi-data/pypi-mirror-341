# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetServiceAccountsResult',
    'AwaitableGetServiceAccountsResult',
    'get_service_accounts',
    'get_service_accounts_output',
]

@pulumi.output_type
class GetServiceAccountsResult:
    """
    A collection of values returned by getServiceAccounts.
    """
    def __init__(__self__, id=None, service_accounts=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if service_accounts and not isinstance(service_accounts, list):
            raise TypeError("Expected argument 'service_accounts' to be a list")
        pulumi.set(__self__, "service_accounts", service_accounts)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The unique identifier of the Service Accounts data source.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="serviceAccounts")
    def service_accounts(self) -> Sequence['outputs.GetServiceAccountsServiceAccountResult']:
        """
        The list of Service Accounts.
        """
        return pulumi.get(self, "service_accounts")


class AwaitableGetServiceAccountsResult(GetServiceAccountsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetServiceAccountsResult(
            id=self.id,
            service_accounts=self.service_accounts)


def get_service_accounts(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetServiceAccountsResult:
    """
    Fetches details about all Service Accounts.
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('temporalcloud:index/getServiceAccounts:getServiceAccounts', __args__, opts=opts, typ=GetServiceAccountsResult).value

    return AwaitableGetServiceAccountsResult(
        id=pulumi.get(__ret__, 'id'),
        service_accounts=pulumi.get(__ret__, 'service_accounts'))
def get_service_accounts_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetServiceAccountsResult]:
    """
    Fetches details about all Service Accounts.
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('temporalcloud:index/getServiceAccounts:getServiceAccounts', __args__, opts=opts, typ=GetServiceAccountsResult)
    return __ret__.apply(lambda __response__: GetServiceAccountsResult(
        id=pulumi.get(__response__, 'id'),
        service_accounts=pulumi.get(__response__, 'service_accounts')))
