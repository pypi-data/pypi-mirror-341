[project]
name = "httpx-spy"
version = "0.1.0"
description = "A tool to spy on httpx and log requests and responses."
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "httpx",
    "orjson",
    "asgiref",
]

[project.optional-dependencies]
django = [
    "django",
]
celery = [
    "celery",
]

[dependency-groups]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-httpx",
    "pytest-mock",
    "ruff",
    "hatch",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.ruff.lint]
select = [
    # -- Core --
    "E",  # pycodestyle (errors)
    "W",  # pycodestyle (warnings)
    "F",  # Pyflakes
    "I",  # isort
    "C90",  # McCabe Complexity
    "D1",  # Mandatory docstrings
    "S",  # Bandit

    # -- Bonus --
    "A",  # flake8-bugbear
    "B",  # flake8-bugbear
    "DTZ",  # date/time zone
    "T10",  # debugger
    "EM",  # error messages
    "EXE",  # executable
    "G",  # logging
    "UP",  # pyupgrade
    "ASYNC",  # async
    "INP",  # PEP 420
    "T20",  # no print
    "PT",  # pytest
    "SLOT",  # slots
    "TCH",  # type checking blocks
    "PTH",  # Use pathlib
    "FIX",  # Don't allow not done stuff in code
    "ERA",  # Don't comment code
    "RUF",  # Ruff stuff
    "TID251",  # See below
]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"requests" = { msg = "Use `httpx` instead, which has timeouts by default." }

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"**/migrations/*" = ["ALL"]
"test_*.py" = ["S101", "D"]
