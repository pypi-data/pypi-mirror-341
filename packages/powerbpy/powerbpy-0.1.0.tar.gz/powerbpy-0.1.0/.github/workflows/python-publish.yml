# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

#on:
#  push:
#    branches:
#      - main
      
#    paths:
#      - src/**

on:
  release:
    types: [published]


permissions:
  contents: write

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          

      - name: Update version number
        run: |

          # install dependencies
          python -m pip install argparse

      
          # update version in toml file
          chmod +x ./.github/scripts/update_toml.py
          python ./.github/scripts/update_toml.py ${{ github.event.release.tag_name }}


      - name: Build distribution
        run: |
          python -m pip install build
          python -m build
     


      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      url: https://pypi.org/p/powerbpy
      #
      # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
      # ALTERNATIVE: exactly, uncomment the following line instead:
      #url: https://pypi.org/project/PBI_dashboard_creator/${{ github.event.release.name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/

# on a new runner re-run the toml file updater to add the change to the main branch
  update-toml:
     runs-on: ubuntu-latest
     needs: 
       - pypi-publish
     steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          
      - name: Update version number
        run: |
          # install dependencies
          python -m pip install argparse
          
          # update version in toml file
          chmod +x ./.github/scripts/update_toml.py
          python ./.github/scripts/update_toml.py ${{ github.event.release.tag_name }}

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
        #  create_branch: true
          commit_message: Update version number to ${{ github.event.release.tag_name }}
          
        
     
      
     
  
