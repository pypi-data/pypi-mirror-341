[tool.poetry]
name = "mparsett"
version = "0.1.0"
description = "Music Torrent Parser"
authors = ["Dreu LaVelle <dreu.lavelle@gmail.com>"]
license = "MIT"
package-mode = true

[tool.poetry.dependencies]
python = "^3.11"
regex = "^2024.11.6"
arrow = "^1.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-xdist = "^3.6.1"
pytest-cov = "^6.1.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.packages]]
include = "MTP"

[tool.poetry.scripts]
mparsett = "MTP.cli:main"
mtp = "MTP.cli:main"

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"

[tool.isort]
profile = "black"

[tool.black]
line-length = 300
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests
)/
'''
