Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression AND expression
Rule 2     expression -> NOT expression
Rule 3     expression -> COALITION expression UNTIL expression
Rule 4     expression -> COALITION expression RELEASE expression
Rule 5     expression -> COALITION NEXT expression
Rule 6     expression -> LPAREN expression RPAREN
Rule 7     expression -> PROP
Rule 8     expression -> KCAP AGENT expression2
Rule 9     expression2 -> LPAREN expression2 RPAREN
Rule 10    expression2 -> expression2 AND expression2
Rule 11    expression2 -> NOT expression2
Rule 12    expression2 -> AGENT IS PROP

Terminals, with rules where they appear

AGENT                : 8 12
AND                  : 1 10
COALITION            : 3 4 5
IS                   : 12
KCAP                 : 8
LPAREN               : 6 9
NEXT                 : 5
NOT                  : 2 11
PROP                 : 7 12
RELEASE              : 4
RPAREN               : 6 9
UNTIL                : 3
error                : 

Nonterminals, with rules where they appear

expression           : 1 1 2 3 3 4 4 5 6 0
expression2          : 8 9 10 10 11

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression AND expression
    (2) expression -> . NOT expression
    (3) expression -> . COALITION expression UNTIL expression
    (4) expression -> . COALITION expression RELEASE expression
    (5) expression -> . COALITION NEXT expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . PROP
    (8) expression -> . KCAP AGENT expression2

    NOT             shift and go to state 2
    COALITION       shift and go to state 3
    LPAREN          shift and go to state 4
    PROP            shift and go to state 5
    KCAP            shift and go to state 6

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (1) expression -> expression . AND expression

    AND             shift and go to state 7


state 2

    (2) expression -> NOT . expression
    (1) expression -> . expression AND expression
    (2) expression -> . NOT expression
    (3) expression -> . COALITION expression UNTIL expression
    (4) expression -> . COALITION expression RELEASE expression
    (5) expression -> . COALITION NEXT expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . PROP
    (8) expression -> . KCAP AGENT expression2

    NOT             shift and go to state 2
    COALITION       shift and go to state 3
    LPAREN          shift and go to state 4
    PROP            shift and go to state 5
    KCAP            shift and go to state 6

    expression                     shift and go to state 8

state 3

    (3) expression -> COALITION . expression UNTIL expression
    (4) expression -> COALITION . expression RELEASE expression
    (5) expression -> COALITION . NEXT expression
    (1) expression -> . expression AND expression
    (2) expression -> . NOT expression
    (3) expression -> . COALITION expression UNTIL expression
    (4) expression -> . COALITION expression RELEASE expression
    (5) expression -> . COALITION NEXT expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . PROP
    (8) expression -> . KCAP AGENT expression2

    NEXT            shift and go to state 10
    NOT             shift and go to state 2
    COALITION       shift and go to state 3
    LPAREN          shift and go to state 4
    PROP            shift and go to state 5
    KCAP            shift and go to state 6

    expression                     shift and go to state 9

state 4

    (6) expression -> LPAREN . expression RPAREN
    (1) expression -> . expression AND expression
    (2) expression -> . NOT expression
    (3) expression -> . COALITION expression UNTIL expression
    (4) expression -> . COALITION expression RELEASE expression
    (5) expression -> . COALITION NEXT expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . PROP
    (8) expression -> . KCAP AGENT expression2

    NOT             shift and go to state 2
    COALITION       shift and go to state 3
    LPAREN          shift and go to state 4
    PROP            shift and go to state 5
    KCAP            shift and go to state 6

    expression                     shift and go to state 11

state 5

    (7) expression -> PROP .

    AND             reduce using rule 7 (expression -> PROP .)
    $end            reduce using rule 7 (expression -> PROP .)
    UNTIL           reduce using rule 7 (expression -> PROP .)
    RELEASE         reduce using rule 7 (expression -> PROP .)
    RPAREN          reduce using rule 7 (expression -> PROP .)


state 6

    (8) expression -> KCAP . AGENT expression2

    AGENT           shift and go to state 12


state 7

    (1) expression -> expression AND . expression
    (1) expression -> . expression AND expression
    (2) expression -> . NOT expression
    (3) expression -> . COALITION expression UNTIL expression
    (4) expression -> . COALITION expression RELEASE expression
    (5) expression -> . COALITION NEXT expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . PROP
    (8) expression -> . KCAP AGENT expression2

    NOT             shift and go to state 2
    COALITION       shift and go to state 3
    LPAREN          shift and go to state 4
    PROP            shift and go to state 5
    KCAP            shift and go to state 6

    expression                     shift and go to state 13

state 8

    (2) expression -> NOT expression .
    (1) expression -> expression . AND expression

  ! shift/reduce conflict for AND resolved as shift
    $end            reduce using rule 2 (expression -> NOT expression .)
    UNTIL           reduce using rule 2 (expression -> NOT expression .)
    RELEASE         reduce using rule 2 (expression -> NOT expression .)
    RPAREN          reduce using rule 2 (expression -> NOT expression .)
    AND             shift and go to state 7

  ! AND             [ reduce using rule 2 (expression -> NOT expression .) ]


state 9

    (3) expression -> COALITION expression . UNTIL expression
    (4) expression -> COALITION expression . RELEASE expression
    (1) expression -> expression . AND expression

    UNTIL           shift and go to state 14
    RELEASE         shift and go to state 15
    AND             shift and go to state 7


state 10

    (5) expression -> COALITION NEXT . expression
    (1) expression -> . expression AND expression
    (2) expression -> . NOT expression
    (3) expression -> . COALITION expression UNTIL expression
    (4) expression -> . COALITION expression RELEASE expression
    (5) expression -> . COALITION NEXT expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . PROP
    (8) expression -> . KCAP AGENT expression2

    NOT             shift and go to state 2
    COALITION       shift and go to state 3
    LPAREN          shift and go to state 4
    PROP            shift and go to state 5
    KCAP            shift and go to state 6

    expression                     shift and go to state 16

state 11

    (6) expression -> LPAREN expression . RPAREN
    (1) expression -> expression . AND expression

    RPAREN          shift and go to state 17
    AND             shift and go to state 7


state 12

    (8) expression -> KCAP AGENT . expression2
    (9) expression2 -> . LPAREN expression2 RPAREN
    (10) expression2 -> . expression2 AND expression2
    (11) expression2 -> . NOT expression2
    (12) expression2 -> . AGENT IS PROP

    LPAREN          shift and go to state 20
    NOT             shift and go to state 21
    AGENT           shift and go to state 18

    expression2                    shift and go to state 19

state 13

    (1) expression -> expression AND expression .
    (1) expression -> expression . AND expression

  ! shift/reduce conflict for AND resolved as shift
    $end            reduce using rule 1 (expression -> expression AND expression .)
    UNTIL           reduce using rule 1 (expression -> expression AND expression .)
    RELEASE         reduce using rule 1 (expression -> expression AND expression .)
    RPAREN          reduce using rule 1 (expression -> expression AND expression .)
    AND             shift and go to state 7

  ! AND             [ reduce using rule 1 (expression -> expression AND expression .) ]


state 14

    (3) expression -> COALITION expression UNTIL . expression
    (1) expression -> . expression AND expression
    (2) expression -> . NOT expression
    (3) expression -> . COALITION expression UNTIL expression
    (4) expression -> . COALITION expression RELEASE expression
    (5) expression -> . COALITION NEXT expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . PROP
    (8) expression -> . KCAP AGENT expression2

    NOT             shift and go to state 2
    COALITION       shift and go to state 3
    LPAREN          shift and go to state 4
    PROP            shift and go to state 5
    KCAP            shift and go to state 6

    expression                     shift and go to state 22

state 15

    (4) expression -> COALITION expression RELEASE . expression
    (1) expression -> . expression AND expression
    (2) expression -> . NOT expression
    (3) expression -> . COALITION expression UNTIL expression
    (4) expression -> . COALITION expression RELEASE expression
    (5) expression -> . COALITION NEXT expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . PROP
    (8) expression -> . KCAP AGENT expression2

    NOT             shift and go to state 2
    COALITION       shift and go to state 3
    LPAREN          shift and go to state 4
    PROP            shift and go to state 5
    KCAP            shift and go to state 6

    expression                     shift and go to state 23

state 16

    (5) expression -> COALITION NEXT expression .
    (1) expression -> expression . AND expression

  ! shift/reduce conflict for AND resolved as shift
    $end            reduce using rule 5 (expression -> COALITION NEXT expression .)
    UNTIL           reduce using rule 5 (expression -> COALITION NEXT expression .)
    RELEASE         reduce using rule 5 (expression -> COALITION NEXT expression .)
    RPAREN          reduce using rule 5 (expression -> COALITION NEXT expression .)
    AND             shift and go to state 7

  ! AND             [ reduce using rule 5 (expression -> COALITION NEXT expression .) ]


state 17

    (6) expression -> LPAREN expression RPAREN .

    AND             reduce using rule 6 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 6 (expression -> LPAREN expression RPAREN .)
    UNTIL           reduce using rule 6 (expression -> LPAREN expression RPAREN .)
    RELEASE         reduce using rule 6 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 6 (expression -> LPAREN expression RPAREN .)


state 18

    (12) expression2 -> AGENT . IS PROP

    IS              shift and go to state 24


state 19

    (8) expression -> KCAP AGENT expression2 .
    (10) expression2 -> expression2 . AND expression2

  ! shift/reduce conflict for AND resolved as shift
    $end            reduce using rule 8 (expression -> KCAP AGENT expression2 .)
    UNTIL           reduce using rule 8 (expression -> KCAP AGENT expression2 .)
    RELEASE         reduce using rule 8 (expression -> KCAP AGENT expression2 .)
    RPAREN          reduce using rule 8 (expression -> KCAP AGENT expression2 .)
    AND             shift and go to state 25

  ! AND             [ reduce using rule 8 (expression -> KCAP AGENT expression2 .) ]


state 20

    (9) expression2 -> LPAREN . expression2 RPAREN
    (9) expression2 -> . LPAREN expression2 RPAREN
    (10) expression2 -> . expression2 AND expression2
    (11) expression2 -> . NOT expression2
    (12) expression2 -> . AGENT IS PROP

    LPAREN          shift and go to state 20
    NOT             shift and go to state 21
    AGENT           shift and go to state 18

    expression2                    shift and go to state 26

state 21

    (11) expression2 -> NOT . expression2
    (9) expression2 -> . LPAREN expression2 RPAREN
    (10) expression2 -> . expression2 AND expression2
    (11) expression2 -> . NOT expression2
    (12) expression2 -> . AGENT IS PROP

    LPAREN          shift and go to state 20
    NOT             shift and go to state 21
    AGENT           shift and go to state 18

    expression2                    shift and go to state 27

state 22

    (3) expression -> COALITION expression UNTIL expression .
    (1) expression -> expression . AND expression

  ! shift/reduce conflict for AND resolved as shift
    $end            reduce using rule 3 (expression -> COALITION expression UNTIL expression .)
    UNTIL           reduce using rule 3 (expression -> COALITION expression UNTIL expression .)
    RELEASE         reduce using rule 3 (expression -> COALITION expression UNTIL expression .)
    RPAREN          reduce using rule 3 (expression -> COALITION expression UNTIL expression .)
    AND             shift and go to state 7

  ! AND             [ reduce using rule 3 (expression -> COALITION expression UNTIL expression .) ]


state 23

    (4) expression -> COALITION expression RELEASE expression .
    (1) expression -> expression . AND expression

  ! shift/reduce conflict for AND resolved as shift
    $end            reduce using rule 4 (expression -> COALITION expression RELEASE expression .)
    UNTIL           reduce using rule 4 (expression -> COALITION expression RELEASE expression .)
    RELEASE         reduce using rule 4 (expression -> COALITION expression RELEASE expression .)
    RPAREN          reduce using rule 4 (expression -> COALITION expression RELEASE expression .)
    AND             shift and go to state 7

  ! AND             [ reduce using rule 4 (expression -> COALITION expression RELEASE expression .) ]


state 24

    (12) expression2 -> AGENT IS . PROP

    PROP            shift and go to state 28


state 25

    (10) expression2 -> expression2 AND . expression2
    (9) expression2 -> . LPAREN expression2 RPAREN
    (10) expression2 -> . expression2 AND expression2
    (11) expression2 -> . NOT expression2
    (12) expression2 -> . AGENT IS PROP

    LPAREN          shift and go to state 20
    NOT             shift and go to state 21
    AGENT           shift and go to state 18

    expression2                    shift and go to state 29

state 26

    (9) expression2 -> LPAREN expression2 . RPAREN
    (10) expression2 -> expression2 . AND expression2

    RPAREN          shift and go to state 30
    AND             shift and go to state 25


state 27

    (11) expression2 -> NOT expression2 .
    (10) expression2 -> expression2 . AND expression2

  ! shift/reduce conflict for AND resolved as shift
    $end            reduce using rule 11 (expression2 -> NOT expression2 .)
    UNTIL           reduce using rule 11 (expression2 -> NOT expression2 .)
    RELEASE         reduce using rule 11 (expression2 -> NOT expression2 .)
    RPAREN          reduce using rule 11 (expression2 -> NOT expression2 .)
    AND             shift and go to state 25

  ! AND             [ reduce using rule 11 (expression2 -> NOT expression2 .) ]


state 28

    (12) expression2 -> AGENT IS PROP .

    AND             reduce using rule 12 (expression2 -> AGENT IS PROP .)
    $end            reduce using rule 12 (expression2 -> AGENT IS PROP .)
    UNTIL           reduce using rule 12 (expression2 -> AGENT IS PROP .)
    RELEASE         reduce using rule 12 (expression2 -> AGENT IS PROP .)
    RPAREN          reduce using rule 12 (expression2 -> AGENT IS PROP .)


state 29

    (10) expression2 -> expression2 AND expression2 .
    (10) expression2 -> expression2 . AND expression2

  ! shift/reduce conflict for AND resolved as shift
    $end            reduce using rule 10 (expression2 -> expression2 AND expression2 .)
    UNTIL           reduce using rule 10 (expression2 -> expression2 AND expression2 .)
    RELEASE         reduce using rule 10 (expression2 -> expression2 AND expression2 .)
    RPAREN          reduce using rule 10 (expression2 -> expression2 AND expression2 .)
    AND             shift and go to state 25

  ! AND             [ reduce using rule 10 (expression2 -> expression2 AND expression2 .) ]


state 30

    (9) expression2 -> LPAREN expression2 RPAREN .

    AND             reduce using rule 9 (expression2 -> LPAREN expression2 RPAREN .)
    $end            reduce using rule 9 (expression2 -> LPAREN expression2 RPAREN .)
    UNTIL           reduce using rule 9 (expression2 -> LPAREN expression2 RPAREN .)
    RELEASE         reduce using rule 9 (expression2 -> LPAREN expression2 RPAREN .)
    RPAREN          reduce using rule 9 (expression2 -> LPAREN expression2 RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 8 resolved as shift
WARNING: shift/reduce conflict for AND in state 13 resolved as shift
WARNING: shift/reduce conflict for AND in state 16 resolved as shift
WARNING: shift/reduce conflict for AND in state 19 resolved as shift
WARNING: shift/reduce conflict for AND in state 22 resolved as shift
WARNING: shift/reduce conflict for AND in state 23 resolved as shift
WARNING: shift/reduce conflict for AND in state 27 resolved as shift
WARNING: shift/reduce conflict for AND in state 29 resolved as shift
