[build-system]
requires = [
    "setuptools>=64",
    "setuptools-scm>=8",
]
build-backend = "setuptools.build_meta"

[project]
name="ducktools-env"
description="Virtual environment management tools and application bundle builder"
authors = [
  { name="David C Ellis" },
]
readme="README.md"
requires-python = ">=3.10"
dependencies = [
    "ducktools-classbuilder>=0.7.1",
    "ducktools-lazyimporter>=0.7.0",
    "ducktools-scriptmetadata",
    "ducktools-pythonfinder>=0.8.1",
    "tomli; python_version < '3.11'",
    "packaging>=23.2",
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]
dynamic = ["version"]

[project.optional-dependencies]
testing = ["pytest", "pytest-cov", "coverage-conditional-plugin"]

[project.scripts]
"ducktools-env" = "ducktools.env.__main__:main"
"dtrun" = "ducktools.env._run:run"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
version_file = "src/ducktools/env/_version.py"
version_file_template = """
__version__ = "{version}"
__version_tuple__ = {version_tuple}
"""

[tool.pytest.ini_options]
addopts= "--cov=src/ --cov-report=term-missing --cov-report xml:cov.xml"
testpaths = [
    "tests",
]

[tool.coverage.run]
plugins = ["coverage_conditional_plugin"]

[tool.coverage.coverage_conditional_plugin.rules]
# This tool works backwards - it really means no cover if <condition>
skip-if-os-win32 = "sys_platform == 'win32'"
skip-if-os-other = "sys_platform != 'win32'"

