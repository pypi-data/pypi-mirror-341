Metadata-Version: 2.4
Name: aemet-mcp
Version: 0.1.2
Summary: AEMET API integration with MCP (Model Context Protocol)
License-Expression: MIT
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: httpx>=0.28.1
Requires-Dist: mcp[cli]>=1.6.0
Dynamic: license-file


# AEMET-MCP - Integración meteorológica vía MCP

**Aemet-mcp** permite acceder a datos meteorológicos históricos y climatológicos de la API de AEMET directamente desde Claude AI, utilizando el protocolo **Model Context Protocol (MCP)**.
Aemet-mcp Es un servidor MCP que expone herramientas para que los LLM 
puedan consultar los datos climáticos de las estaciones meteorológicas de España.

A modo de prueba, se han desarrollado dos servidores iguales, uno para interactuar con la IA en inglés, 
y el otro para interactuar en español.

## Características principales

- Consulta de **valores diarios históricos** (temperatura, viento, precipitaciones, etc.).
- Acceso a **resúmenes climatológicos mensuales** por estación.
- Filtrado por año, mes y código de estación AEMET.
- Respuestas listas para utilizar en formato JSON.

## Instalación

### Prerrequisitos

- Python 3.10 o superior
- [uv](https://docs.astral.sh/uv/getting-started/installation/)  package manager

## Instalación de uv

Lo primero que hay que hacer es instalar el paquete uv, que es un gestor de paquetes para Python.
Se instala desde la consola

En MAC: 
```bash
brew install uv
```

En Windows, primero instalar
```bash
powershell -c "irm https://astral.sh/uv/install.ps1 | iex"
``` 

y después establecer PATH:
```bash
set Path=C:\Users\nntra\.local\bin;%Path%
``` 

También se puede instalar con pip:
```bash
pip install uv
``` 

## Integración con Claude para Escritorio

Una vez que tenemos **uv** instalado, ya podemos usar el servidor MCP desde cualquier cliente compatible, 
como Claude para Escritorio, en cuyo caso los pasos a seguir son los siguientes:

1. Ve a **Claude > Settings > Developer > Edit Config > `claude_desktop_config.json`**.
2. Agrega los siguientes bloques dentro de `"mcpServers"`:
3. Obtener clave API gratuita de AEMET desde https://opendata.aemet.es/centrodedescargas/altaUsuario?
4. Sustituir donde pone YOUR_AEMET_API_KEY por la clave de API obtenida:

```json
"aemet-es": {
    "command": "uvx",
    "args": [
        "aemet-mcp-es"
    ],
    "env": {
        "AEMET_API_KEY": "YOUR_AEMET_API_KEY"
    }
}

"aemet-eng": {
    "command": "uvx",
    "args": [
        "aemet-mcp-eng"
    ],
    "env": {
        "AEMET_API_KEY": "YOUR_AEMET_API_KEY"
    }
}
```
En general, para integrarlo en cualquier otro cliente compatible con MCP, como pueden ser Cursor, 
CODEGPT o Roo Code, solamente hay que ir a la correspondiente configuración de 
los servidores MCP del cliente y añadir los mismos bloques de código:


## Ejemplos de uso

Una vez configurado correctamente, podrás pedirle cosas como:
```
- `"¿Qué tiempo hace en Sevilla?"`
- `"Dime los niveles de radiación en la playa de Maspalomas para mañana"`
- `"Dime los datos históricos de lluvia en Albacete entre el 1 de enero de 2020 y el 1 de febrero de 2020"`
---
