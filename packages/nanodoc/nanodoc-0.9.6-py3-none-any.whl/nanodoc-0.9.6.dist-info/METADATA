Metadata-Version: 2.3
Name: nanodoc
Version: 0.9.6
Summary: A minimalist document bundler designed for stitching hints, reminders and short docs.
Home-page: https://github.com/arthur-debert/nanodoc/
License: # License
         
         MIT License
         
         Copyright (c) 2024 Arthur Debert
         
         Permission is hereby granted, free of charge, to any person obtaining a copy
         of this software and associated documentation files (the "Software"), to deal
         in the Software without restriction, including without limitation the rights
         to use, copy, modify, merge, publish, distribute, innerlicense, and/or sell
         copies of the Software, and to permit persons to whom the Software is
         furnished to do so, innerject to the following conditions:
         
         The above copyright notice and this permission notice shall be included in all
         copies or innerstantial portions of the Software.
         
         THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
         AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
         SOFTWARE.
Keywords: documentation,bundler,minimalist,text,prompts
Author: Arthur Debert
Author-email: arthur@debert.xyz
Requires-Python: >=3.9
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Documentation
Classifier: Topic :: Text Processing :: Markup
Provides-Extra: dev
Requires-Dist: black (>=25.1.0,<26.0.0) ; extra == "dev"
Requires-Dist: click (>=8.1.7,<9.0.0)
Requires-Dist: jinja2 (>=3.1.6,<4.0.0) ; extra == "dev"
Requires-Dist: pre-commit (>=4.1.0,<5.0.0) ; extra == "dev"
Requires-Dist: pytest (>=8.3.5,<9.0.0) ; extra == "dev"
Requires-Dist: pytest-cov (>=4.1.0,<5.0.0) ; extra == "dev"
Requires-Dist: rich (>=13.9.4,<14.0.0)
Requires-Dist: ruff (>=0.3.2,<0.4.0) ; extra == "dev"
Requires-Dist: twine (>=6.1.0,<7.0.0) ; extra == "dev"
Project-URL: Bug Tracker, https://github.com/arthur-debert/nanodoc/issues
Project-URL: Repository, https://github.com/arthur-debert/nanodoc/
Description-Content-Type: text/plain

Nanodoc
--------

Nanodoc is a minimalist document bundler designed for stiching hints, reminders and short docs.
Useful for prompts, personalized docs highlights for your teams or a note to your future self

No config, nothing to learn nor remember. Short , simple, sweet.

Features
--------

- No config, no tutorial, no pain.
- Combines multiple text files into a single document
- Adds clear title separators between pages
- Supports optional line numbering (per file or global)
- Can generate a table of contents
- Flexible file selection methods
- Customizable header styles and sequence numbering

Usage
-----

$ nanodoc file1.txt file2.txt


$ nanodoc -n file1.txt file2.txt              # Per-file line numbering
$ nanodoc -nn file1.txt file2.txt             # Global line numbering
$ nanodoc -nn --toc file1.txt file2.txt       # Global numbering with TOC

File Selection Options
----------------------

Nanodoc is flexible in how you specify the files to bundle:

$ nanodoc <file-1>...<file-n> # individual files
$ nanodoc <dir-name> # all txt and md files in the dir will be included
$ nanodoc <dir-name> <file-1> # mix and match as you'd like
$ nanodoc <bundle> # any .bundle.* file that is a list of paths, one per line
$ nanodoc <live-bundle> # a file that mixes text and file paths, where paths are replaced with their content

Get only parts of a file:

$ nanodoc readme.txt:L14-16,L30-50 # get the good parts only

Command Line Options
--------------------

- `-n`: Add per-file line numbering (01, 02, etc.)
- `-nn`: Add global line numbering: useful for referencing the full doc gen later
- `--toc`: Generate a table of contents at the beginning

Get fancy
---------

- `--seq`: numerical, roman or letter for ref the file sequence
- `--style`: nice (Human Readable (human-readable.txt), or file, or full-path

Save for later:
---------------

Generated a doc good enough to repeat, export the bundle

$nanodoc --export-bundle bestdocs.bundle.txt <file-1>...<file-n>

Keep it simple
--------------

Nothing to config.
Nothing to learn.
No tutorials to watch.

In fact, you've just went through the full documentation.
$ nanodoc --help # all there is


## Installation

nanodoc is available at a distributor near you:

# Using pip
pip install nanodoc
# even better pipx
pipx install --user nanodoc

## Contributing

Contributions are welcome! Say hi, curse me for eternity or even send in something constructive.
Feel free to open issues or submit pull requests.

(just keep it short, we're nano people after all)

## License

MIT License

