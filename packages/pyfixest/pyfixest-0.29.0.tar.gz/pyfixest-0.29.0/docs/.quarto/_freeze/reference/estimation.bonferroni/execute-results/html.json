{
  "hash": "4a4843aa08c1fa5e3fae5d4dfb47c2e4",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: estimation.bonferroni\n---\n\n\n\n```python\nestimation.bonferroni(models, param)\n```\n\nCompute Bonferroni adjusted p-values for multiple hypothesis testing.\n\nFor each model, it is assumed that tests to adjust are of the form\n\"param = 0\".\n\n## Parameters {.doc-section .doc-section-parameters}\n\n| Name   | Type                                                                     | Description                                              | Default    |\n|--------|--------------------------------------------------------------------------|----------------------------------------------------------|------------|\n| models | A supported model object (Feols, Fepois, Feiv, FixestMulti) or a list of | Feols, Fepois & Feiv models.                             | _required_ |\n| param  | str                                                                      | The parameter for which the p-values should be adjusted. | _required_ |\n\n## Returns {.doc-section .doc-section-returns}\n\n| Name   | Type         | Description                                                                               |\n|--------|--------------|-------------------------------------------------------------------------------------------|\n|        | pd.DataFrame | A DataFrame containing estimation statistics, including the Bonferroni adjusted p-values. |\n\n## Examples {.doc-section .doc-section-examples}\n\n\n::: {#198e93ca .cell execution_count=1}\n``` {.python .cell-code}\nimport pyfixest as pf\nfrom pyfixest.utils import get_data\n\ndata = get_data().dropna()\nfit1 = pf.feols(\"Y ~ X1\", data=data)\nfit2 = pf.feols(\"Y ~ X1 + X2\", data=data)\nbonf_df = pf.bonferroni([fit1, fit2], param=\"X1\")\nbonf_df\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"S7BQtU\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.5.2/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"S7BQtU\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"S7BQtU\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"TTGR4v\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.5.2/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"TTGR4v\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"TTGR4v\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>est0</th>\n      <th>est1</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Estimate</th>\n      <td>-1.001930</td>\n      <td>-0.995197</td>\n    </tr>\n    <tr>\n      <th>Std. Error</th>\n      <td>0.084823</td>\n      <td>0.082194</td>\n    </tr>\n    <tr>\n      <th>t value</th>\n      <td>-11.811964</td>\n      <td>-12.107957</td>\n    </tr>\n    <tr>\n      <th>Pr(&gt;|t|)</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>2.5%</th>\n      <td>-1.168383</td>\n      <td>-1.156490</td>\n    </tr>\n    <tr>\n      <th>97.5%</th>\n      <td>-0.835476</td>\n      <td>-0.833904</td>\n    </tr>\n    <tr>\n      <th>Bonferroni Pr(&gt;|t|)</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "estimation.bonferroni_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}