{
  "hash": "95e3217ad8d3e1a7a845a7cc9196903b",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: report.dtable\n---\n\n\n\n```python\nreport.dtable(\n    df,\n    vars,\n    stats=None,\n    bycol=None,\n    byrow=None,\n    type='gt',\n    labels=None,\n    stats_labels=None,\n    digits=2,\n    notes='',\n    counts_row_below=False,\n    hide_stats=False,\n    **kwargs,\n)\n```\n\nGenerate descriptive statistics tables and create a booktab style table in\nthe desired format (gt or tex).\n\n## Parameters {.doc-section .doc-section-parameters}\n\n| Name             | Type         | Description                                                                                                                                                                                               | Default    |\n|------------------|--------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|\n| df               | pd.DataFrame | DataFrame containing the table to be displayed.                                                                                                                                                           | _required_ |\n| vars             | list         | List of variables to be included in the table.                                                                                                                                                            | _required_ |\n| stats            | list         | List of statistics to be calculated. The default is None, that sets ['count','mean', 'std']. All pandas aggregation functions are supported.                                                              | `None`     |\n| bycol            | list         | List of variables to be used to group the data by columns. The default is None.                                                                                                                           | `None`     |\n| byrow            | str          | Variable to be used to group the data by rows. The default is None.                                                                                                                                       | `None`     |\n| type             | str          | Type of table to be created. The default is 'gt'. Type can be 'gt' for great_tables, 'tex' for LaTeX or 'df' for dataframe.                                                                               | `'gt'`     |\n| labels           | dict         | Dictionary containing the labels for the variables. The default is None.                                                                                                                                  | `None`     |\n| stats_labels     | dict         | Dictionary containing the labels for the statistics. The default is None. The function uses a default labeling which will be replaced by the labels in the dictionary.                                    | `None`     |\n| digits           | int          | Number of decimal places to round the statistics to. The default is 2.                                                                                                                                    | `2`        |\n| notes            | str          | Table notes to be displayed at the bottom of the table.                                                                                                                                                   | `''`       |\n| counts_row_below | bool         | Whether to display the number of observations at the bottom of the table. Will only be carried out when each var has the same number of obs and when byrow is None. The default is False                  | `False`    |\n| hide_stats       | bool         | Whether to hide the names of the statistics in the table header. When stats are hidden and the user provides no notes string the labels of the stats are listed in the table notes. The default is False. | `False`    |\n| kwargs           | dict         | Additional arguments to be passed to the make_table function.                                                                                                                                             | `{}`       |\n\n## Returns {.doc-section .doc-section-returns}\n\n| Name   | Type                             | Description   |\n|--------|----------------------------------|---------------|\n|        | A table in the specified format. |               |\n\n## Examples {.doc-section .doc-section-examples}\n\nFor more examples, take a look at the [regression tables and summary statistics vignette](https://py-econometrics.github.io/pyfixest/table-layout.html).\n\n\n::: {#532264a3 .cell execution_count=1}\n``` {.python .cell-code}\nimport pyfixest as pf\n\n# load data\ndf = pf.get_data()\npf.dtable(df, vars = [\"Y\", \"X1\", \"X2\", \"f1\"])\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"EcNuzA\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.5.2/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"EcNuzA\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"EcNuzA\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"3RL5Ui\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.5.2/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"3RL5Ui\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"3RL5Ui\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div id=\"pizbvqzjvj\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#pizbvqzjvj table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#pizbvqzjvj thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#pizbvqzjvj p { margin: 0; padding: 0; }\n #pizbvqzjvj .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #pizbvqzjvj .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #pizbvqzjvj .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #pizbvqzjvj .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #pizbvqzjvj .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #pizbvqzjvj .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #pizbvqzjvj .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #pizbvqzjvj .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #pizbvqzjvj .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #pizbvqzjvj .gt_column_spanner_outer:first-child { padding-left: 0; }\n #pizbvqzjvj .gt_column_spanner_outer:last-child { padding-right: 0; }\n #pizbvqzjvj .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #pizbvqzjvj .gt_spanner_row { border-bottom-style: hidden; }\n #pizbvqzjvj .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #pizbvqzjvj .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #pizbvqzjvj .gt_from_md> :first-child { margin-top: 0; }\n #pizbvqzjvj .gt_from_md> :last-child { margin-bottom: 0; }\n #pizbvqzjvj .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #pizbvqzjvj .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #pizbvqzjvj .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #pizbvqzjvj .gt_row_group_first td { border-top-width: 0.5px; }\n #pizbvqzjvj .gt_row_group_first th { border-top-width: 0.5px; }\n #pizbvqzjvj .gt_striped { background-color: rgba(128,128,128,0.05); }\n #pizbvqzjvj .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #pizbvqzjvj .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #pizbvqzjvj .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #pizbvqzjvj .gt_left { text-align: left; }\n #pizbvqzjvj .gt_center { text-align: center; }\n #pizbvqzjvj .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #pizbvqzjvj .gt_font_normal { font-weight: normal; }\n #pizbvqzjvj .gt_font_bold { font-weight: bold; }\n #pizbvqzjvj .gt_font_italic { font-style: italic; }\n #pizbvqzjvj .gt_super { font-size: 65%; }\n #pizbvqzjvj .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #pizbvqzjvj .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"N\">N</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Mean\">Mean</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Std. Dev.\">Std. Dev.</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Y</th>\n    <td class=\"gt_row gt_center\">999</td>\n    <td class=\"gt_row gt_center\">-0.13</td>\n    <td class=\"gt_row gt_center\">2.30</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X1</th>\n    <td class=\"gt_row gt_center\">999</td>\n    <td class=\"gt_row gt_center\">1.04</td>\n    <td class=\"gt_row gt_center\">0.81</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X2</th>\n    <td class=\"gt_row gt_center\">1000</td>\n    <td class=\"gt_row gt_center\">-0.13</td>\n    <td class=\"gt_row gt_center\">3.05</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f1</th>\n    <td class=\"gt_row gt_center\">999</td>\n    <td class=\"gt_row gt_center\">14.21</td>\n    <td class=\"gt_row gt_center\">8.70</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"4\"></td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\n",
    "supporting": [
      "report.dtable_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}