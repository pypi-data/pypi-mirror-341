{
  "hash": "a50a53e6528dc97ec5c9d3631629586d",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: report.etable\n---\n\n\n\n```python\nreport.etable(\n    models,\n    type='gt',\n    signif_code=None,\n    coef_fmt='b \\n (se)',\n    custom_stats=None,\n    custom_model_stats=None,\n    keep=None,\n    drop=None,\n    exact_match=False,\n    labels=None,\n    cat_template=None,\n    show_fe=True,\n    show_se_type=True,\n    felabels=None,\n    notes='',\n    model_heads=None,\n    head_order='dh',\n    filename=None,\n    print_tex=False,\n    **kwargs,\n)\n```\n\nGenerate a table summarizing the results of multiple regression models.\nIt supports various output formats including html (via great tables),  markdown, and LaTeX.\n\n## Parameters {.doc-section .doc-section-parameters}\n\n| Name                          | Type                                                                     | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | Default       |\n|-------------------------------|--------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------|\n| models                        | A supported model object (Feols, Fepois, Feiv, FixestMulti) or a list of | Feols, Fepois & Feiv models. The models to be summarized in the table.                                                                                                                                                                                                                                                                                                                                                                                                      | _required_    |\n| type                          | str                                                                      | Type of output. Either \"df\" for pandas DataFrame, \"md\" for markdown, \"gt\" for great_tables, or \"tex\" for LaTeX table. Default is \"gt\".                                                                                                                                                                                                                                                                                                                                      | `'gt'`        |\n| signif_code                   | list                                                                     | Significance levels for the stars. Default is None, which sets [0.001, 0.01, 0.05]. If None, no stars are printed.                                                                                                                                                                                                                                                                                                                                                          | `None`        |\n| coef_fmt                      | str                                                                      | The format of the coefficient (b), standard error (se), t-stats (t), and p-value (p). Default is `\"b \\n (se)\"`. Spaces ` `, parentheses `()`, brackets `[]`, newlines `\\n` are supported.                                                                                                                                                                                                                                                                                   | `'b \\n (se)'` |\n| custom_stats                  | Optional\\[dict\\]                                                         | A dictionary of custom statistics that can be used in the coef_fmt string to be displayed in the coefficuent cells analogously to \"b\", \"se\" etc. The keys are the names of the custom statistics, and the values are lists of lists, where each inner list contains the custom statistic values for all coefficients each model. Note that \"b\", \"se\", \"t\", or \"p\" are reserved and cannot be used as keys.                                                                  | `None`        |\n| custom_model_stats            | Optional\\[dict\\]                                                         | A dictionary of custom model statistics or model information displayed in a new line in the bottom panel of the table. The keys are the names of the statistics (i.e. entry in the first column) and the values are a lists of the same length as the number of models. Default is None.                                                                                                                                                                                    | `None`        |\n| keep                          | Optional\\[Union\\[list, str\\]\\]                                           | The pattern for retaining coefficient names. You can pass a string (one pattern) or a list (multiple patterns). Default is keeping all coefficients. You should use regular expressions to select coefficients.     \"age\",            # would keep all coefficients containing age     r\"^tr\",           # would keep all coefficients starting with tr     r\"\\\\d$\",          # would keep all coefficients ending with number Output will be in the order of the patterns. | `None`        |\n| drop                          | Optional\\[Union\\[list, str\\]\\]                                           | The pattern for excluding coefficient names. You can pass a string (one pattern) or a list (multiple patterns). Syntax is the same as for `keep`. Default is keeping all coefficients. Parameter `keep` and `drop` can be used simultaneously.                                                                                                                                                                                                                              | `None`        |\n| exact_match                   | Optional\\[bool\\]                                                         | Whether to use exact match for `keep` and `drop`. Default is False. If True, the pattern will be matched exactly to the coefficient name instead of using regular expressions.                                                                                                                                                                                                                                                                                              | `False`       |\n| labels                        | Optional\\[dict\\]                                                         | A dictionary to relabel the variables. The keys are the original variable names and the values the new names. Note that interaction terms will also be relabeled using the labels of the individual variables. The command is applied after the `keep` and `drop` commands.                                                                                                                                                                                                 | `None`        |\n| cat_template                  | Optional\\[str\\]                                                          | Template to relabel categorical variables. None by default, which applies no relabeling. Other options include combinations of \"{variable}\" and \"{value}\", e.g. \"{variable}::{value}\" to mimic fixest encoding. But \"{variable}--{value}\" or \"{variable}{value}\" or just \"{value}\" are also possible.                                                                                                                                                                       | `None`        |\n| show_fe                       | Optional\\[bool\\]                                                         | Whether to show the rows with fixed effects markers. Default is True.                                                                                                                                                                                                                                                                                                                                                                                                       | `True`        |\n| show_se_type                  | Optional\\[bool\\]                                                         | Whether to show the rows with standard error type. Default is True.                                                                                                                                                                                                                                                                                                                                                                                                         | `True`        |\n| felabels                      | Optional\\[dict\\]                                                         | A dictionary to relabel the fixed effects. Only needed if you want to relabel the FE lines with a different label than the one specied for the respective variable in the labels dictionary. The command is applied after the `keep` and `drop` commands.                                                                                                                                                                                                                   | `None`        |\n| digits                        |                                                                          | The number of digits to round to.                                                                                                                                                                                                                                                                                                                                                                                                                                           | _required_    |\n| thousands_sep                 |                                                                          | The thousands separator. Default is False.                                                                                                                                                                                                                                                                                                                                                                                                                                  | _required_    |\n| scientific_notation           |                                                                          | Whether to use scientific notation. Default is True.                                                                                                                                                                                                                                                                                                                                                                                                                        | _required_    |\n| scientific_notation_threshold |                                                                          | The threshold for using scientific notation. Default is 10_000.                                                                                                                                                                                                                                                                                                                                                                                                             | _required_    |\n| notes                         | str                                                                      | Custom table notes. Default shows the significance levels and the format of the coefficient cell.                                                                                                                                                                                                                                                                                                                                                                           | `''`          |\n| model_heads                   | Optional\\[list\\]                                                         | Add custom headlines to models when output as df or latex. Length of list must correspond to number of models. Default is None.                                                                                                                                                                                                                                                                                                                                             | `None`        |\n| head_order                    | Optional\\[str\\]                                                          | String to determine the display of the table header when output as df or latex. Allowed values are \"dh\", \"hd\", \"d\", \"h\", or \"\". When head_order is \"dh\", the dependent variable is displayed first, followed by the custom model_heads (provided the user has specified them). With \"hd\" it is the other way around. When head_order is \"d\", only the dependent variable and model numbers are displayed and with \"\" only the model numbers. Default is \"dh\".               | `'dh'`        |\n| filename                      | Optional\\[str\\]                                                          | The filename to save the LaTeX table to. If None, the LaTeX code is returned as a string. Default is None.                                                                                                                                                                                                                                                                                                                                                                  | `None`        |\n| print_tex                     | Optional\\[bool\\]                                                         | Whether to print the LaTeX code to the console. Default is False.                                                                                                                                                                                                                                                                                                                                                                                                           | `False`       |\n\n## Returns {.doc-section .doc-section-returns}\n\n| Name   | Type             | Description                                                                                                                               |\n|--------|------------------|-------------------------------------------------------------------------------------------------------------------------------------------|\n|        | pandas.DataFrame | A styled DataFrame with the coefficients and standard errors of the models. When output is \"tex\", the LaTeX code is returned as a string. |\n\n## Examples {.doc-section .doc-section-examples}\n\nFor more examples, take a look at the [regression tables and summary statistics vignette](https://py-econometrics.github.io/pyfixest/table-layout.html).\n\n\n::: {#6b75498c .cell execution_count=1}\n``` {.python .cell-code}\nimport pyfixest as pf\n\n# load data\ndf = pf.get_data()\nfit1 = pf.feols(\"Y~X1 + X2 | f1\", df)\nfit2 = pf.feols(\"Y~X1 + X2 | f1 + f2\", df)\n\npf.etable([fit1, fit2])\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"ZHzXIi\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.5.2/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"ZHzXIi\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"ZHzXIi\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"0iBnk7\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.5.2/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"0iBnk7\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"0iBnk7\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div id=\"yetkzysfyt\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#yetkzysfyt table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#yetkzysfyt thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#yetkzysfyt p { margin: 0; padding: 0; }\n #yetkzysfyt .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #yetkzysfyt .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #yetkzysfyt .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #yetkzysfyt .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #yetkzysfyt .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #yetkzysfyt .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #yetkzysfyt .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #yetkzysfyt .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #yetkzysfyt .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #yetkzysfyt .gt_column_spanner_outer:first-child { padding-left: 0; }\n #yetkzysfyt .gt_column_spanner_outer:last-child { padding-right: 0; }\n #yetkzysfyt .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #yetkzysfyt .gt_spanner_row { border-bottom-style: hidden; }\n #yetkzysfyt .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #yetkzysfyt .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #yetkzysfyt .gt_from_md> :first-child { margin-top: 0; }\n #yetkzysfyt .gt_from_md> :last-child { margin-bottom: 0; }\n #yetkzysfyt .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #yetkzysfyt .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #yetkzysfyt .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #yetkzysfyt .gt_row_group_first td { border-top-width: 0.5px; }\n #yetkzysfyt .gt_row_group_first th { border-top-width: 0.5px; }\n #yetkzysfyt .gt_striped { background-color: rgba(128,128,128,0.05); }\n #yetkzysfyt .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #yetkzysfyt .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #yetkzysfyt .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #yetkzysfyt .gt_left { text-align: left; }\n #yetkzysfyt .gt_center { text-align: center; }\n #yetkzysfyt .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #yetkzysfyt .gt_font_normal { font-weight: normal; }\n #yetkzysfyt .gt_font_bold { font-weight: bold; }\n #yetkzysfyt .gt_font_italic { font-style: italic; }\n #yetkzysfyt .gt_super { font-size: 65%; }\n #yetkzysfyt .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #yetkzysfyt .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"Y\">\n    <span class=\"gt_column_spanner\">Y</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(1)\">(1)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(2)\">(2)</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">coef</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X1</th>\n    <td class=\"gt_row gt_center\">-0.950*** <br> (0.067)</td>\n    <td class=\"gt_row gt_center\">-0.924*** <br> (0.062)</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X2</th>\n    <td class=\"gt_row gt_center\">-0.174*** <br> (0.018)</td>\n    <td class=\"gt_row gt_center\">-0.174*** <br> (0.015)</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">fe</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f1</th>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f2</th>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">stats</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Observations</th>\n    <td class=\"gt_row gt_center\">997</td>\n    <td class=\"gt_row gt_center\">997</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">S.E. type</th>\n    <td class=\"gt_row gt_center\">by: f1</td>\n    <td class=\"gt_row gt_center\">by: f1</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">0.489</td>\n    <td class=\"gt_row gt_center\">0.659</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup> Within</th>\n    <td class=\"gt_row gt_center\">0.239</td>\n    <td class=\"gt_row gt_center\">0.303</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"3\">Significance levels: * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001. Format of coefficient cell:\nCoefficient \n (Std. Error)</td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\n",
    "supporting": [
      "report.etable_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}