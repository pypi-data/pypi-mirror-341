{
  "hash": "34b950318224cd4fa0796adfad4bb0f6",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Getting Started with PyFixest\"\nformat:\n  html:\n    html-table-processing: none\ntoc: true\ntoc-title: \"On this page\"\ntoc-location: left\n---\n\n\n\n\n# OLS with Fixed Effects\n\n## What is a fixed effect model?\n\nA fixed effect model is a statistical model that includes fixed effects, which are parameters that are estimated to be constant across different groups.\n\n**Example [Panel Data]:** In the context of panel data, fixed effects are parameters that are constant across different individuals or time. The typical model example is given by the following equation:\n\n$$\nY_{it} = \\beta X_{it} + \\alpha_i + \\psi_t + \\varepsilon_{it}\n$$\n\nwhere $Y_{it}$ is the dependent variable for individual $i$ at time $t$, $X_{it}$ is the independent variable, $\\beta$ is the coefficient of the independent variable, $\\alpha_i$ is the individual fixed effect, $\\psi_t$ is the time fixed effect, and $\\varepsilon_{it}$ is the error term. The individual fixed effect $\\alpha_i$ is a parameter that is constant across time for each individual, while the time fixed effect $\\psi_t$ is a parameter that is constant across individuals for each time period.\n\nNote however that, despite the fact that fixed effects are commonly used in panel setting, one does not need a panel data set to work with fixed effects. For example, cluster randomized trials with cluster fixed effects, or wage regressions with worker and firm fixed effects.\n\nIn this \"quick start\" guide, we will show you how to estimate a fixed effect model using the `PyFixest` package. We do not go into the details of the theory behind fixed effect models, but we focus on how to estimate them using `PyFixest`.\n\n## Read Sample Data\n\nIn a first step, we load the module and some synthetic example data:\n\n::: {#6e536d60 .cell execution_count=1}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\ntry:\n    from lets_plot import LetsPlot\n    _HAS_LETS_PLOT = True\nexcept ImportError:\n    _HAS_LETS_PLOT = False\n\nfrom marginaleffects import slopes, avg_slopes\n\nimport pyfixest as pf\n\nif _HAS_LETS_PLOT:\n    LetsPlot.setup_html()\n\nplt.style.use(\"seaborn-v0_8\")\n\n%load_ext watermark\n%config InlineBackend.figure_format = \"retina\"\n%watermark --iversions\n\ndata = pf.get_data()\n\ndata.head()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"RJtWA4\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.5.2/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"RJtWA4\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"RJtWA4\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"y5eVU7\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.5.2/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"y5eVU7\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"y5eVU7\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"my9CE5\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.5.2/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"my9CE5\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"my9CE5\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nmatplotlib: 3.10.0\npandas    : 2.2.3\npyfixest  : 0.28.0\nnumpy     : 2.1.3\n\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Y</th>\n      <th>Y2</th>\n      <th>X1</th>\n      <th>X2</th>\n      <th>f1</th>\n      <th>f2</th>\n      <th>f3</th>\n      <th>group_id</th>\n      <th>Z1</th>\n      <th>Z2</th>\n      <th>weights</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>NaN</td>\n      <td>2.357103</td>\n      <td>0.0</td>\n      <td>0.457858</td>\n      <td>15.0</td>\n      <td>0.0</td>\n      <td>7.0</td>\n      <td>9.0</td>\n      <td>-0.330607</td>\n      <td>1.054826</td>\n      <td>0.661478</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>-1.458643</td>\n      <td>5.163147</td>\n      <td>NaN</td>\n      <td>-4.998406</td>\n      <td>6.0</td>\n      <td>21.0</td>\n      <td>4.0</td>\n      <td>8.0</td>\n      <td>NaN</td>\n      <td>-4.113690</td>\n      <td>0.772732</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.169132</td>\n      <td>0.751140</td>\n      <td>2.0</td>\n      <td>1.558480</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>7.0</td>\n      <td>16.0</td>\n      <td>1.207778</td>\n      <td>0.465282</td>\n      <td>0.990929</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3.319513</td>\n      <td>-2.656368</td>\n      <td>1.0</td>\n      <td>1.560402</td>\n      <td>1.0</td>\n      <td>10.0</td>\n      <td>11.0</td>\n      <td>3.0</td>\n      <td>2.869997</td>\n      <td>0.467570</td>\n      <td>0.021123</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.134420</td>\n      <td>-1.866416</td>\n      <td>2.0</td>\n      <td>-3.472232</td>\n      <td>19.0</td>\n      <td>20.0</td>\n      <td>6.0</td>\n      <td>14.0</td>\n      <td>0.835819</td>\n      <td>-3.115669</td>\n      <td>0.790815</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#c5594100 .cell execution_count=2}\n``` {.python .cell-code}\ndata.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1000 entries, 0 to 999\nData columns (total 11 columns):\n #   Column    Non-Null Count  Dtype  \n---  ------    --------------  -----  \n 0   Y         999 non-null    float64\n 1   Y2        1000 non-null   float64\n 2   X1        999 non-null    float64\n 3   X2        1000 non-null   float64\n 4   f1        999 non-null    float64\n 5   f2        1000 non-null   float64\n 6   f3        1000 non-null   float64\n 7   group_id  1000 non-null   float64\n 8   Z1        999 non-null    float64\n 9   Z2        1000 non-null   float64\n 10  weights   1000 non-null   float64\ndtypes: float64(11)\nmemory usage: 86.1 KB\n```\n:::\n:::\n\n\nWe see that some of our columns have missing data.\n\n## OLS Estimation\n\nWe are interested in the relation between the dependent variable `Y` and the independent variables `X1` using a fixed effect model for `group_id`. Let's see how the data looks like:\n\n::: {#740faa06 .cell execution_count=3}\n``` {.python .cell-code}\nax = data.plot(kind=\"scatter\", x=\"X1\", y=\"Y\", c=\"group_id\", colormap=\"viridis\")\n```\n\n::: {.cell-output .cell-output-display}\n![](quickstart_files/figure-html/cell-4-output-1.png){width=633 height=471}\n:::\n:::\n\n\nWe can estimate a fixed effects regression via the `feols()` function. `feols()` has three arguments: a two-sided model formula, the data, and optionally, the type of inference.\n\n::: {#3e6bb9b6 .cell execution_count=4}\n``` {.python .cell-code}\nfit = pf.feols(fml=\"Y ~ X1 | group_id\", data=data, vcov=\"HC1\")\ntype(fit)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\npyfixest.estimation.feols_.Feols\n```\n:::\n:::\n\n\nThe first part of the formula contains the dependent variable and \"regular\" covariates, while the second part contains fixed effects.\n\n`feols()` returns an instance of the `Fixest` class.\n\n## Inspecting Model Results\n\nTo inspect the results, we can use a summary function or method:\n\n::: {#d646598b .cell execution_count=5}\n``` {.python .cell-code}\nfit.summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n###\n\nEstimation:  OLS\nDep. var.: Y, Fixed effects: group_id\nInference:  HC1\nObservations:  998\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| X1            |     -1.019 |        0.083 |   -12.234 |      0.000 | -1.182 |  -0.856 |\n---\nRMSE: 2.141 R2: 0.137 R2 Within: 0.126 \n```\n:::\n:::\n\n\nOr display a formatted regression table:\n\n::: {#6c01d34c .cell execution_count=6}\n``` {.python .cell-code}\npf.etable(fit)\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div id=\"vomhvauvom\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#vomhvauvom table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#vomhvauvom thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#vomhvauvom p { margin: 0; padding: 0; }\n #vomhvauvom .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #vomhvauvom .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #vomhvauvom .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #vomhvauvom .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #vomhvauvom .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #vomhvauvom .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #vomhvauvom .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #vomhvauvom .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #vomhvauvom .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #vomhvauvom .gt_column_spanner_outer:first-child { padding-left: 0; }\n #vomhvauvom .gt_column_spanner_outer:last-child { padding-right: 0; }\n #vomhvauvom .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #vomhvauvom .gt_spanner_row { border-bottom-style: hidden; }\n #vomhvauvom .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #vomhvauvom .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #vomhvauvom .gt_from_md> :first-child { margin-top: 0; }\n #vomhvauvom .gt_from_md> :last-child { margin-bottom: 0; }\n #vomhvauvom .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #vomhvauvom .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #vomhvauvom .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #vomhvauvom .gt_row_group_first td { border-top-width: 0.5px; }\n #vomhvauvom .gt_row_group_first th { border-top-width: 0.5px; }\n #vomhvauvom .gt_striped { background-color: rgba(128,128,128,0.05); }\n #vomhvauvom .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #vomhvauvom .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #vomhvauvom .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #vomhvauvom .gt_left { text-align: left; }\n #vomhvauvom .gt_center { text-align: center; }\n #vomhvauvom .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #vomhvauvom .gt_font_normal { font-weight: normal; }\n #vomhvauvom .gt_font_bold { font-weight: bold; }\n #vomhvauvom .gt_font_italic { font-style: italic; }\n #vomhvauvom .gt_super { font-size: 65%; }\n #vomhvauvom .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #vomhvauvom .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Y\">\n    <span class=\"gt_column_spanner\">Y</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(1)\">(1)</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"2\">coef</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X1</th>\n    <td class=\"gt_row gt_center\">-1.019*** <br> (0.083)</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"2\">fe</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">group_id</th>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"2\">stats</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Observations</th>\n    <td class=\"gt_row gt_center\">998</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">S.E. type</th>\n    <td class=\"gt_row gt_center\">hetero</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">0.137</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup> Within</th>\n    <td class=\"gt_row gt_center\">0.126</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"2\">Significance levels: * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001. Format of coefficient cell:\nCoefficient \n (Std. Error)</td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nAlternatively, the `.summarize` module contains a `summary` function, which can be applied on instances of regression model objects or lists of regression model objects. For details on how to customize `etable()`, please take a look at the [dedicated vignette](https://py-econometrics.github.io/pyfixest/table-layout.html).\n\n::: {#725c4a3a .cell execution_count=7}\n``` {.python .cell-code}\npf.summary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n###\n\nEstimation:  OLS\nDep. var.: Y, Fixed effects: group_id\nInference:  HC1\nObservations:  998\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| X1            |     -1.019 |        0.083 |   -12.234 |      0.000 | -1.182 |  -0.856 |\n---\nRMSE: 2.141 R2: 0.137 R2 Within: 0.126 \n```\n:::\n:::\n\n\nYou can access individual elements of the summary via dedicated methods: `.tidy()` returns a \"tidy\" `pd.DataFrame`,\n`.coef()` returns estimated parameters, and `se()` estimated standard errors. Other methods include `pvalue()`, `confint()`\nand `tstat()`.\n\n::: {#517507ba .cell execution_count=8}\n``` {.python .cell-code}\nfit.tidy()\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>X1</th>\n      <td>-1.019009</td>\n      <td>0.083296</td>\n      <td>-12.233634</td>\n      <td>0.0</td>\n      <td>-1.182467</td>\n      <td>-0.85555</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#b3342262 .cell execution_count=9}\n``` {.python .cell-code}\nfit.coef()\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\nCoefficient\nX1   -1.019009\nName: Estimate, dtype: float64\n```\n:::\n:::\n\n\n::: {#812f2e8a .cell execution_count=10}\n``` {.python .cell-code}\nfit.se()\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\nCoefficient\nX1    0.083296\nName: Std. Error, dtype: float64\n```\n:::\n:::\n\n\n::: {#ff68f402 .cell execution_count=11}\n``` {.python .cell-code}\nfit.tstat()\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\nCoefficient\nX1   -12.233634\nName: t value, dtype: float64\n```\n:::\n:::\n\n\n::: {#fc922f3c .cell execution_count=12}\n``` {.python .cell-code}\nfit.confint()\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>X1</th>\n      <td>-1.182467</td>\n      <td>-0.85555</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nLast, model results can be visualized via dedicated methods for plotting:\n\n::: {#0a81fd1b .cell execution_count=13}\n``` {.python .cell-code}\nfit.coefplot()\n# or pf.coefplot([fit])\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n   <div id=\"9s7yJP\"></div>\n   <script type=\"text/javascript\" data-lets-plot-script=\"plot\">\n   \n   (function() {\n   // ----------\n   \n   var containerDiv = document.getElementById(\"9s7yJP\");\n   var observer = new ResizeObserver(function(entries) {\n       for (let entry of entries) {\n           var width = containerDiv.clientWidth\n           if (entry.contentBoxSize && width > 0) {\n           \n               // Render plot\n               if (observer) {\n                   observer.disconnect();\n                   observer = null;\n               }\n\n               var plotSpec={\n\"data\":{\n\"Coefficient\":[\"X1\"],\n\"Estimate\":[-1.019008561078234],\n\"2.5%\":[-1.182467331574561],\n\"97.5%\":[-0.8555497905819069],\n\"Model\":[\"Y~X1|group_id\"]\n},\n\"mapping\":{\n\"x\":\"Coefficient\",\n\"y\":\"Estimate\",\n\"color\":\"Model\"\n},\n\"data_meta\":{\n\"series_annotations\":[{\n\"type\":\"int\",\n\"column\":\"level_0\"\n},{\n\"type\":\"str\",\n\"column\":\"Coefficient\"\n},{\n\"type\":\"int\",\n\"column\":\"index\"\n},{\n\"type\":\"float\",\n\"column\":\"Estimate\"\n},{\n\"type\":\"float\",\n\"column\":\"Std. Error\"\n},{\n\"type\":\"float\",\n\"column\":\"t value\"\n},{\n\"type\":\"float\",\n\"column\":\"Pr(>|t|)\"\n},{\n\"type\":\"float\",\n\"column\":\"2.5%\"\n},{\n\"type\":\"float\",\n\"column\":\"97.5%\"\n},{\n\"type\":\"str\",\n\"column\":\"Model\"\n}]\n},\n\"guides\":{\n\"y\":{\n\"title\":\"Estimate and 95.0% Confidence Interval\"\n}\n},\n\"coord\":{\n\"name\":\"flip\",\n\"flip\":true\n},\n\"ggsize\":{\n\"width\":500.0,\n\"height\":300.0\n},\n\"theme\":{\n\"axis_text_x\":{\n\"angle\":0.0,\n\"blank\":false\n}\n},\n\"kind\":\"plot\",\n\"scales\":[],\n\"layers\":[{\n\"geom\":\"point\",\n\"mapping\":{\n},\n\"position\":{\n\"name\":\"dodge\",\n\"width\":0.5\n},\n\"data_meta\":{\n},\n\"data\":{\n}\n},{\n\"geom\":\"errorbar\",\n\"mapping\":{\n\"ymin\":\"2.5%\",\n\"ymax\":\"97.5%\"\n},\n\"position\":{\n\"name\":\"dodge\",\n\"width\":0.5\n},\n\"data_meta\":{\n},\n\"width\":0.05,\n\"data\":{\n}\n},{\n\"geom\":\"hline\",\n\"mapping\":{\n},\n\"data_meta\":{\n},\n\"yintercept\":0.0,\n\"linetype\":\"dashed\",\n\"color\":\"black\",\n\"data\":{\n}\n}],\n\"metainfo_list\":[],\n\"spec_id\":\"1\"\n};\n               window.letsPlotCall(function() {\n       \n               var toolbar = null;\n               var plotContainer = containerDiv;               \n               \n                   var options = {\n                       sizing: {\n                           width_mode: \"min\",\n                           height_mode: \"scaled\",\n                           width: width\n                       }\n                   };\n                   var fig = LetsPlot.buildPlotFromProcessedSpecs(plotSpec, -1, -1, plotContainer, options);\n                   if (toolbar) {\n                     toolbar.bind(fig);\n                   }\n               });\n               \n               break;\n           }\n       }\n   });\n   \n   observer.observe(containerDiv);\n   \n   // ----------\n   })();\n   \n   </script>\n```\n:::\n:::\n\n\n## How to interpret the results?\n\nLet's have a quick d-tour on the intuition behind fixed effects models using the example above. To do so, let us begin by comparing it with a simple OLS model.\n\n::: {#6a1e188d .cell execution_count=14}\n``` {.python .cell-code}\nfit_simple = pf.feols(\"Y ~ X1\", data=data, vcov=\"HC1\")\n\nfit_simple.summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n###\n\nEstimation:  OLS\nDep. var.: Y, Fixed effects: 0\nInference:  HC1\nObservations:  998\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| Intercept     |      0.919 |        0.112 |     8.223 |      0.000 |  0.699 |   1.138 |\n| X1            |     -1.000 |        0.082 |   -12.134 |      0.000 | -1.162 |  -0.838 |\n---\nRMSE: 2.158 R2: 0.123 \n```\n:::\n:::\n\n\nWe can compare both models side by side in a regression table:\n\n::: {#0337224e .cell execution_count=15}\n``` {.python .cell-code}\npf.etable([fit, fit_simple])\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div id=\"mvdpmdngvf\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#mvdpmdngvf table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#mvdpmdngvf thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#mvdpmdngvf p { margin: 0; padding: 0; }\n #mvdpmdngvf .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #mvdpmdngvf .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #mvdpmdngvf .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #mvdpmdngvf .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #mvdpmdngvf .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #mvdpmdngvf .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #mvdpmdngvf .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #mvdpmdngvf .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #mvdpmdngvf .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #mvdpmdngvf .gt_column_spanner_outer:first-child { padding-left: 0; }\n #mvdpmdngvf .gt_column_spanner_outer:last-child { padding-right: 0; }\n #mvdpmdngvf .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #mvdpmdngvf .gt_spanner_row { border-bottom-style: hidden; }\n #mvdpmdngvf .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #mvdpmdngvf .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #mvdpmdngvf .gt_from_md> :first-child { margin-top: 0; }\n #mvdpmdngvf .gt_from_md> :last-child { margin-bottom: 0; }\n #mvdpmdngvf .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #mvdpmdngvf .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #mvdpmdngvf .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #mvdpmdngvf .gt_row_group_first td { border-top-width: 0.5px; }\n #mvdpmdngvf .gt_row_group_first th { border-top-width: 0.5px; }\n #mvdpmdngvf .gt_striped { background-color: rgba(128,128,128,0.05); }\n #mvdpmdngvf .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #mvdpmdngvf .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #mvdpmdngvf .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #mvdpmdngvf .gt_left { text-align: left; }\n #mvdpmdngvf .gt_center { text-align: center; }\n #mvdpmdngvf .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #mvdpmdngvf .gt_font_normal { font-weight: normal; }\n #mvdpmdngvf .gt_font_bold { font-weight: bold; }\n #mvdpmdngvf .gt_font_italic { font-style: italic; }\n #mvdpmdngvf .gt_super { font-size: 65%; }\n #mvdpmdngvf .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #mvdpmdngvf .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"Y\">\n    <span class=\"gt_column_spanner\">Y</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(1)\">(1)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(2)\">(2)</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">coef</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X1</th>\n    <td class=\"gt_row gt_center\">-1.019*** <br> (0.083)</td>\n    <td class=\"gt_row gt_center\">-1.000*** <br> (0.082)</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Intercept</th>\n    <td class=\"gt_row gt_center\"></td>\n    <td class=\"gt_row gt_center\">0.919*** <br> (0.112)</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">fe</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">group_id</th>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">-</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">stats</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Observations</th>\n    <td class=\"gt_row gt_center\">998</td>\n    <td class=\"gt_row gt_center\">998</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">S.E. type</th>\n    <td class=\"gt_row gt_center\">hetero</td>\n    <td class=\"gt_row gt_center\">hetero</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">0.137</td>\n    <td class=\"gt_row gt_center\">0.123</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup> Within</th>\n    <td class=\"gt_row gt_center\">0.126</td>\n    <td class=\"gt_row gt_center\">-</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"3\">Significance levels: * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001. Format of coefficient cell:\nCoefficient \n (Std. Error)</td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nWe see that the `X1` coefficient is `-1.019`, which is less than the value from the OLS model in column (2). Where is the difference coming from?\nWell, in the fixed effect model we are interested in controlling for the feature `group_id`. One possibility to do this is by adding a simple dummy variable for each level of `group_id`.\n\n::: {#07ce995f .cell execution_count=16}\n``` {.python .cell-code}\nfit_dummy = pf.feols(\"Y ~ X1 + C(group_id) \", data=data, vcov=\"HC1\")\n\nfit_dummy.summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n###\n\nEstimation:  OLS\nDep. var.: Y, Fixed effects: 0\nInference:  HC1\nObservations:  998\n\n| Coefficient         |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| Intercept           |      0.760 |        0.288 |     2.640 |      0.008 |  0.195 |   1.326 |\n| X1                  |     -1.019 |        0.083 |   -12.234 |      0.000 | -1.182 |  -0.856 |\n| C(group_id)[T.1.0]  |      0.380 |        0.451 |     0.844 |      0.399 | -0.504 |   1.264 |\n| C(group_id)[T.2.0]  |      0.084 |        0.389 |     0.216 |      0.829 | -0.680 |   0.848 |\n| C(group_id)[T.3.0]  |      0.790 |        0.415 |     1.904 |      0.057 | -0.024 |   1.604 |\n| C(group_id)[T.4.0]  |     -0.189 |        0.388 |    -0.487 |      0.626 | -0.950 |   0.572 |\n| C(group_id)[T.5.0]  |      0.537 |        0.388 |     1.385 |      0.166 | -0.224 |   1.297 |\n| C(group_id)[T.6.0]  |      0.307 |        0.398 |     0.771 |      0.441 | -0.474 |   1.087 |\n| C(group_id)[T.7.0]  |      0.015 |        0.422 |     0.035 |      0.972 | -0.814 |   0.844 |\n| C(group_id)[T.8.0]  |      0.382 |        0.406 |     0.941 |      0.347 | -0.415 |   1.179 |\n| C(group_id)[T.9.0]  |      0.219 |        0.417 |     0.526 |      0.599 | -0.599 |   1.037 |\n| C(group_id)[T.10.0] |     -0.363 |        0.422 |    -0.861 |      0.390 | -1.191 |   0.465 |\n| C(group_id)[T.11.0] |      0.201 |        0.387 |     0.520 |      0.603 | -0.559 |   0.961 |\n| C(group_id)[T.12.0] |     -0.110 |        0.410 |    -0.268 |      0.788 | -0.915 |   0.694 |\n| C(group_id)[T.13.0] |      0.126 |        0.440 |     0.287 |      0.774 | -0.736 |   0.989 |\n| C(group_id)[T.14.0] |      0.353 |        0.416 |     0.848 |      0.397 | -0.464 |   1.170 |\n| C(group_id)[T.15.0] |      0.469 |        0.398 |     1.179 |      0.239 | -0.312 |   1.249 |\n| C(group_id)[T.16.0] |     -0.135 |        0.396 |    -0.340 |      0.734 | -0.913 |   0.643 |\n| C(group_id)[T.17.0] |     -0.005 |        0.401 |    -0.013 |      0.989 | -0.792 |   0.781 |\n| C(group_id)[T.18.0] |      0.283 |        0.403 |     0.702 |      0.483 | -0.508 |   1.074 |\n---\nRMSE: 2.141 R2: 0.137 \n```\n:::\n:::\n\n\nThis is does not scale well! Imagine you have 1000 different levels of `group_id`. You would need to add 1000 dummy variables to your model. This is where fixed effect models come in handy. They allow you to control for these fixed effects without adding all these dummy variables. The way to do it is by a *demeaning procedure*. The idea is to subtract the average value of each level of `group_id` from the respective observations. This way, we control for the fixed effects without adding all these dummy variables. Let's try to do this manually:\n\n::: {#b75aab63 .cell execution_count=17}\n``` {.python .cell-code}\ndef _demean_column(df: pd.DataFrame, column: str, by: str) -> pd.Series:\n    return df[column] - df.groupby(by)[column].transform(\"mean\")\n\n\nfit_demeaned = pf.feols(\n    fml=\"Y_demeaned ~ X1_demeaned\",\n    data=data.assign(\n        Y_demeaned=lambda df: _demean_column(df, \"Y\", \"group_id\"),\n        X1_demeaned=lambda df: _demean_column(df, \"X1\", \"group_id\"),\n    ),\n    vcov=\"HC1\",\n)\n\nfit_demeaned.summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n###\n\nEstimation:  OLS\nDep. var.: Y_demeaned, Fixed effects: 0\nInference:  HC1\nObservations:  998\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| Intercept     |      0.003 |        0.068 |     0.041 |      0.968 | -0.130 |   0.136 |\n| X1_demeaned   |     -1.019 |        0.083 |   -12.345 |      0.000 | -1.181 |  -0.857 |\n---\nRMSE: 2.141 R2: 0.126 \n```\n:::\n:::\n\n\nWe get the same results as the fixed effect model `Y1 ~ X | group_id` above. The `PyFixest` package uses a more efficient algorithm to estimate the fixed effect model, but the intuition is the same.\n\n## Updating Regression Coefficients\n\nYou can update the coefficients of a model object via the `update()` method, which may be useful in an online learning setting where data arrives sequentially.\n\nTo see this in action, let us first fit a model on a subset of the data:\n\n::: {#a99b73ea .cell execution_count=18}\n``` {.python .cell-code}\ndata_subsample = data.sample(frac=0.5)\nm = pf.feols(\"Y ~ X1 + X2\", data=data_subsample)\n# current coefficient vector\nm._beta_hat\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\narray([ 1.04262704, -1.0212441 , -0.17550173])\n```\n:::\n:::\n\n\nThen sample 5 new observations and update the model with the new data. The update rule is\n\n$$\n\\hat{\\beta}_{n+1} = \\hat{\\beta}_n + (X_{n+1}' X_{n+1})^{-1} x_{n+1} + (y_{n+1} - x_{n+1} \\hat{\\beta}_n)\n$$\n\nfor a new observation $(x_{n+1}, y_{n+1})$.\n\n::: {#fc764945 .cell execution_count=19}\n``` {.python .cell-code}\nnew_points_id = np.random.choice(list(set(data.index) - set(data_subsample.index)), 5)\nX_new, y_new = (\n    np.c_[np.ones(len(new_points_id)), data.loc[new_points_id][[\"X1\", \"X2\"]].values],\n    data.loc[new_points_id][\"Y\"].values,\n)\nm.update(X_new, y_new)\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```\narray([ 1.04979209, -1.02388483, -0.17805076])\n```\n:::\n:::\n\n\nWe verify that we get the same results if we had estimated the model on the appended data.\n\n::: {#24e02282 .cell execution_count=20}\n``` {.python .cell-code}\npf.feols(\n    \"Y ~ X1 + X2\", data=data.loc[data_subsample.index.append(pd.Index(new_points_id))]\n).coef().values\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```\narray([ 1.04979209, -1.02388483, -0.17805076])\n```\n:::\n:::\n\n\n# Standard Errors and Inference\n\nSupported covariance types are \"iid\", \"HC1-3\", CRV1 and CRV3 (up to two-way clustering).\n\n**Why do we have so many different types of standard errors?**\n\nThe standard errors of the coefficients are crucial for inference. They tell us how certain we can be about the estimated coefficients. In the presence of heteroskedasticity (a situation which typically arises with cross-sectional data), the standard OLS standard errors are biased. The `pyfixest` package provides several types of standard errors that are robust to heteroskedasticity.\n\n- `iid`: assumes that the error variance is spherical, i.e. errors are homoskedastic and not correlated (independent and identically distributed errors have a spherical error variance).\n- `HC1-3`: heteroskedasticity-robust standard errors according to White (1980) and MacKinnon and White (1985). See [Econometric Computing with HC and HAC\nCovariance Matrix Estimators](https://cran.r-project.org/web/packages/sandwich/vignettes/sandwich.pdf) from the [`sandwich`](https://cran.r-project.org/web/packages/sandwich/) package for more details.\n- `CRV1` and `CRV3`: cluster robust standard errors according to Cameron, Gelbach, and Miller (2011). See [A Practitioner's Guide to Cluster-Robust Inference](https://cameron.econ.ucdavis.edu/research/Cameron_Miller_JHR_2015_February.pdf).  For   `CRV1` and `CRV3` one should pass a dictionaty of the form `{\"CRV1\": \"clustervar\"}`.\n\nInference can be adjusted \"on-the-fly\" via the `.vcov()` method:\n\n::: {#a54a111e .cell execution_count=21}\n``` {.python .cell-code}\nfit.vcov({\"CRV1\": \"group_id + f2\"}).summary()\n\nfit.vcov({\"CRV3\": \"group_id\"}).summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n###\n\nEstimation:  OLS\nDep. var.: Y, Fixed effects: group_id\nInference:  CRV1\nObservations:  998\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| X1            |     -1.019 |        0.121 |    -8.445 |      0.000 | -1.272 |  -0.766 |\n---\nRMSE: 2.141 R2: 0.137 R2 Within: 0.126 \n###\n\nEstimation:  OLS\nDep. var.: Y, Fixed effects: group_id\nInference:  CRV3\nObservations:  998\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| X1            |     -1.019 |        0.125 |    -8.174 |      0.000 | -1.281 |  -0.757 |\n---\nRMSE: 2.141 R2: 0.137 R2 Within: 0.126 \n```\n:::\n:::\n\n\nThe estimated covariance matrix is available as an attribute of the `Feols` object called `._vcov`.\n\n## Inference via the Wild Bootstrap\n\nIt is also possible to run a wild (cluster) bootstrap after estimation (via the [wildboottest module](https://github.com/py-econometrics/wildboottest), see [MacKinnon, J. G., Nielsen, M. Ø., & Webb, M. D. (2023). Fast and reliable jackknife and bootstrap methods for cluster-robust inference. Journal of Applied Econometrics, 38(5), 671–694.](http://qed.econ.queensu.ca/pub/faculty/mackinnon/working-papers/qed_wp_1485.pdf)):\n\n::: {#5d8788ac .cell execution_count=22}\n``` {.python .cell-code}\nfit2 = pf.feols(fml=\"Y ~ X1\", data=data, vcov={\"CRV1\": \"group_id\"})\nfit2.wildboottest(param=\"X1\", reps=999)\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```\nparam                             X1\nt value           -8.567586579080423\nPr(>|t|)                         0.0\nbootstrap_type                    11\ninference              CRV(group_id)\nimpose_null                     True\nssc                         1.056615\ndtype: object\n```\n:::\n:::\n\n\n## The Causal Cluster Variance Estimator\n\nAdditionally, `PyFixest` supports the causal cluster variance estimator following [Abadie et al. (2023)](https://academic.oup.com/qje/article/138/1/1/6750017). Let's look into it with another data set:\n\n::: {#f099c9d6 .cell execution_count=23}\n``` {.python .cell-code}\ndf = pd.read_stata(\"http://www.damianclarke.net/stata/census2000_5pc.dta\")\n\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=23}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ln_earnings</th>\n      <th>educ</th>\n      <th>hours</th>\n      <th>state</th>\n      <th>college</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>11.91839</td>\n      <td>18.0</td>\n      <td>50.0</td>\n      <td>44.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>11.48247</td>\n      <td>11.0</td>\n      <td>42.0</td>\n      <td>44.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>10.46310</td>\n      <td>12.0</td>\n      <td>42.0</td>\n      <td>44.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>10.22194</td>\n      <td>13.0</td>\n      <td>40.0</td>\n      <td>44.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>9.21034</td>\n      <td>13.0</td>\n      <td>8.0</td>\n      <td>44.0</td>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#a4a5f945 .cell execution_count=24}\n``` {.python .cell-code}\naxes = df.plot.hist(column=[\"ln_earnings\"], by=[\"college\"])\n```\n\n::: {.cell-output .cell-output-display}\n![](quickstart_files/figure-html/cell-25-output-1.png){width=687 height=467}\n:::\n:::\n\n\nNow we can estimate the model `ln_earnings ~ college` where we cluster the standard errors at the state level:\n\n::: {#cfec1de7 .cell execution_count=25}\n``` {.python .cell-code}\nfit3 = pf.feols(\"ln_earnings ~ college\", vcov={\"CRV1\": \"state\"}, data=df)\nfit3.ccv(treatment=\"college\", pk=0.05, n_splits=2, seed=929)\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>CCV</th>\n      <td>0.4656425903701483</td>\n      <td>0.00348</td>\n      <td>133.820079</td>\n      <td>0.0</td>\n      <td>0.458657</td>\n      <td>0.472628</td>\n    </tr>\n    <tr>\n      <th>CRV1</th>\n      <td>0.465643</td>\n      <td>0.027142</td>\n      <td>17.155606</td>\n      <td>0.0</td>\n      <td>0.411152</td>\n      <td>0.520133</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Randomization Inference\n\nYou can also conduct inference via randomization inference [(see Heß, Stata Journal 2017)](https://hesss.org/ritest.pdf).\n`PyFixest` supports random and cluster random sampling.\n\n::: {#729a084f .cell execution_count=26}\n``` {.python .cell-code}\nfit2.ritest(resampvar=\"X1=0\", reps=1000, cluster=\"group_id\")\n```\n\n::: {.cell-output .cell-output-display execution_count=26}\n```\nH0                                     X1=0\nri-type                     randomization-c\nEstimate                 -1.000085840074156\nPr(>|t|)                                0.0\nStd. Error (Pr(>|t|))                   0.0\n2.5% (Pr(>|t|))                         0.0\n97.5% (Pr(>|t|))                        0.0\nCluster                            group_id\ndtype: object\n```\n:::\n:::\n\n\n## Multiple Testing Corrections: Bonferroni and Romano-Wolf\n\nTo correct for multiple testing, p-values can be adjusted via either the [Bonferroni](https://en.wikipedia.org/wiki/Bonferroni_correction), the method by Romano and Wolf (2005), see for example [The Romano-Wolf Multiple Hypothesis\nCorrection in Stata](https://docs.iza.org/dp12845.pdf), and the method by Westfall & Young (see [here](https://www.jstor.org/stable/2532216)).\n\n::: {#734cd5c4 .cell execution_count=27}\n``` {.python .cell-code}\npf.bonferroni([fit, fit2], param=\"X1\").round(3)\n```\n\n::: {.cell-output .cell-output-display execution_count=27}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>est0</th>\n      <th>est1</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Estimate</th>\n      <td>-1.019</td>\n      <td>-1.000</td>\n    </tr>\n    <tr>\n      <th>Std. Error</th>\n      <td>0.125</td>\n      <td>0.117</td>\n    </tr>\n    <tr>\n      <th>t value</th>\n      <td>-8.174</td>\n      <td>-8.568</td>\n    </tr>\n    <tr>\n      <th>Pr(&gt;|t|)</th>\n      <td>0.000</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>2.5%</th>\n      <td>-1.281</td>\n      <td>-1.245</td>\n    </tr>\n    <tr>\n      <th>97.5%</th>\n      <td>-0.757</td>\n      <td>-0.755</td>\n    </tr>\n    <tr>\n      <th>Bonferroni Pr(&gt;|t|)</th>\n      <td>0.000</td>\n      <td>0.000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#98977f0e .cell execution_count=28}\n``` {.python .cell-code}\npf.rwolf([fit, fit2], param=\"X1\", reps=9999, seed=1234).round(3)\n```\n\n::: {.cell-output .cell-output-display execution_count=28}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>est0</th>\n      <th>est1</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Estimate</th>\n      <td>-1.019</td>\n      <td>-1.000</td>\n    </tr>\n    <tr>\n      <th>Std. Error</th>\n      <td>0.125</td>\n      <td>0.117</td>\n    </tr>\n    <tr>\n      <th>t value</th>\n      <td>-8.174</td>\n      <td>-8.568</td>\n    </tr>\n    <tr>\n      <th>Pr(&gt;|t|)</th>\n      <td>0.000</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>2.5%</th>\n      <td>-1.281</td>\n      <td>-1.245</td>\n    </tr>\n    <tr>\n      <th>97.5%</th>\n      <td>-0.757</td>\n      <td>-0.755</td>\n    </tr>\n    <tr>\n      <th>RW Pr(&gt;|t|)</th>\n      <td>0.000</td>\n      <td>0.000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#93b93f2d .cell execution_count=29}\n``` {.python .cell-code}\npf.wyoung([fit, fit2], param=\"X1\", reps=9999, seed=1234).round(3)\n```\n\n::: {.cell-output .cell-output-display execution_count=29}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>est0</th>\n      <th>est1</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Estimate</th>\n      <td>-1.019</td>\n      <td>-1.000</td>\n    </tr>\n    <tr>\n      <th>Std. Error</th>\n      <td>0.125</td>\n      <td>0.117</td>\n    </tr>\n    <tr>\n      <th>t value</th>\n      <td>-8.174</td>\n      <td>-8.568</td>\n    </tr>\n    <tr>\n      <th>Pr(&gt;|t|)</th>\n      <td>0.000</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>2.5%</th>\n      <td>-1.281</td>\n      <td>-1.245</td>\n    </tr>\n    <tr>\n      <th>97.5%</th>\n      <td>-0.757</td>\n      <td>-0.755</td>\n    </tr>\n    <tr>\n      <th>WY Pr(&gt;|t|)</th>\n      <td>0.000</td>\n      <td>0.000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Joint Confidence Intervals\n\nSimultaneous confidence bands for a vector of parameters can be computed via the `joint_confint()` method. See [Simultaneous confidence bands: Theory, implementation, and an application to SVARs](https://onlinelibrary.wiley.com/doi/abs/10.1002/jae.2656) for background.\n\n::: {#2cadfdf3 .cell execution_count=30}\n``` {.python .cell-code}\nfit_ci = pf.feols(\"Y ~ X1+ C(f1)\", data=data)\nfit_ci.confint(joint=True).head()\n```\n\n::: {.cell-output .cell-output-display execution_count=30}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Intercept</th>\n      <td>-0.429119</td>\n      <td>1.407030</td>\n    </tr>\n    <tr>\n      <th>X1</th>\n      <td>-1.161465</td>\n      <td>-0.737417</td>\n    </tr>\n    <tr>\n      <th>C(f1)[T.1.0]</th>\n      <td>1.380065</td>\n      <td>3.785234</td>\n    </tr>\n    <tr>\n      <th>C(f1)[T.2.0]</th>\n      <td>-2.843238</td>\n      <td>-0.320630</td>\n    </tr>\n    <tr>\n      <th>C(f1)[T.3.0]</th>\n      <td>-1.612841</td>\n      <td>0.988173</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n# Panel Data Example: Causal Inference for the Brave and True\n\nIn this example we replicate the results of the great (freely available reference!) [Causal Inference for the Brave and True - Chapter 14](https://matheusfacure.github.io/python-causality-handbook/14-Panel-Data-and-Fixed-Effects.html). Please refer to the original text for a detailed explanation of the data.\n\n::: {#e37a4d52 .cell execution_count=31}\n``` {.python .cell-code}\ndata_path = \"https://raw.githubusercontent.com/bashtage/linearmodels/main/linearmodels/datasets/wage_panel/wage_panel.csv.bz2\"\ndata_df = pd.read_csv(data_path)\n\ndata_df.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=31}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>nr</th>\n      <th>year</th>\n      <th>black</th>\n      <th>exper</th>\n      <th>hisp</th>\n      <th>hours</th>\n      <th>married</th>\n      <th>educ</th>\n      <th>union</th>\n      <th>lwage</th>\n      <th>expersq</th>\n      <th>occupation</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>13</td>\n      <td>1980</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2672</td>\n      <td>0</td>\n      <td>14</td>\n      <td>0</td>\n      <td>1.197540</td>\n      <td>1</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>13</td>\n      <td>1981</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>2320</td>\n      <td>0</td>\n      <td>14</td>\n      <td>1</td>\n      <td>1.853060</td>\n      <td>4</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>13</td>\n      <td>1982</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>2940</td>\n      <td>0</td>\n      <td>14</td>\n      <td>0</td>\n      <td>1.344462</td>\n      <td>9</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13</td>\n      <td>1983</td>\n      <td>0</td>\n      <td>4</td>\n      <td>0</td>\n      <td>2960</td>\n      <td>0</td>\n      <td>14</td>\n      <td>0</td>\n      <td>1.433213</td>\n      <td>16</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>13</td>\n      <td>1984</td>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>3071</td>\n      <td>0</td>\n      <td>14</td>\n      <td>0</td>\n      <td>1.568125</td>\n      <td>25</td>\n      <td>5</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nThe objective is to estimate the effect of the variable `married` on the variable `lwage` using a fixed effect model on the entity variable `nr` and the time variable `year`.\n\n::: {#dce82715 .cell execution_count=32}\n``` {.python .cell-code}\npanel_fit = pf.feols(\n    fml=\"lwage ~ expersq + union + married + hours | nr + year\",\n    data=data_df,\n    vcov={\"CRV1\": \"nr + year\"},\n)\n\npf.etable(panel_fit)\n```\n\n::: {.cell-output .cell-output-display execution_count=32}\n```{=html}\n<div id=\"bibpprkptd\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#bibpprkptd table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#bibpprkptd thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#bibpprkptd p { margin: 0; padding: 0; }\n #bibpprkptd .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #bibpprkptd .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #bibpprkptd .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #bibpprkptd .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #bibpprkptd .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #bibpprkptd .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #bibpprkptd .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #bibpprkptd .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #bibpprkptd .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #bibpprkptd .gt_column_spanner_outer:first-child { padding-left: 0; }\n #bibpprkptd .gt_column_spanner_outer:last-child { padding-right: 0; }\n #bibpprkptd .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #bibpprkptd .gt_spanner_row { border-bottom-style: hidden; }\n #bibpprkptd .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #bibpprkptd .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #bibpprkptd .gt_from_md> :first-child { margin-top: 0; }\n #bibpprkptd .gt_from_md> :last-child { margin-bottom: 0; }\n #bibpprkptd .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #bibpprkptd .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #bibpprkptd .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #bibpprkptd .gt_row_group_first td { border-top-width: 0.5px; }\n #bibpprkptd .gt_row_group_first th { border-top-width: 0.5px; }\n #bibpprkptd .gt_striped { background-color: rgba(128,128,128,0.05); }\n #bibpprkptd .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #bibpprkptd .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #bibpprkptd .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #bibpprkptd .gt_left { text-align: left; }\n #bibpprkptd .gt_center { text-align: center; }\n #bibpprkptd .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #bibpprkptd .gt_font_normal { font-weight: normal; }\n #bibpprkptd .gt_font_bold { font-weight: bold; }\n #bibpprkptd .gt_font_italic { font-style: italic; }\n #bibpprkptd .gt_super { font-size: 65%; }\n #bibpprkptd .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #bibpprkptd .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"lwage\">\n    <span class=\"gt_column_spanner\">lwage</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(1)\">(1)</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"2\">coef</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">expersq</th>\n    <td class=\"gt_row gt_center\">-0.006*** <br> (0.001)</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">union</th>\n    <td class=\"gt_row gt_center\">0.073* <br> (0.023)</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">married</th>\n    <td class=\"gt_row gt_center\">0.048* <br> (0.018)</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">hours</th>\n    <td class=\"gt_row gt_center\">-0.000** <br> (0.000)</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"2\">fe</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">year</th>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">nr</th>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"2\">stats</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Observations</th>\n    <td class=\"gt_row gt_center\">4360</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">S.E. type</th>\n    <td class=\"gt_row gt_center\">by: nr+year</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">0.631</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup> Within</th>\n    <td class=\"gt_row gt_center\">0.047</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"2\">Significance levels: * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001. Format of coefficient cell:\nCoefficient \n (Std. Error)</td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nWe obtain the same results as in the book!\n\n# Instrumental Variables (IV) Estimation\n\nIt is also possible to estimate [instrumental variable models](https://en.wikipedia.org/wiki/Instrumental_variables_estimation) with *one* endogenous variable and (potentially multiple) instruments.\n\nIn general, the syntax for IV is `depvar ~ exog.vars | fixef effects | endog.vars ~ instruments`.\n\n::: {#81353f89 .cell execution_count=33}\n``` {.python .cell-code}\niv_fit = pf.feols(fml=\"Y2 ~ 1 | f1 + f2 | X1 ~ Z1 + Z2\", data=data)\niv_fit.summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n###\n\nEstimation:  IV\nDep. var.: Y2, Fixed effects: f1+f2\nInference:  CRV1\nObservations:  998\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| X1            |     -1.600 |        0.338 |    -4.728 |      0.000 | -2.293 |  -0.908 |\n---\n\n```\n:::\n:::\n\n\nIf the model does not contain any fixed effects, just drop the second part of the formula above:\n\n::: {#e487bf9e .cell execution_count=34}\n``` {.python .cell-code}\npf.feols(fml=\"Y ~ 1 | X1 ~ Z1 + Z2\", data=data).summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n###\n\nEstimation:  IV\nDep. var.: Y, Fixed effects: 0\nInference:  iid\nObservations:  998\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| Intercept     |      0.911 |        0.156 |     5.843 |      0.000 |  0.605 |   1.217 |\n| X1            |     -0.993 |        0.134 |    -7.398 |      0.000 | -1.256 |  -0.730 |\n---\n\n```\n:::\n:::\n\n\nYou can access the first stage regression object via the `._model_1st_stage` attribute:\n\n::: {#84ce397d .cell execution_count=35}\n``` {.python .cell-code}\npf.etable([iv_fit._model_1st_stage, iv_fit])\n```\n\n::: {.cell-output .cell-output-display execution_count=35}\n```{=html}\n<div id=\"jdjgbxpogj\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#jdjgbxpogj table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#jdjgbxpogj thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#jdjgbxpogj p { margin: 0; padding: 0; }\n #jdjgbxpogj .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #jdjgbxpogj .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #jdjgbxpogj .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #jdjgbxpogj .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #jdjgbxpogj .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #jdjgbxpogj .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #jdjgbxpogj .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #jdjgbxpogj .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #jdjgbxpogj .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #jdjgbxpogj .gt_column_spanner_outer:first-child { padding-left: 0; }\n #jdjgbxpogj .gt_column_spanner_outer:last-child { padding-right: 0; }\n #jdjgbxpogj .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #jdjgbxpogj .gt_spanner_row { border-bottom-style: hidden; }\n #jdjgbxpogj .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #jdjgbxpogj .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #jdjgbxpogj .gt_from_md> :first-child { margin-top: 0; }\n #jdjgbxpogj .gt_from_md> :last-child { margin-bottom: 0; }\n #jdjgbxpogj .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #jdjgbxpogj .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #jdjgbxpogj .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #jdjgbxpogj .gt_row_group_first td { border-top-width: 0.5px; }\n #jdjgbxpogj .gt_row_group_first th { border-top-width: 0.5px; }\n #jdjgbxpogj .gt_striped { background-color: rgba(128,128,128,0.05); }\n #jdjgbxpogj .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #jdjgbxpogj .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #jdjgbxpogj .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #jdjgbxpogj .gt_left { text-align: left; }\n #jdjgbxpogj .gt_center { text-align: center; }\n #jdjgbxpogj .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #jdjgbxpogj .gt_font_normal { font-weight: normal; }\n #jdjgbxpogj .gt_font_bold { font-weight: bold; }\n #jdjgbxpogj .gt_font_italic { font-style: italic; }\n #jdjgbxpogj .gt_super { font-size: 65%; }\n #jdjgbxpogj .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #jdjgbxpogj .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"X1\">\n    <span class=\"gt_column_spanner\">X1</span>\n  </th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Y2\">\n    <span class=\"gt_column_spanner\">Y2</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(1)\">(1)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(2)\">(2)</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">coef</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Z1</th>\n    <td class=\"gt_row gt_center\">0.395*** <br> (0.012)</td>\n    <td class=\"gt_row gt_center\"></td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Z2</th>\n    <td class=\"gt_row gt_center\">-0.005 <br> (0.006)</td>\n    <td class=\"gt_row gt_center\"></td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X1</th>\n    <td class=\"gt_row gt_center\"></td>\n    <td class=\"gt_row gt_center\">-1.600*** <br> (0.338)</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">fe</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f1</th>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f2</th>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">stats</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Observations</th>\n    <td class=\"gt_row gt_center\">998</td>\n    <td class=\"gt_row gt_center\">998</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">S.E. type</th>\n    <td class=\"gt_row gt_center\">by: f1</td>\n    <td class=\"gt_row gt_center\">by: f1</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">0.431</td>\n    <td class=\"gt_row gt_center\">-</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup> Within</th>\n    <td class=\"gt_row gt_center\">0.399</td>\n    <td class=\"gt_row gt_center\">-</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"3\">Significance levels: * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001. Format of coefficient cell:\nCoefficient \n (Std. Error)</td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nYou can access the F-Statistic of the first stage via the `_f_stat_1st_stage` attribute:\n\n::: {#aaba0f26 .cell execution_count=36}\n``` {.python .cell-code}\niv_fit._f_stat_1st_stage\n```\n\n::: {.cell-output .cell-output-display execution_count=36}\n```\nnp.float64(557.455797636532)\n```\n:::\n:::\n\n\nVia the `IV_Diag` method, you can compute additional IV Diagnostics, as the **effective F-statistic** following Olea & Pflueger (2013):\n\n::: {#b574646a .cell execution_count=37}\n``` {.python .cell-code}\niv_fit.IV_Diag()\niv_fit._eff_F\n```\n\n::: {.cell-output .cell-output-display execution_count=37}\n```\nnp.float64(400.1335339868804)\n```\n:::\n:::\n\n\nIV estimation with multiple endogenous variables and multiple estimation syntax is currently not supported.\n\n# Poisson Regression\n\nIt is possible to estimate Poisson Regressions (for example, to model count data). We can showcase this feature with another synthetic data set.\n\n::: {#ffc0a4ba .cell execution_count=38}\n``` {.python .cell-code}\npois_data = pf.get_data(model=\"Fepois\")\n\nax = pois_data.plot(\n    kind=\"scatter\",\n    x=\"X1\",\n    y=\"Y\",\n    c=\"group_id\",\n    colormap=\"viridis\",\n    s=\"f2\",\n)\n```\n\n::: {.cell-output .cell-output-display}\n![](quickstart_files/figure-html/cell-39-output-1.png){width=625 height=471}\n:::\n:::\n\n\n::: {#3ac5d2be .cell execution_count=39}\n``` {.python .cell-code}\npois_fit = pf.fepois(fml=\"Y ~ X1 | group_id\", data=pois_data, vcov={\"CRV1\": \"group_id\"})\npois_fit.summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n###\n\nEstimation:  Poisson\nDep. var.: Y, Fixed effects: group_id\nInference:  CRV1\nObservations:  998\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| X1            |      0.004 |        0.032 |     0.119 |      0.905 | -0.060 |   0.067 |\n---\nDeviance: 1126.202 \n```\n:::\n:::\n\n\n# Tests of Multiple Hypothesis / Wald Tests\n\nYou can test multiple hypotheses simultaneously via the `wald_test` method.\n\n::: {#b57a0188 .cell execution_count=40}\n``` {.python .cell-code}\nfit = pf.feols(\"Y ~ X1 + X2 | f1\", data=data)\n```\n:::\n\n\nFor example, to test the joint null hypothesis of $X_{1} = 0$ and $X_{2} = 0$ vs the alternative that $X_{1} \\neq 0$ or $X_{2} \\neq 0$, we would run\n\n::: {#488c6895 .cell execution_count=41}\n``` {.python .cell-code}\nfit.wald_test(R=np.eye(2))\n```\n\n::: {.cell-output .cell-output-display execution_count=41}\n```\nstatistic    1.463308e+02\npvalue       6.661338e-16\ndtype: float64\n```\n:::\n:::\n\n\nAlternatively, suppose we wanted to test a more complicated joint null hypothesis:  $X_{1} + 2X_{2} = 2.0$ and $X_{2} = 1.0$. To do so, we would define $R$ and $q$ as\n\n::: {#7108a8eb .cell execution_count=42}\n``` {.python .cell-code}\nR1 = np.array([[1, 2], [0, 1]])\nq1 = np.array([2.0, 1.0])\nfit.wald_test(R=R1, q=q1)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\alexa\\Documents\\pyfixest\\pyfixest\\estimation\\feols_.py:1107: UserWarning: Distribution changed to chi2, as R is not an identity matrix and q is not a zero vector.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=42}\n```\nstatistic    4269.167164\npvalue          0.000000\ndtype: float64\n```\n:::\n:::\n\n\n# Other GLMs (without fixed effects)\n\n`PyFixest` experimentally supports a range of other GLMs without fixed effects (adding fixed effect support is WIP) via the `pf.feglm()` function. Full support with all bells and whistles (in particular, fixed effects demeaning) is planned for PyFixest 0.29.\n\n::: {#52e33a7e .cell execution_count=43}\n``` {.python .cell-code}\ndata_glm = pf.get_data(N=100, seed = 170)\ndata_glm[\"Y\"] = np.where(data_glm[\"Y\"] > 0, 1, 0)\n\nfit_gaussian = pf.feglm(fml = \"Y~X1\", data = data_glm, family = \"gaussian\")\nfit_logit = pf.feglm(fml = \"Y~X1\", data = data_glm, family = \"logit\")\nfit_probit = pf.feglm(fml = \"Y~X1\", data = data_glm, family = \"probit\")\n\npf.etable([\n    fit_gaussian,\n    fit_logit,\n    fit_probit,\n])\n```\n\n::: {.cell-output .cell-output-display execution_count=43}\n```{=html}\n<div id=\"etkbxvfqdx\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#etkbxvfqdx table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#etkbxvfqdx thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#etkbxvfqdx p { margin: 0; padding: 0; }\n #etkbxvfqdx .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #etkbxvfqdx .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #etkbxvfqdx .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #etkbxvfqdx .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #etkbxvfqdx .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #etkbxvfqdx .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #etkbxvfqdx .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #etkbxvfqdx .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #etkbxvfqdx .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #etkbxvfqdx .gt_column_spanner_outer:first-child { padding-left: 0; }\n #etkbxvfqdx .gt_column_spanner_outer:last-child { padding-right: 0; }\n #etkbxvfqdx .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #etkbxvfqdx .gt_spanner_row { border-bottom-style: hidden; }\n #etkbxvfqdx .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #etkbxvfqdx .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #etkbxvfqdx .gt_from_md> :first-child { margin-top: 0; }\n #etkbxvfqdx .gt_from_md> :last-child { margin-bottom: 0; }\n #etkbxvfqdx .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #etkbxvfqdx .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #etkbxvfqdx .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #etkbxvfqdx .gt_row_group_first td { border-top-width: 0.5px; }\n #etkbxvfqdx .gt_row_group_first th { border-top-width: 0.5px; }\n #etkbxvfqdx .gt_striped { background-color: rgba(128,128,128,0.05); }\n #etkbxvfqdx .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #etkbxvfqdx .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #etkbxvfqdx .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #etkbxvfqdx .gt_left { text-align: left; }\n #etkbxvfqdx .gt_center { text-align: center; }\n #etkbxvfqdx .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #etkbxvfqdx .gt_font_normal { font-weight: normal; }\n #etkbxvfqdx .gt_font_bold { font-weight: bold; }\n #etkbxvfqdx .gt_font_italic { font-style: italic; }\n #etkbxvfqdx .gt_super { font-size: 65%; }\n #etkbxvfqdx .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #etkbxvfqdx .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"Y\">\n    <span class=\"gt_column_spanner\">Y</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(1)\">(1)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(2)\">(2)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(3)\">(3)</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"4\">coef</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X1</th>\n    <td class=\"gt_row gt_center\">-0.059 <br> (0.060)</td>\n    <td class=\"gt_row gt_center\">-0.275 <br> (0.283)</td>\n    <td class=\"gt_row gt_center\">-0.171 <br> (0.171)</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Intercept</th>\n    <td class=\"gt_row gt_center\">0.377*** <br> (0.080)</td>\n    <td class=\"gt_row gt_center\">-0.497 <br> (0.362)</td>\n    <td class=\"gt_row gt_center\">-0.307 <br> (0.223)</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"4\">stats</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Observations</th>\n    <td class=\"gt_row gt_center\">99</td>\n    <td class=\"gt_row gt_center\">99</td>\n    <td class=\"gt_row gt_center\">99</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">S.E. type</th>\n    <td class=\"gt_row gt_center\">iid</td>\n    <td class=\"gt_row gt_center\">iid</td>\n    <td class=\"gt_row gt_center\">iid</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">-</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Adj. R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">-</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"4\">Significance levels: * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001. Format of coefficient cell:\nCoefficient \n (Std. Error)</td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nYou can make predictions on the `response` and `link` scale via the `predict()` method:\n\n::: {#88fc7488 .cell execution_count=44}\n``` {.python .cell-code}\nfit_logit.predict(type = \"response\")[0:5]\nfit_logit.predict(type = \"link\")[0:5]\n```\n\n::: {.cell-output .cell-output-display execution_count=44}\n```\narray([-0.49677152, -1.046612  , -1.046612  , -0.77169176, -1.046612  ])\n```\n:::\n:::\n\n\nYou can compute the **average marginal effect** via the [marginaleffects package](https://github.com/vincentarelbundock/pymarginaleffects):\n\n::: {#8f23b9d6 .cell execution_count=45}\n``` {.python .cell-code}\navg_slopes(fit_logit, variables = \"X1\")\n```\n\n::: {.cell-output .cell-output-display execution_count=45}\n```{=html}\n<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (1, 9)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>term</th><th>contrast</th><th>estimate</th><th>std_error</th><th>statistic</th><th>p_value</th><th>s_value</th><th>conf_low</th><th>conf_high</th></tr><tr><td>str</td><td>str</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td></tr></thead><tbody><tr><td>&quot;X1&quot;</td><td>&quot;mean(dY/dX)&quot;</td><td>-0.27492</td><td>0.282671</td><td>-0.97258</td><td>0.330762</td><td>1.596134</td><td>-0.828946</td><td>0.279105</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\nPlease take a look at the [marginaleffects book](https://marginaleffects.com/) to learn about other transformations that the `marginaleffects` package supports.\n\n# Multiple Estimation\n\n`PyFixest` supports a range of multiple estimation functionality: `sw`, `sw0`, `csw`, `csw0`, and multiple dependent variables. The meaning of these options is explained in the [Multiple Estimations](https://lrberge.github.io/fixest/articles/multiple_estimations.html) vignette of the `fixest` package:\n\n> - `sw`: this function is replaced sequentially by each of its arguments. For example, `y ~ x1 + sw(x2, x3)` leads to two estimations: `y ~ x1 + x2` and `y ~ x1 + x3`.\n> - `sw0`: identical to sw but first adds the empty element. E.g. `y ~ x1 + sw0(x2, x3)` leads to three estimations: `y ~ x1`, `y ~ x1 + x2` and `y ~ x1 + x3`.\n> - `csw`: it stands for cumulative stepwise. It adds to the formula each of its arguments sequentially. E.g. `y ~ x1 + csw(x2, x3)` will become `y ~ x1 + x2` and `y ~ x1 + x2 + x3`.\n> - `csw0`: identical to csw but first adds the empty element. E.g. `y ~ x1 + csw0(x2, x3)` leads to three estimations: `y ~ x1`, `y ~ x1 + x`2 and `y ~ x1 + x2 + x3`.\n\nAdditionally, we support `split` and `fsplit` function arguments.\n> - `split` allows to split a sample by a given variable. If specified, `pf.feols()` and `pf.fepois()` will loop through all resulting sample splits.\n> - `fsplit` works just as `split`, but fits the model on the full sample as well.\n\nIf multiple regression syntax is used,\n`feols()` and `fepois` returns an instance of a `FixestMulti` object, which essentially consists of a dicionary of `Fepois` or [Feols](/reference/Feols.qmd) instances.\n\n::: {#91a26fd1 .cell execution_count=46}\n``` {.python .cell-code}\nmulti_fit = pf.feols(fml=\"Y ~ X1 | csw0(f1, f2)\", data=data, vcov=\"HC1\")\nmulti_fit\n```\n\n::: {.cell-output .cell-output-display execution_count=46}\n```\n<pyfixest.estimation.FixestMulti_.FixestMulti at 0x1a8affc4d70>\n```\n:::\n:::\n\n\n::: {#ed91eea3 .cell execution_count=47}\n``` {.python .cell-code}\nmulti_fit.etable()\n```\n\n::: {.cell-output .cell-output-display execution_count=47}\n```{=html}\n<div id=\"pcucewriih\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#pcucewriih table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#pcucewriih thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#pcucewriih p { margin: 0; padding: 0; }\n #pcucewriih .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #pcucewriih .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #pcucewriih .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #pcucewriih .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #pcucewriih .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #pcucewriih .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #pcucewriih .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #pcucewriih .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #pcucewriih .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #pcucewriih .gt_column_spanner_outer:first-child { padding-left: 0; }\n #pcucewriih .gt_column_spanner_outer:last-child { padding-right: 0; }\n #pcucewriih .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #pcucewriih .gt_spanner_row { border-bottom-style: hidden; }\n #pcucewriih .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #pcucewriih .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #pcucewriih .gt_from_md> :first-child { margin-top: 0; }\n #pcucewriih .gt_from_md> :last-child { margin-bottom: 0; }\n #pcucewriih .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #pcucewriih .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #pcucewriih .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #pcucewriih .gt_row_group_first td { border-top-width: 0.5px; }\n #pcucewriih .gt_row_group_first th { border-top-width: 0.5px; }\n #pcucewriih .gt_striped { background-color: rgba(128,128,128,0.05); }\n #pcucewriih .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #pcucewriih .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #pcucewriih .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #pcucewriih .gt_left { text-align: left; }\n #pcucewriih .gt_center { text-align: center; }\n #pcucewriih .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #pcucewriih .gt_font_normal { font-weight: normal; }\n #pcucewriih .gt_font_bold { font-weight: bold; }\n #pcucewriih .gt_font_italic { font-style: italic; }\n #pcucewriih .gt_super { font-size: 65%; }\n #pcucewriih .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #pcucewriih .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"Y\">\n    <span class=\"gt_column_spanner\">Y</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(1)\">(1)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(2)\">(2)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(3)\">(3)</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"4\">coef</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X1</th>\n    <td class=\"gt_row gt_center\">-1.000*** <br> (0.082)</td>\n    <td class=\"gt_row gt_center\">-0.949*** <br> (0.067)</td>\n    <td class=\"gt_row gt_center\">-0.919*** <br> (0.060)</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Intercept</th>\n    <td class=\"gt_row gt_center\">0.919*** <br> (0.112)</td>\n    <td class=\"gt_row gt_center\"></td>\n    <td class=\"gt_row gt_center\"></td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"4\">fe</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f1</th>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f2</th>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"4\">stats</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Observations</th>\n    <td class=\"gt_row gt_center\">998</td>\n    <td class=\"gt_row gt_center\">997</td>\n    <td class=\"gt_row gt_center\">997</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">S.E. type</th>\n    <td class=\"gt_row gt_center\">hetero</td>\n    <td class=\"gt_row gt_center\">hetero</td>\n    <td class=\"gt_row gt_center\">hetero</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">0.123</td>\n    <td class=\"gt_row gt_center\">0.437</td>\n    <td class=\"gt_row gt_center\">0.609</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup> Within</th>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">0.161</td>\n    <td class=\"gt_row gt_center\">0.200</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"4\">Significance levels: * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001. Format of coefficient cell:\nCoefficient \n (Std. Error)</td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nYou can access an individual model by its name - i.e. a formula - via the `all_fitted_models` attribute.\n\n::: {#97a78849 .cell execution_count=48}\n``` {.python .cell-code}\nmulti_fit.all_fitted_models[\"Y~X1\"].tidy()\n```\n\n::: {.cell-output .cell-output-display execution_count=48}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Intercept</th>\n      <td>0.918518</td>\n      <td>0.111707</td>\n      <td>8.222580</td>\n      <td>6.661338e-16</td>\n      <td>0.699310</td>\n      <td>1.137725</td>\n    </tr>\n    <tr>\n      <th>X1</th>\n      <td>-1.000086</td>\n      <td>0.082420</td>\n      <td>-12.134086</td>\n      <td>0.000000e+00</td>\n      <td>-1.161822</td>\n      <td>-0.838350</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nor equivalently via the `fetch_model` method:\n\n::: {#8d7a2acf .cell execution_count=49}\n``` {.python .cell-code}\nmulti_fit.fetch_model(0).tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nModel:  Y~X1\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=49}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Intercept</th>\n      <td>0.918518</td>\n      <td>0.111707</td>\n      <td>8.222580</td>\n      <td>6.661338e-16</td>\n      <td>0.699310</td>\n      <td>1.137725</td>\n    </tr>\n    <tr>\n      <th>X1</th>\n      <td>-1.000086</td>\n      <td>0.082420</td>\n      <td>-12.134086</td>\n      <td>0.000000e+00</td>\n      <td>-1.161822</td>\n      <td>-0.838350</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nHere, `0` simply fetches the first model stored in the `all_fitted_models` dictionary, `1` the second etc.\n\nObjects of type `Fixest` come with a range of additional methods: `tidy()`, `coef()`, `vcov()` etc, which\nessentially loop over the equivalent methods of all fitted models. E.g. `Fixest.vcov()` updates inference for all\nmodels stored in `Fixest`.\n\n::: {#1b5a485d .cell execution_count=50}\n``` {.python .cell-code}\nmulti_fit.vcov(\"iid\").summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n###\n\nEstimation:  OLS\nDep. var.: Y, Fixed effects: 0\nInference:  iid\nObservations:  998\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| Intercept     |      0.919 |        0.112 |     8.214 |      0.000 |  0.699 |   1.138 |\n| X1            |     -1.000 |        0.085 |   -11.802 |      0.000 | -1.166 |  -0.834 |\n---\nRMSE: 2.158 R2: 0.123 \n###\n\nEstimation:  OLS\nDep. var.: Y, Fixed effects: f1\nInference:  iid\nObservations:  997\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| X1            |     -0.949 |        0.070 |   -13.636 |      0.000 | -1.086 |  -0.813 |\n---\nRMSE: 1.73 R2: 0.437 R2 Within: 0.161 \n###\n\nEstimation:  OLS\nDep. var.: Y, Fixed effects: f1+f2\nInference:  iid\nObservations:  997\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| X1            |     -0.919 |        0.060 |   -15.322 |      0.000 | -1.037 |  -0.802 |\n---\nRMSE: 1.441 R2: 0.609 R2 Within: 0.2 \n```\n:::\n:::\n\n\nYou can summarize multiple models at once via `etable()`. `etable()` has many options to customize the output to obtain publication-ready tables.\n\n::: {#4fe75ca1 .cell execution_count=51}\n``` {.python .cell-code}\npf.etable(\n    [fit, fit2],\n    labels={\"Y\": \"Wage\", \"X1\": \"Age\", \"X2\": \"Years of Schooling\"},\n    felabels={\"f1\": \"Industry Fixed Effects\"},\n    caption=\"Regression Results\",\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=51}\n```{=html}\n<div id=\"lbgygvgrah\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#lbgygvgrah table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#lbgygvgrah thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#lbgygvgrah p { margin: 0; padding: 0; }\n #lbgygvgrah .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: hidden; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #lbgygvgrah .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #lbgygvgrah .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #lbgygvgrah .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #lbgygvgrah .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #lbgygvgrah .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #lbgygvgrah .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #lbgygvgrah .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #lbgygvgrah .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #lbgygvgrah .gt_column_spanner_outer:first-child { padding-left: 0; }\n #lbgygvgrah .gt_column_spanner_outer:last-child { padding-right: 0; }\n #lbgygvgrah .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #lbgygvgrah .gt_spanner_row { border-bottom-style: hidden; }\n #lbgygvgrah .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #lbgygvgrah .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #lbgygvgrah .gt_from_md> :first-child { margin-top: 0; }\n #lbgygvgrah .gt_from_md> :last-child { margin-bottom: 0; }\n #lbgygvgrah .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #lbgygvgrah .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #lbgygvgrah .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #lbgygvgrah .gt_row_group_first td { border-top-width: 0.5px; }\n #lbgygvgrah .gt_row_group_first th { border-top-width: 0.5px; }\n #lbgygvgrah .gt_striped { background-color: rgba(128,128,128,0.05); }\n #lbgygvgrah .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #lbgygvgrah .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #lbgygvgrah .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #lbgygvgrah .gt_left { text-align: left; }\n #lbgygvgrah .gt_center { text-align: center; }\n #lbgygvgrah .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #lbgygvgrah .gt_font_normal { font-weight: normal; }\n #lbgygvgrah .gt_font_bold { font-weight: bold; }\n #lbgygvgrah .gt_font_italic { font-style: italic; }\n #lbgygvgrah .gt_super { font-size: 65%; }\n #lbgygvgrah .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #lbgygvgrah .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n  <tr class=\"gt_heading\">\n    <td colspan=\"3\" class=\"gt_heading gt_title gt_font_normal\">Regression Results</td>\n  </tr>\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"Wage\">\n    <span class=\"gt_column_spanner\">Wage</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(1)\">(1)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(2)\">(2)</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">coef</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Age</th>\n    <td class=\"gt_row gt_center\">-0.950*** <br> (0.067)</td>\n    <td class=\"gt_row gt_center\">-1.000*** <br> (0.117)</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Years of Schooling</th>\n    <td class=\"gt_row gt_center\">-0.174*** <br> (0.018)</td>\n    <td class=\"gt_row gt_center\"></td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Intercept</th>\n    <td class=\"gt_row gt_center\"></td>\n    <td class=\"gt_row gt_center\">0.919*** <br> (0.121)</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">fe</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Industry Fixed Effects</th>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">-</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">stats</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Observations</th>\n    <td class=\"gt_row gt_center\">997</td>\n    <td class=\"gt_row gt_center\">998</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">S.E. type</th>\n    <td class=\"gt_row gt_center\">by: f1</td>\n    <td class=\"gt_row gt_center\">by: group_id</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">0.489</td>\n    <td class=\"gt_row gt_center\">0.123</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup> Within</th>\n    <td class=\"gt_row gt_center\">0.239</td>\n    <td class=\"gt_row gt_center\">-</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"3\">Significance levels: * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001. Format of coefficient cell:\nCoefficient \n (Std. Error)</td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nYou can also visualize multiple estimation results via `iplot()` and `coefplot()`:\n\n::: {#e3152a83 .cell execution_count=52}\n``` {.python .cell-code}\nmulti_fit.coefplot().show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n   <div id=\"OShmKa\"></div>\n   <script type=\"text/javascript\" data-lets-plot-script=\"plot\">\n   \n   (function() {\n   // ----------\n   \n   var containerDiv = document.getElementById(\"OShmKa\");\n   var observer = new ResizeObserver(function(entries) {\n       for (let entry of entries) {\n           var width = containerDiv.clientWidth\n           if (entry.contentBoxSize && width > 0) {\n           \n               // Render plot\n               if (observer) {\n                   observer.disconnect();\n                   observer = null;\n               }\n\n               var plotSpec={\n\"data\":{\n\"Coefficient\":[\"Intercept\",\"X1\",\"X1\",\"X1\",\"X1\",\"X1\",\"X1\",\"X1\",\"X1\",\"X1\"],\n\"Estimate\":[0.9185177588356426,-1.000085840074156,-0.9494410591286258,-0.9192548853827908,-1.000085840074156,-0.9494410591286258,-0.9192548853827908,-1.000085840074156,-0.9494410591286258,-0.9192548853827908],\n\"2.5%\":[0.6990856170653885,-1.1663660739416457,-1.0860783688399673,-1.036999833114967,-1.1663660739416457,-1.0860783688399673,-1.036999833114967,-1.1663660739416457,-1.0860783688399673,-1.036999833114967],\n\"97.5%\":[1.1379499006058966,-0.8338056062066661,-0.8128037494172842,-0.8015099376506146,-0.8338056062066661,-0.8128037494172842,-0.8015099376506146,-0.8338056062066661,-0.8128037494172842,-0.8015099376506146],\n\"Model\":[\"Y~X1\",\"Y~X1\",\"Y~X1|f1\",\"Y~X1|f1+f2\",\"Y~X1\",\"Y~X1|f1\",\"Y~X1|f1+f2\",\"Y~X1\",\"Y~X1|f1\",\"Y~X1|f1+f2\"]\n},\n\"mapping\":{\n\"x\":\"Coefficient\",\n\"y\":\"Estimate\",\n\"color\":\"Model\"\n},\n\"data_meta\":{\n\"series_annotations\":[{\n\"type\":\"int\",\n\"column\":\"level_0\"\n},{\n\"type\":\"str\",\n\"column\":\"Coefficient\"\n},{\n\"type\":\"int\",\n\"column\":\"index\"\n},{\n\"type\":\"float\",\n\"column\":\"Estimate\"\n},{\n\"type\":\"float\",\n\"column\":\"Std. Error\"\n},{\n\"type\":\"float\",\n\"column\":\"t value\"\n},{\n\"type\":\"float\",\n\"column\":\"Pr(>|t|)\"\n},{\n\"type\":\"float\",\n\"column\":\"2.5%\"\n},{\n\"type\":\"float\",\n\"column\":\"97.5%\"\n},{\n\"type\":\"str\",\n\"column\":\"Model\"\n}]\n},\n\"guides\":{\n\"y\":{\n\"title\":\"Estimate and 95.0% Confidence Interval\"\n}\n},\n\"coord\":{\n\"name\":\"flip\",\n\"flip\":true\n},\n\"ggsize\":{\n\"width\":500.0,\n\"height\":300.0\n},\n\"theme\":{\n\"axis_text_x\":{\n\"angle\":0.0,\n\"blank\":false\n}\n},\n\"kind\":\"plot\",\n\"scales\":[],\n\"layers\":[{\n\"geom\":\"point\",\n\"mapping\":{\n},\n\"position\":{\n\"name\":\"dodge\",\n\"width\":0.5\n},\n\"data_meta\":{\n},\n\"data\":{\n}\n},{\n\"geom\":\"errorbar\",\n\"mapping\":{\n\"ymin\":\"2.5%\",\n\"ymax\":\"97.5%\"\n},\n\"position\":{\n\"name\":\"dodge\",\n\"width\":0.5\n},\n\"data_meta\":{\n},\n\"width\":0.05,\n\"data\":{\n}\n},{\n\"geom\":\"hline\",\n\"mapping\":{\n},\n\"data_meta\":{\n},\n\"yintercept\":0.0,\n\"linetype\":\"dashed\",\n\"color\":\"black\",\n\"data\":{\n}\n}],\n\"metainfo_list\":[],\n\"spec_id\":\"2\"\n};\n               window.letsPlotCall(function() {\n       \n               var toolbar = null;\n               var plotContainer = containerDiv;               \n               \n                   var options = {\n                       sizing: {\n                           width_mode: \"min\",\n                           height_mode: \"scaled\",\n                           width: width\n                       }\n                   };\n                   var fig = LetsPlot.buildPlotFromProcessedSpecs(plotSpec, -1, -1, plotContainer, options);\n                   if (toolbar) {\n                     toolbar.bind(fig);\n                   }\n               });\n               \n               break;\n           }\n       }\n   });\n   \n   observer.observe(containerDiv);\n   \n   // ----------\n   })();\n   \n   </script>\n```\n:::\n:::\n\n\n# Difference-in-Differences / Event Study Designs\n\n`PyFixest` supports eventy study designs via two-way fixed effects, Gardner's 2-stage estimator, and the linear projections estimator.\n\n::: {#890b4fbb .cell execution_count=53}\n``` {.python .cell-code}\nurl = \"https://raw.githubusercontent.com/py-econometrics/pyfixest/master/pyfixest/did/data/df_het.csv\"\ndf_het = pd.read_csv(url)\n\ndf_het.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=53}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>unit</th>\n      <th>state</th>\n      <th>group</th>\n      <th>unit_fe</th>\n      <th>g</th>\n      <th>year</th>\n      <th>year_fe</th>\n      <th>treat</th>\n      <th>rel_year</th>\n      <th>rel_year_binned</th>\n      <th>error</th>\n      <th>te</th>\n      <th>te_dynamic</th>\n      <th>dep_var</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>33</td>\n      <td>Group 2</td>\n      <td>7.043016</td>\n      <td>2010</td>\n      <td>1990</td>\n      <td>0.066159</td>\n      <td>False</td>\n      <td>-20.0</td>\n      <td>-6</td>\n      <td>-0.086466</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7.022709</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>33</td>\n      <td>Group 2</td>\n      <td>7.043016</td>\n      <td>2010</td>\n      <td>1991</td>\n      <td>-0.030980</td>\n      <td>False</td>\n      <td>-19.0</td>\n      <td>-6</td>\n      <td>0.766593</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7.778628</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>33</td>\n      <td>Group 2</td>\n      <td>7.043016</td>\n      <td>2010</td>\n      <td>1992</td>\n      <td>-0.119607</td>\n      <td>False</td>\n      <td>-18.0</td>\n      <td>-6</td>\n      <td>1.512968</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>8.436377</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>33</td>\n      <td>Group 2</td>\n      <td>7.043016</td>\n      <td>2010</td>\n      <td>1993</td>\n      <td>0.126321</td>\n      <td>False</td>\n      <td>-17.0</td>\n      <td>-6</td>\n      <td>0.021870</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7.191207</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>33</td>\n      <td>Group 2</td>\n      <td>7.043016</td>\n      <td>2010</td>\n      <td>1994</td>\n      <td>-0.106921</td>\n      <td>False</td>\n      <td>-16.0</td>\n      <td>-6</td>\n      <td>-0.017603</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>6.918492</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#30781b6c .cell execution_count=54}\n``` {.python .cell-code}\nfit_did2s = pf.did2s(\n    df_het,\n    yname=\"dep_var\",\n    first_stage=\"~ 0 | state + year\",\n    second_stage=\"~i(rel_year,ref= -1.0)\",\n    treatment=\"treat\",\n    cluster=\"state\",\n)\n\n\nfit_twfe = pf.feols(\n    \"dep_var ~ i(rel_year,ref = -1.0) | state + year\",\n    df_het,\n    vcov={\"CRV1\": \"state\"},\n)\n\nfrom pyfixest.report.utils import rename_categoricals\npf.iplot(\n    [fit_did2s, fit_twfe], coord_flip=False, figsize=(900, 400), title=\"TWFE vs DID2S\", rotate_xticks=90,\n    labels= rename_categoricals(fit_did2s._coefnames, template=\"{value_int}\")\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=54}\n```{=html}\n   <div id=\"1XhPF0\"></div>\n   <script type=\"text/javascript\" data-lets-plot-script=\"plot\">\n   \n   (function() {\n   // ----------\n   \n   var containerDiv = document.getElementById(\"1XhPF0\");\n   var observer = new ResizeObserver(function(entries) {\n       for (let entry of entries) {\n           var width = containerDiv.clientWidth\n           if (entry.contentBoxSize && width > 0) {\n           \n               // Render plot\n               if (observer) {\n                   observer.disconnect();\n                   observer = null;\n               }\n\n               var plotSpec={\n\"data\":{\n\"Coefficient\":[\"-inf\",\"-20\",\"-19\",\"-18\",\"-17\",\"-16\",\"-15\",\"-14\",\"-13\",\"-12\",\"-11\",\"-10\",\"-9\",\"-8\",\"-7\",\"-6\",\"-5\",\"-4\",\"-3\",\"-2\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"-inf\",\"-20\",\"-19\",\"-18\",\"-17\",\"-16\",\"-15\",\"-14\",\"-13\",\"-12\",\"-11\",\"-10\",\"-9\",\"-8\",\"-7\",\"-6\",\"-5\",\"-4\",\"-3\",\"-2\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"],\n\"Estimate\":[0.03050454118024963,-0.07930900259626203,-0.02711527692295062,-0.027235402463776405,-0.03361634096038667,-0.055780655419594205,0.01674516938041027,-0.020869904492020277,-0.022209791559758614,0.00544710624064335,-0.04792471572381649,-0.03247849876040112,-0.037517320624783704,-0.030855210934354546,-0.007103797964663784,-0.03959725316883278,-0.07918224438339333,-0.034225503853840766,-0.01521372832580776,-0.03868704577129315,1.3044623834822837,1.5334859508078482,1.5971059113541846,1.7188457243602804,1.846295731365529,1.9905870364602578,2.078882518586963,2.1653976455207697,2.2589503298971727,2.2777620650044526,2.4147670896846156,2.4563355023754894,2.5072972378725447,2.481397359082737,2.626323300651735,2.812630406322005,2.762680227967199,2.8112964819353956,2.777034681333358,2.7861621743322673,2.814858795952651,0.12805306243573114,-0.09944466441181453,6.235199753998803E-4,0.004124766186705407,0.02189908545948477,-0.03693340882836168,0.0695778383654206,0.03773442317032283,0.06177914337449611,0.08991270466792266,9.822487465556116E-4,-0.11303282051981793,-0.06922462711945586,-0.06128951309362952,-0.0020224309370893505,-0.05580979472634408,-0.06500868193865406,-0.009849959807182215,0.046338079900974376,0.015947312893775146,1.4064044908225932,1.6605518884804102,1.7287900538935237,1.854838996002706,1.9586760781129549,2.082161283635854,2.1910619949213292,2.2790728423714435,2.3645934393351222,2.372162693677255,2.649271188090824,2.753590871536464,2.81393547422749,2.756069650642773,2.8634270216427646,2.986652345533256,2.9630322165965404,2.972596421114108,2.935051329012643,2.9187065136810073,2.979701202491609],\n\"2.5%\":[-0.009719641826140546,-0.16956016969216003,-0.13130812199360017,-0.12259734895132246,-0.1175644825699338,-0.1594321901403984,-0.08271381157310426,-0.11742991293818579,-0.10020045626017715,-0.08409589533062649,-0.16435155036157145,-0.0994115824676782,-0.09715648778339499,-0.09367071573324401,-0.07832049673550492,-0.09280977901290312,-0.13882547258337632,-0.08903974075563441,-0.0749370780140151,-0.10202191434395427,1.194594450141983,1.407283544805392,1.4860069800585887,1.6001282473227225,1.7528182273606263,1.8801605464847497,1.9527950577965192,2.0508360430515453,2.1453418947152567,2.1732990567405195,2.2970298944867684,2.29588044092547,2.3509958917448306,2.3156528337470066,2.489636283820776,2.650493232558452,2.60110206370997,2.6557316368566606,2.616761417644826,2.6094159611053414,2.6520853347544464,-0.030807746498053318,-0.2647523908998393,-0.16774636908206778,-0.17740998253542786,-0.15147558902854402,-0.23303994198668262,-0.09489875317316952,-0.13752593665091395,-0.10689188479558762,-0.08187083528880897,-0.15907464527281334,-0.24439448942402087,-0.18465024083964438,-0.18342347916187307,-0.1327365037530466,-0.18666932874002978,-0.19614293346985573,-0.1172867997391029,-0.08103372597209141,-0.11646532546424838,1.2938224522236312,1.5289656538601326,1.613876660349844,1.7368465942004552,1.8147261521226936,1.9529592610149957,2.0524404216411956,2.127291831867184,2.2460272804691237,2.257721255734465,2.5356035511883572,2.6007745601483654,2.653442814455898,2.5975022579559943,2.6643497148186417,2.7978533369948293,2.7901816631575564,2.785658293592232,2.7446002811506043,2.7483541440936063,2.802096879471492],\n\"97.5%\":[0.07072872418663981,0.01094216449963599,0.07707756814769895,0.06812654402376966,0.05033180064916047,0.04787087930120999,0.11620415033392481,0.07569010395414523,0.05578087314065993,0.09499010781191318,0.06850211891393848,0.03445458494687597,0.02212184653382758,0.03196029386453492,0.06411290080617735,0.013615272675237558,-0.019539016183410328,0.020588733047952876,0.044509621362399575,0.02464782280136798,1.4143303168225845,1.6596883568103045,1.7082048426497805,1.8375632013978382,1.9397732353704318,2.1010135264357657,2.2049699793774065,2.279959247989994,2.3725587650790887,2.3822250732683856,2.532504284882463,2.616790563825509,2.6635985840002587,2.6471418844184678,2.7630103174826934,2.9747675800855577,2.9242583922244276,2.9668613270141306,2.93730794502189,2.9629083875591933,2.9776322571508556,0.2869138713695156,0.06586306207621027,0.16899340903286755,0.18565951490883867,0.19527375994751356,0.15917312432995925,0.2340544299040107,0.2129947829915596,0.23045017154457983,0.2616962446246543,0.16103914276592457,0.01832884838438499,0.046200986600732644,0.06084445297461404,0.12869164187886792,0.07504973928734164,0.06612556959254762,0.09758688012473847,0.17370988577404017,0.14835995125179868,1.5189865294215552,1.7921381231006879,1.8437034474372034,1.972831397804957,2.1026260041032163,2.2113633062567124,2.329683568201463,2.430853852875703,2.4831595982011208,2.4866041316200453,2.7629388249932907,2.9064071829245623,2.974428133999082,2.914637043329552,3.0625043284668876,3.175451354071683,3.1358827700355243,3.1595345486359836,3.1255023768746817,3.0890588832684083,3.157305525511726],\n\"Model\":[\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var_hat~i(rel_year,ref=-1.0)\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\",\"dep_var~i(rel_year,ref=-1.0)|state+year\"]\n},\n\"mapping\":{\n\"x\":\"Coefficient\",\n\"y\":\"Estimate\",\n\"color\":\"Model\"\n},\n\"data_meta\":{\n\"series_annotations\":[{\n\"type\":\"int\",\n\"column\":\"level_0\"\n},{\n\"type\":\"int\",\n\"column\":\"index\"\n},{\n\"type\":\"str\",\n\"column\":\"Coefficient\"\n},{\n\"type\":\"float\",\n\"column\":\"Estimate\"\n},{\n\"type\":\"float\",\n\"column\":\"Std. Error\"\n},{\n\"type\":\"float\",\n\"column\":\"t value\"\n},{\n\"type\":\"float\",\n\"column\":\"Pr(>|t|)\"\n},{\n\"type\":\"float\",\n\"column\":\"2.5%\"\n},{\n\"type\":\"float\",\n\"column\":\"97.5%\"\n},{\n\"type\":\"str\",\n\"column\":\"Model\"\n}]\n},\n\"guides\":{\n\"y\":{\n\"title\":\"Estimate and 95.0% Confidence Interval\"\n}\n},\n\"ggsize\":{\n\"width\":900.0,\n\"height\":400.0\n},\n\"theme\":{\n\"axis_text_x\":{\n\"angle\":90.0,\n\"blank\":false\n}\n},\n\"ggtitle\":{\n\"text\":\"TWFE vs DID2S\"\n},\n\"kind\":\"plot\",\n\"scales\":[],\n\"layers\":[{\n\"geom\":\"point\",\n\"mapping\":{\n},\n\"position\":{\n\"name\":\"dodge\",\n\"width\":0.5\n},\n\"data_meta\":{\n},\n\"data\":{\n}\n},{\n\"geom\":\"errorbar\",\n\"mapping\":{\n\"ymin\":\"2.5%\",\n\"ymax\":\"97.5%\"\n},\n\"position\":{\n\"name\":\"dodge\",\n\"width\":0.5\n},\n\"data_meta\":{\n},\n\"width\":0.05,\n\"data\":{\n}\n}],\n\"metainfo_list\":[],\n\"spec_id\":\"3\"\n};\n               window.letsPlotCall(function() {\n       \n               var toolbar = null;\n               var plotContainer = containerDiv;               \n               \n                   var options = {\n                       sizing: {\n                           width_mode: \"min\",\n                           height_mode: \"scaled\",\n                           width: width\n                       }\n                   };\n                   var fig = LetsPlot.buildPlotFromProcessedSpecs(plotSpec, -1, -1, plotContainer, options);\n                   if (toolbar) {\n                     toolbar.bind(fig);\n                   }\n               });\n               \n               break;\n           }\n       }\n   });\n   \n   observer.observe(containerDiv);\n   \n   // ----------\n   })();\n   \n   </script>\n```\n:::\n:::\n\n\nThe `event_study()` function provides a common API for several event study estimators.\n\n::: {#ae667fcd .cell execution_count=55}\n``` {.python .cell-code}\nfit_twfe = pf.event_study(\n    data=df_het,\n    yname=\"dep_var\",\n    idname=\"state\",\n    tname=\"year\",\n    gname=\"g\",\n    estimator=\"twfe\",\n)\n\nfit_did2s = pf.event_study(\n    data=df_het,\n    yname=\"dep_var\",\n    idname=\"state\",\n    tname=\"year\",\n    gname=\"g\",\n    estimator=\"did2s\",\n)\n\npf.etable([fit_twfe, fit_did2s])\n```\n\n::: {.cell-output .cell-output-display execution_count=55}\n```{=html}\n<div id=\"rmxsxmjxgs\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#rmxsxmjxgs table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#rmxsxmjxgs thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#rmxsxmjxgs p { margin: 0; padding: 0; }\n #rmxsxmjxgs .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #rmxsxmjxgs .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #rmxsxmjxgs .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #rmxsxmjxgs .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #rmxsxmjxgs .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #rmxsxmjxgs .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #rmxsxmjxgs .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #rmxsxmjxgs .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #rmxsxmjxgs .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #rmxsxmjxgs .gt_column_spanner_outer:first-child { padding-left: 0; }\n #rmxsxmjxgs .gt_column_spanner_outer:last-child { padding-right: 0; }\n #rmxsxmjxgs .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #rmxsxmjxgs .gt_spanner_row { border-bottom-style: hidden; }\n #rmxsxmjxgs .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #rmxsxmjxgs .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #rmxsxmjxgs .gt_from_md> :first-child { margin-top: 0; }\n #rmxsxmjxgs .gt_from_md> :last-child { margin-bottom: 0; }\n #rmxsxmjxgs .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #rmxsxmjxgs .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #rmxsxmjxgs .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #rmxsxmjxgs .gt_row_group_first td { border-top-width: 0.5px; }\n #rmxsxmjxgs .gt_row_group_first th { border-top-width: 0.5px; }\n #rmxsxmjxgs .gt_striped { background-color: rgba(128,128,128,0.05); }\n #rmxsxmjxgs .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #rmxsxmjxgs .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #rmxsxmjxgs .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #rmxsxmjxgs .gt_left { text-align: left; }\n #rmxsxmjxgs .gt_center { text-align: center; }\n #rmxsxmjxgs .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #rmxsxmjxgs .gt_font_normal { font-weight: normal; }\n #rmxsxmjxgs .gt_font_bold { font-weight: bold; }\n #rmxsxmjxgs .gt_font_italic { font-style: italic; }\n #rmxsxmjxgs .gt_super { font-size: 65%; }\n #rmxsxmjxgs .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #rmxsxmjxgs .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"dep_var\">\n    <span class=\"gt_column_spanner\">dep_var</span>\n  </th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"dep_var_hat\">\n    <span class=\"gt_column_spanner\">dep_var_hat</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(1)\">(1)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(2)\">(2)</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">coef</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">ATT</th>\n    <td class=\"gt_row gt_center\">2.135*** <br> (0.044)</td>\n    <td class=\"gt_row gt_center\">2.152*** <br> (0.048)</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">fe</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">state</th>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">-</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">year</th>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">-</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">stats</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Observations</th>\n    <td class=\"gt_row gt_center\">46500</td>\n    <td class=\"gt_row gt_center\">46500</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">S.E. type</th>\n    <td class=\"gt_row gt_center\">by: state</td>\n    <td class=\"gt_row gt_center\">CRV1</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">0.758</td>\n    <td class=\"gt_row gt_center\">0.338</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup> Within</th>\n    <td class=\"gt_row gt_center\">0.251</td>\n    <td class=\"gt_row gt_center\">-</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"3\">Significance levels: * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001. Format of coefficient cell:\nCoefficient \n (Std. Error)</td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nFor more details see the vignette on [Difference-in-Differences Estimation](https://py-econometrics.github.io/pyfixest/difference-in-differences.html).\n\n",
    "supporting": [
      "quickstart_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}