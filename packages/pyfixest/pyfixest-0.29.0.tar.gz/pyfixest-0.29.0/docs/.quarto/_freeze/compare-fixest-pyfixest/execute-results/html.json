{
  "hash": "3c3a2fdf7f84d7d8e17ed9f5862cd511",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Does `PyFixest` match `fixest`?\ntoc: true\ntoc-title: \"On this page\"\ntoc-location: left\n---\n\n\n\n\nThis vignette compares estimation results from `fixest` with `pyfixest` via the `rpy2` package.\n\n## Setup\n\n::: {#eee5f559 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport rpy2.robjects as ro\nfrom rpy2.robjects import pandas2ri\nfrom rpy2.robjects.packages import importr\n\nimport pyfixest as pf\n\n# Activate pandas2ri\npandas2ri.activate()\n\n# Import R packages\nfixest = importr(\"fixest\")\nstats = importr(\"stats\")\nbroom = importr(\"broom\")\n\n# IPython magic commands for autoreloading\n%load_ext autoreload\n%autoreload 2\n\n# Get data using pyfixest\ndata = pf.get_data(model=\"Feols\", N=10_000, seed=99292)\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"eYu51j\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.5.2/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"eYu51j\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"eYu51j\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"N90rbx\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.5.2/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"N90rbx\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"N90rbx\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n:::\n\n\n## Ordinary Least Squares (OLS)\n\n### IID Inference\n\nFirst, we estimate a model via `pyfixest. We compute \"iid\" standard errors.\n\n::: {#38f29a96 .cell execution_count=2}\n``` {.python .cell-code}\nfit = pf.feols(fml=\"Y ~ X1 + X2 | f1 + f2\", data=data, vcov=\"iid\")\n```\n:::\n\n\nWe estimate the same model with weights:\n\n::: {#5cfdca90 .cell execution_count=3}\n``` {.python .cell-code}\nfit_weights = pf.feols(\n    fml=\"Y ~ X1 + X2 | f1 + f2\", data=data, weights=\"weights\", vcov=\"iid\"\n)\n```\n:::\n\n\nVia `r-fixest` and `rpy2`, we get\n\n::: {#6624689b .cell execution_count=4}\n``` {.python .cell-code}\nr_fit = fixest.feols(\n    ro.Formula(\"Y ~ X1 + X2 | f1 + f2\"),\n    data=data,\n    vcov=\"iid\",\n)\n\nr_fit_weights = fixest.feols(\n    ro.Formula(\"Y ~ X1 + X2 | f1 + f2\"),\n    data=data,\n    weights=ro.Formula(\"~weights\"),\n    vcov=\"iid\",\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWARNING:rpy2.rinterface_lib.callbacks:R[write to console]: NOTE: 3 observations removed because of NA values (LHS: 1, RHS: 1, Fixed-effects: 1).\n\nWARNING:rpy2.rinterface_lib.callbacks:R[write to console]: NOTE: 3 observations removed because of NA values (LHS: 1, RHS: 1, Fixed-effects: 1).\n\n```\n:::\n:::\n\n\n    R[write to console]: NOTE: 3 observations removed because of NA values (LHS: 1, RHS: 1, Fixed-effects: 1).\n\n    R[write to console]: NOTE: 3 observations removed because of NA values (LHS: 1, RHS: 1, Fixed-effects: 1).\n\n\n\nLet's compare how close the covariance matrices are:\n\n::: {#9d52877a .cell execution_count=5}\n``` {.python .cell-code}\nfit_vcov = fit._vcov\nr_vcov = stats.vcov(r_fit)\nfit_vcov - r_vcov\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\narray([[-7.04731412e-19, -3.37903280e-22],\n       [-3.38316871e-22, -1.42301535e-19]])\n```\n:::\n:::\n\n\nAnd for WLS:\n\n::: {#626105b7 .cell execution_count=6}\n``` {.python .cell-code}\nfit_weights._vcov - stats.vcov(r_fit_weights)\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\narray([[ 1.68051337e-18, -1.69406589e-21],\n       [-1.69406589e-21, -1.49077799e-19]])\n```\n:::\n:::\n\n\nWe conclude by comparing all estimation results via the `tidy` methods:\n\n::: {#ab7f1ff0 .cell execution_count=7}\n``` {.python .cell-code}\nfit.tidy()\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>X1</th>\n      <td>0.112019</td>\n      <td>0.017042</td>\n      <td>6.572948</td>\n      <td>5.181855e-11</td>\n      <td>0.078612</td>\n      <td>0.145425</td>\n    </tr>\n    <tr>\n      <th>X2</th>\n      <td>0.732788</td>\n      <td>0.004621</td>\n      <td>158.578261</td>\n      <td>0.000000e+00</td>\n      <td>0.723730</td>\n      <td>0.741846</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#66827c51 .cell execution_count=8}\n``` {.python .cell-code}\npd.DataFrame(broom.tidy_fixest(r_fit)).T\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>X1</td>\n      <td>0.112019</td>\n      <td>0.017042</td>\n      <td>6.572948</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>X2</td>\n      <td>0.732788</td>\n      <td>0.004621</td>\n      <td>158.578261</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#8952ac13 .cell execution_count=9}\n``` {.python .cell-code}\nfit_weights.tidy()\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>X1</th>\n      <td>0.123687</td>\n      <td>0.016975</td>\n      <td>7.286200</td>\n      <td>3.432810e-13</td>\n      <td>0.090411</td>\n      <td>0.156962</td>\n    </tr>\n    <tr>\n      <th>X2</th>\n      <td>0.732244</td>\n      <td>0.004610</td>\n      <td>158.844322</td>\n      <td>0.000000e+00</td>\n      <td>0.723207</td>\n      <td>0.741280</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#1305c446 .cell execution_count=10}\n``` {.python .cell-code}\npd.DataFrame(broom.tidy_fixest(r_fit_weights)).T\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>X1</td>\n      <td>0.123687</td>\n      <td>0.016975</td>\n      <td>7.2862</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>X2</td>\n      <td>0.732244</td>\n      <td>0.00461</td>\n      <td>158.844322</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### Heteroskedastic Errors\n\nWe repeat the same exercise with heteroskedastic (HC1) errors:\n\n::: {#94bd6ac1 .cell execution_count=11}\n``` {.python .cell-code}\nfit = pf.feols(fml=\"Y ~ X1 + X2 | f1 + f2\", data=data, vcov=\"hetero\")\nfit_weights = pf.feols(\n    fml=\"Y ~ X1 + X2 | f1 + f2\", data=data, vcov=\"hetero\", weights=\"weights\"\n)\n```\n:::\n\n\n::: {#00882736 .cell execution_count=12}\n``` {.python .cell-code}\nr_fit = fixest.feols(\n    ro.Formula(\"Y ~ X1 + X2 | f1 + f2\"),\n    data=data,\n    vcov=\"hetero\",\n)\n\nr_fit_weights = fixest.feols(\n    ro.Formula(\"Y ~ X1 + X2 | f1 + f2\"),\n    data=data,\n    weights=ro.Formula(\"~weights\"),\n    vcov=\"hetero\",\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWARNING:rpy2.rinterface_lib.callbacks:R[write to console]: NOTE: 3 observations removed because of NA values (LHS: 1, RHS: 1, Fixed-effects: 1).\n\nWARNING:rpy2.rinterface_lib.callbacks:R[write to console]: NOTE: 3 observations removed because of NA values (LHS: 1, RHS: 1, Fixed-effects: 1).\n\n```\n:::\n:::\n\n\nAs before, we compare the variance covariance matrices:\n\n::: {#42a386a0 .cell execution_count=13}\n``` {.python .cell-code}\nfit._vcov - stats.vcov(r_fit)\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\narray([[-1.63768738e-16, -2.15723939e-17],\n       [-2.15723939e-17, -5.45726387e-17]])\n```\n:::\n:::\n\n\n::: {#354dfbd9 .cell execution_count=14}\n``` {.python .cell-code}\nfit_weights._vcov - stats.vcov(r_fit_weights)\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```\narray([[-2.07245245e-16, -9.64601120e-18],\n       [-9.64601120e-18, -3.06592046e-17]])\n```\n:::\n:::\n\n\nWe conclude by comparing all estimation results via the `tidy` methods:\n\n::: {#e829beba .cell execution_count=15}\n``` {.python .cell-code}\nfit.tidy()\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>X1</th>\n      <td>0.112019</td>\n      <td>0.017105</td>\n      <td>6.548962</td>\n      <td>6.082002e-11</td>\n      <td>0.078490</td>\n      <td>0.145548</td>\n    </tr>\n    <tr>\n      <th>X2</th>\n      <td>0.732788</td>\n      <td>0.004579</td>\n      <td>160.036098</td>\n      <td>0.000000e+00</td>\n      <td>0.723812</td>\n      <td>0.741763</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#5391f6d8 .cell execution_count=16}\n``` {.python .cell-code}\npd.DataFrame(broom.tidy_fixest(r_fit)).T\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>X1</td>\n      <td>0.112019</td>\n      <td>0.017105</td>\n      <td>6.548962</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>X2</td>\n      <td>0.732788</td>\n      <td>0.004579</td>\n      <td>160.036098</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#b88a612a .cell execution_count=17}\n``` {.python .cell-code}\nfit_weights.tidy()\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>X1</th>\n      <td>0.123687</td>\n      <td>0.019470</td>\n      <td>6.352618</td>\n      <td>2.210045e-10</td>\n      <td>0.085521</td>\n      <td>0.161852</td>\n    </tr>\n    <tr>\n      <th>X2</th>\n      <td>0.732244</td>\n      <td>0.005169</td>\n      <td>141.653304</td>\n      <td>0.000000e+00</td>\n      <td>0.722111</td>\n      <td>0.742376</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#9ac19ba2 .cell execution_count=18}\n``` {.python .cell-code}\npd.DataFrame(broom.tidy_fixest(r_fit_weights)).T\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>X1</td>\n      <td>0.123687</td>\n      <td>0.01947</td>\n      <td>6.352618</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>X2</td>\n      <td>0.732244</td>\n      <td>0.005169</td>\n      <td>141.653304</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### Cluster-Robust Errors\n\nWe conclude with cluster robust errors.\n\n::: {#4f342838 .cell execution_count=19}\n``` {.python .cell-code}\nfit = pf.feols(fml=\"Y ~ X1 + X2 | f1 + f2\", data=data, vcov={\"CRV1\": \"f1\"})\nfit_weights = pf.feols(\n    fml=\"Y ~ X1 + X2 | f1 + f2\", data=data, vcov={\"CRV1\": \"f1\"}, weights=\"weights\"\n)\n\nr_fit = fixest.feols(\n    ro.Formula(\"Y ~ X1 + X2 | f1 + f2\"),\n    data=data,\n    vcov=ro.Formula(\"~f1\"),\n)\nr_fit_weights = fixest.feols(\n    ro.Formula(\"Y ~ X1 + X2 | f1 + f2\"),\n    data=data,\n    weights=ro.Formula(\"~weights\"),\n    vcov=ro.Formula(\"~f1\"),\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWARNING:rpy2.rinterface_lib.callbacks:R[write to console]: NOTE: 3 observations removed because of NA values (LHS: 1, RHS: 1, Fixed-effects: 1).\n\nWARNING:rpy2.rinterface_lib.callbacks:R[write to console]: NOTE: 3 observations removed because of NA values (LHS: 1, RHS: 1, Fixed-effects: 1).\n\n```\n:::\n:::\n\n\n::: {#859ce344 .cell execution_count=20}\n``` {.python .cell-code}\nfit._vcov - stats.vcov(r_fit)\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```\narray([[ 4.23001478e-16, -7.01673623e-17],\n       [-7.01682094e-17, -1.43080805e-17]])\n```\n:::\n:::\n\n\n::: {#25af0f47 .cell execution_count=21}\n``` {.python .cell-code}\nfit_weights._vcov - stats.vcov(r_fit_weights)\n```\n\n::: {.cell-output .cell-output-display execution_count=21}\n```\narray([[2.60533782e-16, 4.09875855e-16],\n       [4.09879243e-16, 1.80858475e-17]])\n```\n:::\n:::\n\n\nWe conclude by comparing all estimation results via the `tidy` methods:\n\n::: {#909fe71b .cell execution_count=22}\n``` {.python .cell-code}\nfit.tidy()\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>X1</th>\n      <td>0.112019</td>\n      <td>0.015865</td>\n      <td>7.060624</td>\n      <td>4.823750e-09</td>\n      <td>0.080152</td>\n      <td>0.143885</td>\n    </tr>\n    <tr>\n      <th>X2</th>\n      <td>0.732788</td>\n      <td>0.004490</td>\n      <td>163.215618</td>\n      <td>0.000000e+00</td>\n      <td>0.723770</td>\n      <td>0.741806</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#f6afb9d3 .cell execution_count=23}\n``` {.python .cell-code}\npd.DataFrame(broom.tidy_fixest(r_fit)).T\n```\n\n::: {.cell-output .cell-output-display execution_count=23}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>X1</td>\n      <td>0.112019</td>\n      <td>0.015865</td>\n      <td>7.060624</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>X2</td>\n      <td>0.732788</td>\n      <td>0.00449</td>\n      <td>163.215618</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#03fff60b .cell execution_count=24}\n``` {.python .cell-code}\nfit_weights.tidy()\n```\n\n::: {.cell-output .cell-output-display execution_count=24}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>X1</th>\n      <td>0.123687</td>\n      <td>0.018368</td>\n      <td>6.733633</td>\n      <td>1.566958e-08</td>\n      <td>0.086792</td>\n      <td>0.160581</td>\n    </tr>\n    <tr>\n      <th>X2</th>\n      <td>0.732244</td>\n      <td>0.005266</td>\n      <td>139.062210</td>\n      <td>0.000000e+00</td>\n      <td>0.721667</td>\n      <td>0.742820</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#d0c99fe2 .cell execution_count=25}\n``` {.python .cell-code}\npd.DataFrame(broom.tidy_fixest(r_fit_weights)).T\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>X1</td>\n      <td>0.123687</td>\n      <td>0.018368</td>\n      <td>6.733633</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>X2</td>\n      <td>0.732244</td>\n      <td>0.005266</td>\n      <td>139.06221</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Poisson Regression\n\n::: {#60505d7f .cell execution_count=26}\n``` {.python .cell-code}\ndata = pf.get_data(model=\"Fepois\")\n```\n:::\n\n\n::: {#8378a6b1 .cell execution_count=27}\n``` {.python .cell-code}\nfit_iid = pf.fepois(fml=\"Y ~ X1 + X2 | f1 + f2\", data=data, vcov=\"iid\", iwls_tol=1e-10)\nfit_hetero = pf.fepois(\n    fml=\"Y ~ X1 + X2 | f1 + f2\", data=data, vcov=\"hetero\", iwls_tol=1e-10\n)\nfit_crv = pf.fepois(\n    fml=\"Y ~ X1 + X2 | f1 + f2\", data=data, vcov={\"CRV1\": \"f1\"}, iwls_tol=1e-10\n)\n\nfit_r_iid = fixest.fepois(\n    ro.Formula(\"Y ~ X1 + X2 | f1 + f2\"),\n    data=data,\n    vcov=\"iid\",\n)\n\nfit_r_hetero = fixest.fepois(\n    ro.Formula(\"Y ~ X1 + X2 | f1 + f2\"),\n    data=data,\n    vcov=\"hetero\",\n)\n\nfit_r_crv = fixest.fepois(\n    ro.Formula(\"Y ~ X1 + X2 | f1 + f2\"),\n    data=data,\n    vcov=ro.Formula(\"~f1\"),\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWARNING:rpy2.rinterface_lib.callbacks:R[write to console]: NOTE: 3 observations removed because of NA values (LHS: 1, RHS: 1, Fixed-effects: 1).\n\nWARNING:rpy2.rinterface_lib.callbacks:R[write to console]: NOTE: 3 observations removed because of NA values (LHS: 1, RHS: 1, Fixed-effects: 1).\n\nWARNING:rpy2.rinterface_lib.callbacks:R[write to console]: NOTE: 3 observations removed because of NA values (LHS: 1, RHS: 1, Fixed-effects: 1).\n\n```\n:::\n:::\n\n\n::: {#0f1ed7e1 .cell execution_count=28}\n``` {.python .cell-code}\nfit_iid._vcov - stats.vcov(fit_r_iid)\n```\n\n::: {.cell-output .cell-output-display execution_count=28}\n```\narray([[ 1.28680222e-08, -6.98422811e-10],\n       [-6.98422811e-10,  1.81058144e-09]])\n```\n:::\n:::\n\n\n::: {#a8a13d62 .cell execution_count=29}\n``` {.python .cell-code}\nfit_hetero._vcov - stats.vcov(fit_r_hetero)\n```\n\n::: {.cell-output .cell-output-display execution_count=29}\n```\narray([[ 2.32346186e-08, -7.86957614e-10],\n       [-7.86957614e-10,  3.27676461e-09]])\n```\n:::\n:::\n\n\n::: {#de26d956 .cell execution_count=30}\n``` {.python .cell-code}\nfit_crv._vcov - stats.vcov(fit_r_crv)\n```\n\n::: {.cell-output .cell-output-display execution_count=30}\n```\narray([[ 1.63391494e-08, -1.24691682e-10],\n       [-1.24691682e-10,  3.27723218e-09]])\n```\n:::\n:::\n\n\nWe conclude by comparing all estimation results via the `tidy` methods:\n\n::: {#742cbfdb .cell execution_count=31}\n``` {.python .cell-code}\nfit_iid.tidy()\n```\n\n::: {.cell-output .cell-output-display execution_count=31}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>X1</th>\n      <td>-0.006591</td>\n      <td>0.042068</td>\n      <td>-0.156678</td>\n      <td>0.875499</td>\n      <td>-0.089042</td>\n      <td>0.075860</td>\n    </tr>\n    <tr>\n      <th>X2</th>\n      <td>-0.014924</td>\n      <td>0.011347</td>\n      <td>-1.315197</td>\n      <td>0.188444</td>\n      <td>-0.037164</td>\n      <td>0.007316</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#87ef5ef3 .cell execution_count=32}\n``` {.python .cell-code}\npd.DataFrame(broom.tidy_fixest(fit_r_iid)).T\n```\n\n::: {.cell-output .cell-output-display execution_count=32}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>X1</td>\n      <td>-0.006591</td>\n      <td>0.042068</td>\n      <td>-0.156679</td>\n      <td>0.875498</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>X2</td>\n      <td>-0.014924</td>\n      <td>0.011347</td>\n      <td>-1.315207</td>\n      <td>0.18844</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#650bbd6a .cell execution_count=33}\n``` {.python .cell-code}\nfit_hetero.tidy()\n```\n\n::: {.cell-output .cell-output-display execution_count=33}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>X1</th>\n      <td>-0.006591</td>\n      <td>0.040403</td>\n      <td>-0.163133</td>\n      <td>0.870413</td>\n      <td>-0.085780</td>\n      <td>0.072598</td>\n    </tr>\n    <tr>\n      <th>X2</th>\n      <td>-0.014924</td>\n      <td>0.010839</td>\n      <td>-1.376894</td>\n      <td>0.168545</td>\n      <td>-0.036168</td>\n      <td>0.006320</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#084ef66e .cell execution_count=34}\n``` {.python .cell-code}\npd.DataFrame(broom.tidy_fixest(fit_r_hetero)).T\n```\n\n::: {.cell-output .cell-output-display execution_count=34}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>X1</td>\n      <td>-0.006591</td>\n      <td>0.040403</td>\n      <td>-0.163134</td>\n      <td>0.870413</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>X2</td>\n      <td>-0.014924</td>\n      <td>0.010839</td>\n      <td>-1.376913</td>\n      <td>0.168539</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#8d2513a9 .cell execution_count=35}\n``` {.python .cell-code}\nfit_crv.tidy()\n```\n\n::: {.cell-output .cell-output-display execution_count=35}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>X1</th>\n      <td>-0.006591</td>\n      <td>0.035300</td>\n      <td>-0.186718</td>\n      <td>0.851882</td>\n      <td>-0.075777</td>\n      <td>0.062595</td>\n    </tr>\n    <tr>\n      <th>X2</th>\n      <td>-0.014924</td>\n      <td>0.010467</td>\n      <td>-1.425826</td>\n      <td>0.153919</td>\n      <td>-0.035439</td>\n      <td>0.005591</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#bf89ec5e .cell execution_count=36}\n``` {.python .cell-code}\npd.DataFrame(broom.tidy_fixest(fit_r_crv)).T\n```\n\n::: {.cell-output .cell-output-display execution_count=36}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>X1</td>\n      <td>-0.006591</td>\n      <td>0.035299</td>\n      <td>-0.186719</td>\n      <td>0.851881</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>X2</td>\n      <td>-0.014924</td>\n      <td>0.010467</td>\n      <td>-1.425847</td>\n      <td>0.153913</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "compare-fixest-pyfixest_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}