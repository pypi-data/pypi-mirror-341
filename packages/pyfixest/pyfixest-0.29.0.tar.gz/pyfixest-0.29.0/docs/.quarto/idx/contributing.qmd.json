{"title":"Contributing","markdown":{"yaml":{"title":"Contributing","toc":true,"toc-title":"On this page","toc-location":"left"},"headingText":"Overview","containsRefs":false,"markdown":"\n\n\nThanks for showing interest in contributing to `pyfixest`! We appreciate all\ncontributions and constructive feedback, whether that be reporting bugs, requesting\nnew features, or suggesting improvements to documentation.\n\nIf you'd like to get involved, but are not yet sure how, please feel free to send us an [email](alexander-fischer1801@t-online.de). Some familiarity with\neither Python or econometrics will help, but you really don't need to be a `numpy` core developer or have published in [Econometrica](https://onlinelibrary.wiley.com/journal/14680262) =) We'd be more than happy to invest time to help you get started!\n\n## Reporting bugs\n\nWe use [GitHub issues](https://github.com/py-econometrics/pyfixest/issues) to track bugs. You can report a bug by opening a new issue or contribute to an existing issue if\nrelated to the bug you are reporting.\n\nBefore creating a bug report, please check that your bug has not already been reported, and that your bug exists on the latest version of pyfixest. If you find a closed issue that seems to report the same bug you're experiencing, open a new issue and include a link to the original issue in your issue description.\n\nPlease include as many details as possible in your bug report. The information helps the maintainers resolve the issue faster.\n\n## Suggesting enhancements\n\nWe use [GitHub issues](https://github.com/py-econometrics/pyfixest/issues?q=is%3Aissue+is%3Aopen+label%3Aenhancement) to track bugs and suggested enhancements. You can suggest an enhancement by opening a new feature request. Before creating an enhancement suggestion, please check that a similar issue does not already exist.\n\nPlease describe the behavior you want and why, and provide examples of how pyfixest would be used if your feature were added.\n\n## Contributing to the codebase\n\n### Setting up your local environment\n\nWould you like to contribute to pyfixest, or run some of the unit tests locally? Awesome!\nHere's how you can get started:\n\nFirst, you'll want to fork the pyfixest GitHub repository. Then, clone your forked repo with git:\n\n```{.bash .code-copy}\ngit clone https://github.com/<username>/pyfixest.git\ncd pyfixest\n```\n\nTo work on pyfixest, you'll need Python and R installed. If you're planning to work on the documentation, be sure to have Quarto installed as well.\nNote: an R installation is only needed if you plan to run the unit tests locally.\n\nFor guidance on installing R and Python, check out the sections below.\n\n### Package Management via `pixi`\n\n\n`PyFixest` is using [pixi](https://pixi.sh/latest/).\n\nTo install `pixi`, just follow the [installation instructions](https://pixi.sh/latest/#installation) from the `pixi` documentation.\n\nOnce `pixi` is installed, you can initialize the project environment and install all dependencies with\n\n```{.bash .code-copy}\ncd path-to-pyfixest\npixi install\n```\n\nAfter installation, you can activate a custom `pixi` environment for `pyfixest` by typing:\n\n```{.bash .code-copy}\npixi shell\n```\n\nYou'll now be in the `pixi` environment and ready to go!\n\nFor most development tasks, it’s best to activate the development environment since it includes all the necessary dependencies for development.\n\n```{.bash .code-copy}\npixi shell --environment dev    # open the dev environment\n```\n\n### `Pixi` tasks\n\nTo help with development, we've included several handy pixi tasks.\n\nFor example, we use `ruff` and `pre-commit` to ensure code consistency across the project.\n\nTo install the required hooks, simply run\n\n```{.bash .code-copy}\npixi run lint\n```\n\nand you're ready to go! After installation, the task will run all linting rules via `ruff`.\n\nWe’ve included other tasks to help install the necessary R packages for running unit tests or to run different sets of tests:\n```{.bash .code-copy}\n# install all R development dependencies\npixi run install-r\n# run all tests via pytest\npixi run tests\n# run all tests excluding very computationally demanding tests\npixi run tests-regular\n# rerun failed tests\npixi run tests-rerun\n```\n\nBuilding the documentation is also straightforward. We’ve got tasks to build, render, and preview the docs:\n\n```{.bash .code-copy}\n# Build documentation and website\npixi run docs-build\n# render the docs\npixi run docs-render\n# preview the docs\npixi run docs-preview\n```\n\nKeep in mind that you’ll need quarto installed to build the documentation locally.\n\n## Installing Python, R and Quarto\n\n#### Installing Python\n\nThe minimal Python version to develop `pyfixest` is `3.9`. You can installed it on Mac/Linux via [Hombrew](https://brew.sh/):\n\n```{.bash .code-copy}\nbrew install python@3.11 # specify the version of python you prefer\n```\n\nOn Windows via [Winget](https://winget.run/pkg/Python/Python.3.11):\n```{.bash .code-copy}\nwinget install -e --id Python.Python.3.11\n```\n\n### Installing R\n\nNote that installing R and the R packages listed below is only necessary if you want to test against R in your local installation.\nYou can also test against R by using github actions.\n\nOn Mac/Linux:\n```{.bash .code-copy}\nbrew install r\n```\n\nDepending on your local set up, you may need to install additional libraries, for\nexample:\n\n```{.bash .code-copy}\nsudo apt install gcc-11 cmake\n```\n\nOn Windows using [Winget](https://winget.run/pkg/RProject/R):\n\n```{.bash .code-copy}\nwinget install -e --id RProject.R\n```\n\n### Installing Quarto\n\nDocumentation for `pyfixest` is written, compiled, and published using Quarto.\n\nTo install Quarto, run:\n\nOn MacOS via [Homebrew](https://formulae.brew.sh/cask/quarto#default):\n\n```{.bash .code-copy}\nbrew install --cask quarto\n```\n\nOn Linux (Ubuntu using `gdebi`):\n\n```{.bash .code-copy}\nsudo curl -o quarto-linux-amd64.deb -L <https://github.com/quarto-dev/quarto-cli/releases/download/v${QUARTO_VERSION}/quarto-${QUARTO_VERSION}-linux-amd64.deb>\nsudo gdebi quarto-linux-amd64.deb\n```\n\nOn Windows:\n\n```{.bash .code-copy}\nscoop bucket add extras\nscoop install extras/quarto\n```\n","srcMarkdownNoYaml":"\n\n## Overview\n\nThanks for showing interest in contributing to `pyfixest`! We appreciate all\ncontributions and constructive feedback, whether that be reporting bugs, requesting\nnew features, or suggesting improvements to documentation.\n\nIf you'd like to get involved, but are not yet sure how, please feel free to send us an [email](alexander-fischer1801@t-online.de). Some familiarity with\neither Python or econometrics will help, but you really don't need to be a `numpy` core developer or have published in [Econometrica](https://onlinelibrary.wiley.com/journal/14680262) =) We'd be more than happy to invest time to help you get started!\n\n## Reporting bugs\n\nWe use [GitHub issues](https://github.com/py-econometrics/pyfixest/issues) to track bugs. You can report a bug by opening a new issue or contribute to an existing issue if\nrelated to the bug you are reporting.\n\nBefore creating a bug report, please check that your bug has not already been reported, and that your bug exists on the latest version of pyfixest. If you find a closed issue that seems to report the same bug you're experiencing, open a new issue and include a link to the original issue in your issue description.\n\nPlease include as many details as possible in your bug report. The information helps the maintainers resolve the issue faster.\n\n## Suggesting enhancements\n\nWe use [GitHub issues](https://github.com/py-econometrics/pyfixest/issues?q=is%3Aissue+is%3Aopen+label%3Aenhancement) to track bugs and suggested enhancements. You can suggest an enhancement by opening a new feature request. Before creating an enhancement suggestion, please check that a similar issue does not already exist.\n\nPlease describe the behavior you want and why, and provide examples of how pyfixest would be used if your feature were added.\n\n## Contributing to the codebase\n\n### Setting up your local environment\n\nWould you like to contribute to pyfixest, or run some of the unit tests locally? Awesome!\nHere's how you can get started:\n\nFirst, you'll want to fork the pyfixest GitHub repository. Then, clone your forked repo with git:\n\n```{.bash .code-copy}\ngit clone https://github.com/<username>/pyfixest.git\ncd pyfixest\n```\n\nTo work on pyfixest, you'll need Python and R installed. If you're planning to work on the documentation, be sure to have Quarto installed as well.\nNote: an R installation is only needed if you plan to run the unit tests locally.\n\nFor guidance on installing R and Python, check out the sections below.\n\n### Package Management via `pixi`\n\n\n`PyFixest` is using [pixi](https://pixi.sh/latest/).\n\nTo install `pixi`, just follow the [installation instructions](https://pixi.sh/latest/#installation) from the `pixi` documentation.\n\nOnce `pixi` is installed, you can initialize the project environment and install all dependencies with\n\n```{.bash .code-copy}\ncd path-to-pyfixest\npixi install\n```\n\nAfter installation, you can activate a custom `pixi` environment for `pyfixest` by typing:\n\n```{.bash .code-copy}\npixi shell\n```\n\nYou'll now be in the `pixi` environment and ready to go!\n\nFor most development tasks, it’s best to activate the development environment since it includes all the necessary dependencies for development.\n\n```{.bash .code-copy}\npixi shell --environment dev    # open the dev environment\n```\n\n### `Pixi` tasks\n\nTo help with development, we've included several handy pixi tasks.\n\nFor example, we use `ruff` and `pre-commit` to ensure code consistency across the project.\n\nTo install the required hooks, simply run\n\n```{.bash .code-copy}\npixi run lint\n```\n\nand you're ready to go! After installation, the task will run all linting rules via `ruff`.\n\nWe’ve included other tasks to help install the necessary R packages for running unit tests or to run different sets of tests:\n```{.bash .code-copy}\n# install all R development dependencies\npixi run install-r\n# run all tests via pytest\npixi run tests\n# run all tests excluding very computationally demanding tests\npixi run tests-regular\n# rerun failed tests\npixi run tests-rerun\n```\n\nBuilding the documentation is also straightforward. We’ve got tasks to build, render, and preview the docs:\n\n```{.bash .code-copy}\n# Build documentation and website\npixi run docs-build\n# render the docs\npixi run docs-render\n# preview the docs\npixi run docs-preview\n```\n\nKeep in mind that you’ll need quarto installed to build the documentation locally.\n\n## Installing Python, R and Quarto\n\n#### Installing Python\n\nThe minimal Python version to develop `pyfixest` is `3.9`. You can installed it on Mac/Linux via [Hombrew](https://brew.sh/):\n\n```{.bash .code-copy}\nbrew install python@3.11 # specify the version of python you prefer\n```\n\nOn Windows via [Winget](https://winget.run/pkg/Python/Python.3.11):\n```{.bash .code-copy}\nwinget install -e --id Python.Python.3.11\n```\n\n### Installing R\n\nNote that installing R and the R packages listed below is only necessary if you want to test against R in your local installation.\nYou can also test against R by using github actions.\n\nOn Mac/Linux:\n```{.bash .code-copy}\nbrew install r\n```\n\nDepending on your local set up, you may need to install additional libraries, for\nexample:\n\n```{.bash .code-copy}\nsudo apt install gcc-11 cmake\n```\n\nOn Windows using [Winget](https://winget.run/pkg/RProject/R):\n\n```{.bash .code-copy}\nwinget install -e --id RProject.R\n```\n\n### Installing Quarto\n\nDocumentation for `pyfixest` is written, compiled, and published using Quarto.\n\nTo install Quarto, run:\n\nOn MacOS via [Homebrew](https://formulae.brew.sh/cask/quarto#default):\n\n```{.bash .code-copy}\nbrew install --cask quarto\n```\n\nOn Linux (Ubuntu using `gdebi`):\n\n```{.bash .code-copy}\nsudo curl -o quarto-linux-amd64.deb -L <https://github.com/quarto-dev/quarto-cli/releases/download/v${QUARTO_VERSION}/quarto-${QUARTO_VERSION}-linux-amd64.deb>\nsudo gdebi quarto-linux-amd64.deb\n```\n\nOn Windows:\n\n```{.bash .code-copy}\nscoop bucket add extras\nscoop install extras/quarto\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"python":"/pyfixest/.pixi/envs/docs/Scripts/python.exe","engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"contributing.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.32","quartodoc":{"package":"pyfixest","title":"PyFixest Function Reference","parser":"numpy","rewrite_all_pages":false,"sidebar":"_sidebar.yml","sections":[{"title":"Estimation Functions","desc":"User facing estimation functions\n","contents":["estimation.estimation.feols","estimation.estimation.fepois","estimation.estimation.feglm","did.estimation.did2s","did.estimation.lpdid","did.estimation.event_study","estimation.bonferroni","estimation.rwolf"]},{"title":"Estimation Classes","desc":"Details on Methods and Attributes\n","contents":["estimation.feols_.Feols","estimation.fepois_.Fepois","estimation.feiv_.Feiv","estimation.feglm_.Feglm","estimation.felogit_.Felogit","estimation.feprobit_.Feprobit","estimation.fegaussian_.Fegaussian","estimation.feols_compressed_.FeolsCompressed"]},{"title":"Summarize and Visualize","desc":"Post-Processing of Estimation Results\n","contents":["did.visualize.panelview","report.summary","report.etable","report.dtable","report.coefplot","report.iplot","did.visualize.panelview"]},{"title":"Misc / Utilities","desc":"PyFixest internals and utilities\n","contents":["estimation.demean","estimation.detect_singletons","estimation.model_matrix_fixest"]}]},"title":"Contributing","toc-title":"On this page","toc-location":"left"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}