import{d as _,a as b}from"./disclose-version.KQatKnwM.js";import"./legacy.D--LHvfs.js";import{f as g}from"./index-client.BSaxjCgd.js";import{s as k}from"./index.DsSMAhLM.js";import{l as j,s as y}from"./props.CH69RCtx.js";import{I as h,b as w,s as S,c as R,d as T}from"./index.vKWVQZ4k.js";import{w as $,g as v}from"./index.CiLSiJZW.js";import{g as m}from"./entry.D4m5IXZ4.js";function z(s,t){const a=j(t,["children","$$slots","$$events","$$legacy"]);h(s,y({name:"chevron-right"},()=>a,{iconNode:[["path",{d:"m9 18 6-6-6-6"}]],children:(o,c)=>{var n=_(),i=g(n);k(i,t,"default",{},null),b(o,n)},$$slots:{default:!0}}))}function G(s,t){const a=j(t,["children","$$slots","$$events","$$legacy"]);h(s,y({name:"play"},()=>a,{iconNode:[["polygon",{points:"6 3 20 12 6 21 6 3"}]],children:(o,c)=>{var n=_(),i=g(n);k(i,t,"default",{},null),b(o,n)},$$slots:{default:!0}}))}const u=$(null),p=$({currentJob:null,jobStatus:null,jobDetails:null,taskStatusCounts:{},startTime:null});async function D(s,t,a){var o,c,n,i;let r="started";for(;!["completed","failed","not_found"].includes(r);){await new Promise(e=>setTimeout(e,1e3));try{const e=await w(s,t);r=e.status;let d={};if(e.task_status_map&&Object.keys(e.task_status_map).length>0&&(d=Object.values(e.task_status_map).reduce((l,f)=>(l[f]=(l[f]||0)+1,l),{})),(((o=e.details)==null?void 0:o.status)==="failed"||(c=e.details)!=null&&c.error)&&(r="failed",e.error=e.details.error),p.update(l=>({currentJob:t,jobStatus:r,jobDetails:e,taskStatusCounts:d,startTime:l.startTime})),r==="completed"&&!((n=e.details)!=null&&n.error))await a();else if(r==="failed"||(i=e.details)!=null&&i.error)break}catch(e){console.error("Error polling job status:",e),p.update(d=>({currentJob:t,jobStatus:"failed",jobDetails:{project_id:s,job_id:t,status:"failed",total_tasks:1,current_task:1,task_status_map:{},error:e instanceof Error?e.message:"Unknown error occurred"},taskStatusCounts:{},startTime:d.startTime}));break}}}async function O(s,t){u.set({type:"experiment",projectId:s}),m("/")}async function q(s,t,a){u.set({type:"task",projectId:s,challengeId:t}),m("/")}async function A(s,t,a){u.set({type:"group",projectId:s,groupId:t}),m("/")}async function B(s){const t=v(u);if(t)try{let a;if(t.type==="experiment")a=await S(t.projectId);else if(t.type==="task")a=await R(t.projectId,t.challengeId);else if(t.type==="group")a=await T(t.projectId,t.groupId);else throw new Error("Unknown run type");const r=a.job_id;p.update(o=>({...o,currentJob:r,jobStatus:"started",jobDetails:null,taskStatusCounts:{},startTime:new Date})),await D(t.projectId,r,s)}catch(a){console.error("Error executing pending run:",a),p.set({currentJob:null,jobStatus:"failed",jobDetails:{project_id:t.projectId,job_id:"",status:"failed",total_tasks:1,current_task:1,task_status_map:{},error:a instanceof Error?a.message:"Unknown error occurred"},taskStatusCounts:{},startTime:new Date})}finally{u.set(null)}}export{z as C,G as P,O as a,A as b,u as c,B as e,q as h,p as j,D as p};
