name: build and get measurement
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group:
    ${{ github.workflow }}-${{ github.ref_name }}-${{
    github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  attestable_build:
    runs-on: [self-hosted, gramine]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          tags: attestable-mcp-server:latest
          cache-from: type=gha,scope=attestable-mcp-server
          cache-to: type=gha,mode=min,scope=attestable-mcp-server
          outputs: type=docker,dest=/tmp/attestable-mcp-server.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: attestable-mcp-server
          path: /tmp/attestable-mcp-server.tar
  test:
    name: "test attestable-mcp-server docker"
    runs-on: [self-hosted, gramine]
    needs: attestable_build
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: attestable-mcp-server
          path: /tmp

  
      - name: Load images
        run: |
          docker load --input /tmp/attestable-mcp-server.tar
          docker image ls -a

      - name: Test command line
        run: |
          chmod +x ./run.sh 
          ./run.sh attestable-mcp-server
          
      - name: Test attestable-mcp-server
        run: docker run -itd --privileged --rm --net host -v /dev/sgx_enclave:/dev/sgx/enclave -v /dev/sgx_provision:/dev/sgx/provision -v /var/run/aesmd:/var/run/aesmd attestable-mcp-server:latest
