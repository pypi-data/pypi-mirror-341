# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .question_type import QuestionType
import typing
from .answer import Answer
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Question(UniversalBaseModel):
    id: int
    required: bool
    code: str
    value: str
    type: QuestionType
    sequence: int
    answers: typing.List[Answer]
    constraint: typing.Optional[str] = None
    default: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
