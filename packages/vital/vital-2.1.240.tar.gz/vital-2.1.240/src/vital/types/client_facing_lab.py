# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .lab_test_collection_method import LabTestCollectionMethod
from .lab_test_sample_type import LabTestSampleType
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ClientFacingLab(UniversalBaseModel):
    id: int
    slug: str
    name: str
    first_line_address: str
    city: str
    zipcode: str
    collection_methods: typing.List[LabTestCollectionMethod]
    sample_types: typing.List[LabTestSampleType]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
