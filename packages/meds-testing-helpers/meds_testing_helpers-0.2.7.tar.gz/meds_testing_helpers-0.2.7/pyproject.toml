[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "meds_testing_helpers"
dynamic = ["version"]
authors = [
  { name="Matthew McDermott", email="mattmcdermott8@gmail.com" },
]
description = "Builds sample MEDS datasets for testing."
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Framework :: Pytest",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
  "annotated-types", "numpy", "hydra-core", "polars", "pytest", "meds==0.3.3", "pyarrow", "pytimeparse"
]

[project.optional-dependencies]
dev = ["pre-commit<4", "ruff"]
tests = ["pytest-cov"]
docs = [
  "mkdocs==1.6.1", "mkdocs-material==9.6.7", "mkdocstrings[python,shell]==0.28.2", "mkdocs-gen-files==0.5.0",
  "mkdocs-literate-nav==0.6.1", "mkdocs-section-index==0.3.9", "mkdocs-git-authors-plugin==0.9.2",
  "mkdocs-git-revision-date-localized-plugin==1.3.0"
]

[tool.setuptools_scm]

[project.scripts]
build_sample_MEDS_dataset = "meds_testing_helpers.dataset_generator:main"
infer_MEDS_sample_gen_config = "meds_testing_helpers.infer_dataset_config:main"

[project.urls]
Homepage = "https://meds-testing-helpers.readthedocs.io/en/latest/"
Issues = "https://github.com/Medical-Event-Data-Standard/meds_testing_helpers/issues"

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--doctest-modules",
  "--ignore=docs",
]
doctest_optionflags = ["NORMALIZE_WHITESPACE", "ELLIPSIS"]

[project.entry-points.pytest11]
meds_testing_helpers = "meds_testing_helpers.pytest_plugin"

[tool.ruff]
target-version = "py310"
line-length = 110
extend-exclude = ["docs/index.md"]

# Enable linters
[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "N",   # pep8-naming
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Unused imports in __init__ files
"test_*.py" = ["B018"] # Expressions can be called to test side effects.

[tool.ruff.lint.pep8-naming]
extend-ignore-names = ["*MEDS*", "is_*", "X", "_X", "N", "N_*", "G"]
