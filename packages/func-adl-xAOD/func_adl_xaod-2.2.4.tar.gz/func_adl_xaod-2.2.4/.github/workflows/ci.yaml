name: CI/CD

on:
  push:
    branches:
      - master  # Only run on push to master
  pull_request:  # Run on all pull requests
  # Run daily at 0:01 UTC
  schedule:
    - cron: "1 0 * * 0"

jobs:
  flake8:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --no-cache-dir -e .[test]
          pip list
      - name: Lint with Flake8
        run: |
          flake8 --ignore=E501,W503  --exclude=func_adl_xAOD/template

  test-no-docker:
    strategy:
      matrix:
        platform: [ubuntu-latest, macOS-latest, windows-latest]
        python-version: ["3.11"]
    runs-on: ${{ matrix.platform }}
    needs: flake8

    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --no-cache-dir -e .[test]
          pip list
      - name: Test with pytest
        run: |
          python -m pytest

  test-with-docker:
    strategy:
      matrix:
        platform: [ubuntu-latest, macOS-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: ${{ matrix.platform }}
    needs: flake8

    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install git+https://github.com/iris-hep/ast-language.git@e6470deb68529e1885a4bc46f781e2fe43a6f4c8
          pip install --no-cache-dir -e .[test,local]
          pip list
      - name: Install Docker on macOS
        if: matrix.platform == 'macOS-latest'
        run: brew install docker
      - name: Test with pytest
        run: |
          python -m pytest
          # These now take too long, and macOS and Windows both don't have docker installed
          # or installed correctly.
          # python -m pytest -m "atlas_xaod_runner or atlas_r22_xaod_runner or cms_aod_runner or cms_miniaod_runner"
      - name: Report coverage with Codecov
        if: github.event_name == 'push' && matrix.python-version == 3.9 && matrix.platform == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
