name: Publish Python üêç distribution üì¶ to PyPI and TestPyPI

on:
  push:
    tags:
    - v*
    branches:
    - main
    # paths-ignore:
    # - .github/**
    # - ./**/*.md
  pull_request:
    branches:
    - main

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    outputs:
        package_name: ${{ steps.build_artifacts.outputs.package_name }}
        package_version: ${{ steps.build_artifacts.outputs.package_version }}

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-tags: true
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: >-
        python3 -m pip install build hatchling hatch-vcs --user
    - name: Build a binary wheel and a source tarball
      id: build_artifacts
      run: |
        python3 -m build
        package_name=$(hatchling metadata name)
        package_version=$(hatchling version)
        echo "package_name=$package_name" >> $GITHUB_OUTPUT
        echo "package_version=$package_version" >> $GITHUB_OUTPUT
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python üêç distribution üì¶ to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/${{ needs.build.outputs.package_name }}
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the Python üêç distribution üì¶ with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Delete the stub of Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release delete
        "$GITHUB_REF_NAME"
        --repo "$GITHUB_REPOSITORY"
        --cleanup-tag
        --yes
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        gh release create "$GITHUB_REF_NAME" \
          --title "Release $GITHUB_REF_NAME" \
          --generate-notes \
          --latest \
          --repo "$GITHUB_REPOSITORY"
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        "$GITHUB_REF_NAME" dist/**
        --repo "$GITHUB_REPOSITORY"

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    # we only publish to TestPyPI on merge to main
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/${{ needs.build.outputs.package_name }}

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
        verbose: true