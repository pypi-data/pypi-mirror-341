# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile
# Use a Python image with uv pre-installed
FROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv

# Install the project into /app
WORKDIR /app

# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1

# Copy from the cache instead of linking since it's a mounted volume
ENV UV_LINK_MODE=copy

# Install the project's dependencies using the lockfile and settings
RUN --mount=type=cache,target=/root/.cache/uv     --mount=type=bind,source=uv.lock,target=uv.lock     --mount=type=bind,source=pyproject.toml,target=pyproject.toml     uv sync --frozen --no-install-project --no-dev --no-editable

# Then, add the rest of the project source code and install it
# Installing separately from its dependencies allows optimal layer caching
ADD . /app
RUN --mount=type=cache,target=/root/.cache/uv     uv sync --frozen --no-dev --no-editable

FROM python:3.12-slim-bookworm

# Create non-root user for security
RUN useradd --create-home app \
    && mkdir -p /app \
    && chown app:app /app

WORKDIR /app
 
COPY --from=uv /app/.venv /app/.venv
RUN chown -R app:app /app/.venv

USER app

# Place executables in the environment at the front of the path
ENV PATH="/app/.venv/bin:$PATH"

# Environment variables for Ghost CMS connection
ENV GHOST_API_URL=<YOUR_GHOST_API_URL>
ENV GHOST_STAFF_API_KEY=<YOUR_STAFF_API_KEY>

# when running the container, add --db-path and a bind mount to the host's db file
ENTRYPOINT ["uv", "--directory", "/app", "run", "src/main.py"]
