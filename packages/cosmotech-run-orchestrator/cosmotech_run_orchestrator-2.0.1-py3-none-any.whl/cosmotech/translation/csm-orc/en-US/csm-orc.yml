# Logging messages for the Cosmotech Orchestrator

logs:
  # Step related messages
  step:
    already_ready: "{step_id} already ready"
    template_not_found: "{step_id} asks for a non existing template {command_id}"
    loading_template: "{step_id} loads template {command_id}"
    starting: "Starting {step_type} {step_id}"
    skipping_previous_errors: "Skipping {step_type} {step_id} due to previous errors"
    skipping_as_required: "Skipping {step_type} {step_id} as required"
    running_command: "Running:{command}"
    error_during: "Error during {step_type} {step_id}"
    done_running: "Done running {step_type} {step_id}"
    command_required: "A step requires either a command or a commandId"
    template_unavailable: "Command Template {command_id} is not available"
    input:
      default_value: "Step {step_id}: Using default value for input '{input}': {value}"
      default_value_hidden: "Step {step_id}: Using default value for hidden input '{input}'"
      missing_required: "Step {step_id}: Missing required input '{input}'"
    output:
      default_value: "Step {step_id}: Using default value for output '{output}': {value}"
      default_value_hidden: "Step {step_id}: Using default value for hidden output '{output}'"
      captured_values_header: "Step {step_id}: Captured output values:"
      captured_value: "  - {output}: {value}"
      captured_hidden: "  - {output}: [hidden value]"
      missing_value: "Step {step_id}: Missing required output '{output}'"
      missing_required: "Step {step_id}: Missing required outputs: {outputs}"
    info:
      header: "Step {id}"
      command: "Command: {command}"
      description_header: "Description:"
      environment_header: "Environment:"
      optional: "(Optional)"
      use_system_env: "- Use system environment variables"
      skipped: "- Skipped by user"
      status: "Status: {status}"
      simple_repr: "{id} ({status}): {description}"
      simple_repr_no_desc: "{id} ({status})"

  # Orchestrator messages
  orchestrator:
    loading_step: "Loading {id} of type Step"
    valid_file: "{file_path} is a valid orchestration file"
    step_already_defined: "Step {step_id} is already defined"
    step_not_exists: "Step {step_id} does not exists"
    dependencies:
      header: "Dependencies of {step_id}:"
      no_dependencies: "No dependencies for {step_id}"
      found: "Found {precedent}"
    data_flow:
      connecting: "Connecting data flow from {from_step}:{from_output} to {to_step}:{to_input}"
      connecting_hidden: "Connecting hidden data flow from {from_step}:{from_output} to {to_step}:{to_input}"
    environment:
      defined: "Environment variable defined for {file_name}"
      variable: "{key}{description}"
      missing: "Missing environment values for step {step_id}"
      missing_value: "{key}: {value}"

  # Library messages
  library:
    content: "Library content:"
    templates_from: "Templates from '{plugin_name}':"
    template_overriden: "- '{template_id}': OVERRIDEN"
    template_info: "{template}"
    template_desc: "- '{id}'{description}"
    template_invalid: "{template_id} is not a valid template id"
    plugin:
      loading: "Loading plugin {name}"
      loaded_templates: "Loaded {count} templates from plugin files"
      template_count: "Plugin contains {count} templates"
    reloading: "Reloading template library"
    loading: "Loading template library"

  # Entry point messages
  entrypoint:
    context: "Setting context from project.csm"
    simulation:
      info: "Simulation: {simulation}"
      probes_topic: "Probes measures topic: {topic}"
      no_probes_topic: "No probes measures topic"
      control_topic: "Control plane topic: {topic}. Simulator binary is able to handle CSM_CONTROL_PLANE_TOPIC directly so it is not transformed as an argument."
      no_control_topic: "No Control plane topic"
      args: "Simulator arguments: {args}"
      no_template: "No run template id defined in environment variable \"CSM_RUN_TEMPLATE_ID\" running direct simulator mode"
    start: "Csm-orc Entry Point"

  # Templates listing
  templates:
    template_info: "{template}"
    template_desc: "- '{id}'{description}"
    no_templates: "There is no available template to display"
    template_invalid: "{template_id} is not a valid template id"

  # Run messages
  run:
    starting: "Starting run orchestrator version {version}"
    sections:
      run: "===      Run     ==="
      results: "===     Results    ==="
      exit_handlers: "===   Exit Handlers   ==="
    writing_env: "Writing environment file \"{target}\""

  # Documentation
  docs:
    open_failed: "Failed to open: {url}"
    opened: "Opened {url} in your navigator"

  # Error messages
  errors:
    missing_library: "You need to install the library `cosmotech-run-orchestrator` in your container. Check if you set it in your requirements.txt."
    no_run_json: "No \"run.json\" defined for the run template {template_id}"
    missing_env_vars: "Missing environment variables, check the logs"
