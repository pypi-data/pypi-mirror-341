from enum import Enum
from typing import Union


class ClassifierName(str, Enum):
    """All classifier names in use throughout MetaML."""

    adagrad_classifier = "adagrad_classifier"
    base_reduction_stacking_classifier = "base_reduction_stacking_classifier"
    catboost_classifier = "catboost_classifier"
    cd_classifier = "cd_classifier"
    decision_tree_classifier = "decision_tree_classifier"
    extra_trees_classifier = "extra_trees_classifier"
    feature_reduction_stacking_classifier = "feature_reduction_stacking_classifier"
    fista_classifier = "fista_classifier"
    gaussian_naivebayes_classifier = "gaussian_naivebayes_classifier"
    gaussian_process_classifier = "gaussian_process_classifier"
    gradient_boosting_classifier = "gradient_boosting_classifier"
    hist_gradient_boosting_classifier = "hist_gradient_boosting_classifier"
    intelex_logistic_regression_classifier = "intelex_logistic_regression_classifier"
    intelex_random_forest_classifier = "intelex_random_forest_classifier"
    intelex_svm_classifier = "intelex_svm_classifier"
    lightgbm_classifier = "lightgbm_classifier"
    linear_discriminant_analysis_classifier = "linear_discriminant_analysis_classifier"
    linearsvc_classifier = "linearsvc_classifier"
    logistic_regression_classifier = "logistic_regression_classifier"
    nearest_centroid_classifier = "nearest_centroid_classifier"
    nlp_sequence_classifier = "nlp_sequence_classifier"
    passive_aggressive_classifier = "passive_aggressive_classifier"
    perceptron_classifier = "perceptron_classifier"
    prior_dummy_classifier = "prior_dummy_classifier"
    quadratic_discriminant_analysis_classifier = "quadratic_discriminant_analysis_classifier"
    random_forest_classifier = "random_forest_classifier"
    saga_classifier = "saga_classifier"
    sdca_classifier = "sdca_classifier"
    sgd_classifier = "sgd_classifier"
    stacking_classifier = "stacking_classifier"
    stratified_dummy_classifier = "stratified_dummy_classifier"
    svm_classifier = "svm_classifier"
    svrg_classifier = "svrg_classifier"
    uniform_dummy_classifier = "uniform_dummy_classifier"
    xgboost_classifier = "xgboost_classifier"


class RegressorName(str, Enum):
    """All regressor names in use throughout MetaML."""

    ard_regressor = "ard_regressor"
    bayesian_ridge_regressor = "bayesian_ridge_regressor"
    catboost_regressor = "catboost_regressor"
    cd_regressor = "cd_regressor"
    decision_tree_regressor = "decision_tree_regressor"
    elastic_net_regressor = "elastic_net_regressor"
    feature_reduction_stacking_regressor = "feature_reduction_stacking_regressor"
    fista_regressor = "fista_regressor"
    gradient_boosting_regressor = "gradient_boosting_regressor"
    hist_gradient_boosting_regressor = "hist_gradient_boosting_regressor"
    huber_regressor = "huber_regressor"
    intelex_elastic_net_regressor = "intelex_elastic_net_regressor"
    intelex_linear_regressor = "intelex_linear_regressor"
    intelex_random_forest_regressor = "intelex_random_forest_regressor"
    intelex_svr_regressor = "intelex_svr_regressor"
    lasso_regressor = "lasso_regressor"
    linear_regressor = "linear_regressor"
    linearsvr_regressor = "linearsvr_regressor"
    lightgbm_regressor = "lightgbm_regressor"
    mean_dummy_regressor = "mean_dummy_regressor"
    median_dummy_regressor = "median_dummy_regressor"
    nlp_sequence_regressor = "nlp_sequence_regressor"
    passive_aggressive_regressor = "passive_aggressive_regressor"
    random_forest_regressor = "random_forest_regressor"
    ridge_regressor = "ridge_regressor"
    sgd_regressor = "sgd_regressor"
    stacking_regressor = "stacking_regressor"
    base_reduction_stacking_regressor = "base_reduction_stacking_regressor"
    svr_regressor = "svr_regressor"
    xgboost_regressor = "xgboost_regressor"


class ForecasterName(str, Enum):
    """All forecaster names in use throughout MetaML."""

    arima_forecaster = "arima_forecaster"
    auto_ets_forecaster = "auto_ets_forecaster"
    auto_arima_forecaster = "auto_arima_forecaster"
    linear_regression_forecaster = "linear_regression_forecaster"
    naive_drift_forecaster = "naive_drift_forecaster"
    naive_last_forecaster = "naive_last_forecaster"
    naive_mean_forecaster = "naive_mean_forecaster"
    nbeats_forecaster = "nbeats_forecaster"
    nixtla_arima_forecaster = "nixtla_arima_forecaster"
    nixtla_auto_arima_forecaster = "nixtla_auto_arima_forecaster"
    nixtla_auto_ces_forecaster = "nixtla_auto_ces_forecaster"
    nixtla_auto_ets_forecaster = "nixtla_auto_ets_forecaster"
    nixtla_auto_theta_forecaster = "nixtla_auto_theta_forecaster"
    nixtla_garch_forecaster = "nixtla_garch_forecaster"
    nixtla_historic_average_forecaster = "nixtla_historic_average_forecaster"
    nixtla_random_walk_with_drift_forecaster = "nixtla_random_walk_with_drift_forecaster"
    nixtla_seasonal_naive_forecaster = "nixtla_seasonal_naive_forecaster"
    nixtla_seasonal_window_average_forecaster = "nixtla_seasonal_window_average_forecaster"


ModelNameType = Union[ClassifierName, RegressorName, ForecasterName]
