name: Tests

on:
  push:
    branches:
      - "master"
      - "release-*"
  pull_request:
    branches:
      - "master"
      - "release-*"
  workflow_dispatch:

  schedule:
    - cron: "20 4 * * 2" # once a week

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  PIP_DISABLE_PIP_VERSION_CHECK: true

defaults:
  run:
    shell: bash

jobs:
  tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        include:
          - { os: ubuntu-latest, python: "pypy3.9" }
          - { os: ubuntu-latest, python: "pypy3.10" }

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: set PY_CACHE_KEY
        run: echo "PY_CACHE_KEY=$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')" >> $GITHUB_ENV

      - name: Cache .nox
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.nox/tests-${{ matrix.python }}
          key: "nox|${{ matrix.os }}|tests-${{ matrix.python }}|${{ env.PY_CACHE_KEY }}|${{ hashFiles('noxfile.py', 'setup.py', 'pyproject.toml') }}"

      - name: Install tools and print info
        run: |
          pip install -U pip uv nox
          pip --version
          uv --version
          nox --version

      - name: Test
        env:
          COLUMNS: "90" # better alignment (working around https://github.com/blueyed/pytest/issues/491).
          PY_COLORS: "1"
        run: |
          nox -v -s "tests-${{ matrix.python }}" -- --cov-report=xml

      - name: Report coverage
        uses: codecov/codecov-action@v3
        with:
          flags: ${{ runner.os }}
          name: ${{ matrix.python }}
          fail_ci_if_error: true

      - name: Build package
        run: nox -s build
