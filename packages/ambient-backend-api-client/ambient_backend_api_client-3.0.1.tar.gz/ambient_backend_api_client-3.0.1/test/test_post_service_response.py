# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ambient_backend_api_client.models.post_service_response import PostServiceResponse

class TestPostServiceResponse(unittest.TestCase):
    """PostServiceResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostServiceResponse:
        """Test PostServiceResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostServiceResponse`
        """
        model = PostServiceResponse()
        if include_optional:
            return PostServiceResponse(
                request_id = '',
                requested_ts = 'Wed May  8 19:55:26 2024',
                location_root = 'http://localhost:8001/requests/',
                refresh_interval = 56,
                service = ambient_backend_api_client.models.service.Service(
                    name = '', 
                    resource_type = null, 
                    identifier = '', 
                    owner_id = '', 
                    owner_type = 'individual', 
                    description = '', 
                    requests = [
                        ''
                        ], 
                    notifications = [
                        ''
                        ], 
                    image = '', 
                    replicas = 56, 
                    cluster_groups = [
                        ''
                        ], 
                    tags = [
                        ''
                        ], 
                    clusters = [
                        ''
                        ], 
                    ports = [
                        ''
                        ], 
                    compose_location = '', 
                    state = null, 
                    status = 'active', )
            )
        else:
            return PostServiceResponse(
                request_id = '',
                service = ambient_backend_api_client.models.service.Service(
                    name = '', 
                    resource_type = null, 
                    identifier = '', 
                    owner_id = '', 
                    owner_type = 'individual', 
                    description = '', 
                    requests = [
                        ''
                        ], 
                    notifications = [
                        ''
                        ], 
                    image = '', 
                    replicas = 56, 
                    cluster_groups = [
                        ''
                        ], 
                    tags = [
                        ''
                        ], 
                    clusters = [
                        ''
                        ], 
                    ports = [
                        ''
                        ], 
                    compose_location = '', 
                    state = null, 
                    status = 'active', ),
        )
        """

    def testPostServiceResponse(self):
        """Test PostServiceResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
