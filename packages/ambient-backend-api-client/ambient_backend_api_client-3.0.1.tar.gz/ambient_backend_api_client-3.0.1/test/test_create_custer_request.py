# coding: utf-8

"""
    Ambient API

     This API provides access to Ambient services. It is designed to be used by Ambient applications and services. 

    The version of the OpenAPI document: 0.8.2
    Contact: jose@ambientlabscomputing.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ambient_backend_api_client.models.create_custer_request import CreateCusterRequest

class TestCreateCusterRequest(unittest.TestCase):
    """CreateCusterRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateCusterRequest:
        """Test CreateCusterRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateCusterRequest`
        """
        model = CreateCusterRequest()
        if include_optional:
            return CreateCusterRequest(
                cluster_data = ambient_backend_api_client.models.cluster_create.ClusterCreate(
                    id = 56, 
                    name = '', 
                    resource_type = null, 
                    description = '', 
                    org_id = 56, 
                    user_id = 56, 
                    tags = [
                        ''
                        ], ),
                node_ids = [
                    56
                    ]
            )
        else:
            return CreateCusterRequest(
                cluster_data = ambient_backend_api_client.models.cluster_create.ClusterCreate(
                    id = 56, 
                    name = '', 
                    resource_type = null, 
                    description = '', 
                    org_id = 56, 
                    user_id = 56, 
                    tags = [
                        ''
                        ], ),
        )
        """

    def testCreateCusterRequest(self):
        """Test CreateCusterRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
