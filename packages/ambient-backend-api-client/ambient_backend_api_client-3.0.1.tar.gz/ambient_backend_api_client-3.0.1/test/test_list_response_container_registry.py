# coding: utf-8

"""
    Ambient API

     This API provides access to Ambient services. It is designed to be used by Ambient applications and services. 

    The version of the OpenAPI document: 0.8.2
    Contact: jose@ambientlabscomputing.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ambient_backend_api_client.models.list_response_container_registry import ListResponseContainerRegistry

class TestListResponseContainerRegistry(unittest.TestCase):
    """ListResponseContainerRegistry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListResponseContainerRegistry:
        """Test ListResponseContainerRegistry
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListResponseContainerRegistry`
        """
        model = ListResponseContainerRegistry()
        if include_optional:
            return ListResponseContainerRegistry(
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                count = 56,
                results = [
                    ambient_backend_api_client.models.container_registry.ContainerRegistry(
                        id = 56, 
                        name = '', 
                        resource_type = null, 
                        description = '', 
                        org_id = 56, 
                        user_id = 56, 
                        url = '', 
                        registry_type = 'ambient_registry', )
                    ]
            )
        else:
            return ListResponseContainerRegistry(
                results = [
                    ambient_backend_api_client.models.container_registry.ContainerRegistry(
                        id = 56, 
                        name = '', 
                        resource_type = null, 
                        description = '', 
                        org_id = 56, 
                        user_id = 56, 
                        url = '', 
                        registry_type = 'ambient_registry', )
                    ],
        )
        """

    def testListResponseContainerRegistry(self):
        """Test ListResponseContainerRegistry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
