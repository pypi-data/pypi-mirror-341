# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ambient_backend_api_client.models.node import Node

class TestNode(unittest.TestCase):
    """Node unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Node:
        """Test Node
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Node`
        """
        model = Node()
        if include_optional:
            return Node(
                name = '',
                resource_type = 'cluster',
                identifier = '',
                owner_id = '',
                owner_type = 'individual',
                description = '',
                requests = [
                    ''
                    ],
                notifications = [
                    ''
                    ],
                role = 'manager',
                architecture = 'arm64',
                interfaces = [
                    ambient_backend_api_client.models.network_interface.NetworkInterface(
                        type = 'ethernet', 
                        name = '', 
                        ipv4_address = '', 
                        ipv6_address = '', 
                        mac_address = '', 
                        netmask = '', 
                        gateway = '', 
                        broadcast = '', )
                    ],
                last_seen = '',
                status = 'pending',
                cluster = '',
                authorization = ambient_backend_api_client.models.auth0_device_code_response.Auth0DeviceCodeResponse(
                    device_code = '', 
                    user_code = '', 
                    verification_uri = '', 
                    verification_uri_complete = '', 
                    expires_in = 56, 
                    interval = 56, )
            )
        else:
            return Node(
                name = '',
                identifier = '',
                role = 'manager',
                architecture = 'arm64',
                status = 'pending',
        )
        """

    def testNode(self):
        """Test Node"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
