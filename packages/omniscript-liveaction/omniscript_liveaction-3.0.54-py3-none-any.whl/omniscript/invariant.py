"""invariant / constants.
"""
# Copyright (c) LiveAction, Inc. 2022. All rights reserved.
# Copyright (c) Savvius, Inc. 2013-2019. All rights reserved.
# Copyright (c) WildPackets, Inc. 2013-2014. All rights reserved.

from enum import Enum, EnumMeta, IntEnum, auto, unique


# Allows for 'value in Enum' test.
class OmniEnumMeta(EnumMeta):
    def __contains__(cls, item):
        return isinstance(item, cls) or item in [v.value for v in cls.__members__.values()]


@unique
class AdapterType(IntEnum, metaclass=OmniEnumMeta):
    """Adapter Types"""
    UNKNOWN = 0
    NIC = 1
    FILE = 2
    PLUGIN = 3
    REMOTE = 4


"""Authentication Values"""
AUTH_DEFAULT = "Defualt"
AUTH_THIRD_PARTY = "Thrid Party"
AUTH = [AUTH_DEFAULT, AUTH_THIRD_PARTY]
AUTH_CODE_DEFAULT = 0
AUTH_CODE_THRID_PARTY = 1

"""Capture Status Flags"""
CAPTURE_STATUS_IDLE = 0x0000
CAPTURE_STATUS_CAPTURING = 0x0001
CAPTURE_STATUS_START_ACTIVE = 0x0100
CAPTURE_STATUS_STOP_ACTIVE = 0x2000
CAPTURE_STATUS_WAIT_START = CAPTURE_STATUS_START_ACTIVE & CAPTURE_STATUS_CAPTURING
CAPTURE_STATUS_CAPTURING_STOP_ACTIVE = CAPTURE_STATUS_STOP_ACTIVE & CAPTURE_STATUS_CAPTURING
CAPTURE_STATUS_CAPTURING_START_STOP_ACTIVE = (
    CAPTURE_STATUS_START_ACTIVE & CAPTURE_STATUS_STOP_ACTIVE & CAPTURE_STATUS_CAPTURING)
CAPTURE_STATUS_IDLE_START_STOP_ACTIVE = CAPTURE_STATUS_START_ACTIVE & CAPTURE_STATUS_STOP_ACTIVE

"""Capture Template Alarm Comparison Types """
ALARM_COMPARISON_TYPE_UNDEFINED = 0
ALARM_COMPARISON_TYPE_LESS_THAN = 1
ALARM_COMPARISON_TYPE_LESS_THAN_OR_EQAUL = 2
ALARM_COMPARISON_TYPE_GREATER_THAN = 3
ALARM_COMPARISON_TYPE_GREATER_THAN_OR_EQUAL = 4
ALARM_COMPARISON_TYPE_EQUAL = 5
ALARM_COMPARISON_TYPE_NOT_EQUAL = 6

"""CaptureTemplate Alaram Condition Types"""
ALARM_CONDITION_TYPE_UNDEFINED = 0
ALARM_CONDITION_TYPE_SUSPECT = 1
ALARM_CONDITION_TYPE_PROBLEM = 2
ALARM_CONDITION_TYPE_RESOLVE = 3


@unique
class AlarmTrackerType(IntEnum, metaclass=OmniEnumMeta):
    """CaptureTemplate Alarm Track Types"""
    UNDEFINED = 0
    TOTAL = 1
    DIFFERENCE = 2
    DIFFERENCE_PER_SECOND = 3


@unique
class AddressType(IntEnum, metaclass=OmniEnumMeta):
    """OmniAddress Types"""
    _ignore_ = ['_labels']
    _labels = None

    NONE = 0
    ETHERNET = 10
    TOKEN_RING = 11
    LAP = 12
    WIRELESS = 13
    APPLETALK = 20
    IPV4 = 21
    DECNET = 22
    OTHER = 23
    IPV6 = 24
    IPX = 25

    def label(self):
        return AddressType._labels[self.value] if self.value >= 0 else 'None'


AddressType._labels = (
    'None',
    'Ethernet',
    'Token Ring',
    'LAP',
    'Wireless',
    'AppleTalk',
    'IPv4',
    'DECNet',
    'Other',
    'IPv6',
    'IPX'
)


"""Engine Kinds"""
ENGINE_KIND_UNKNOWN = 0
ENGINE_KIND_CAPTURE = 1
ENGINE_KIND_VIGIL = 2
ENGINE_KIND_INSIGHT = 3


@unique
class AuthenticationServerType(IntEnum, metaclass=OmniEnumMeta):
    """Authentication Server Types"""
    RADIUS = 0
    TACACS_PLUS = 1
    ACTIVE_DIRECTORY = 2
    KERBEROS = 3
    LOCAL = 4
    UNKNOWN = 5


@unique
class EngineOperation(IntEnum, metaclass=OmniEnumMeta):
    """Engine Issue Command Operations"""
    GET = 0
    POST = 1
    PUT = 2
    DELETE = 3


@unique
class EngineDataFormat(IntEnum, metaclass=OmniEnumMeta):
    """Engine Issue Command Data Format"""
    JSON = 0
    PLAIN = 1
    HTML = 2
    TAG_STREAM = 3


@unique
class AuthenticationType(IntEnum, metaclass=OmniEnumMeta):
    _ignore_ = ['_labels']
    _labels = None

    NONE = 0
    EAP = 1
    LEAP = 2
    PEAP = 3
    EAPTLS = 4

    def label(self):
        return AuthenticationType._labels[self.value] if self.value >= 0 else 'None'


AuthenticationType._labels = (
    'None',
    'EAP',
    'LEAP',
    'PEAP',
    'EAP-TLS'
)


@unique
class EncryptionProtocolType(IntEnum, metaclass=OmniEnumMeta):
    NONE = 0
    WEP = 1
    CKIP = 2
    TKIP = 3
    CCMP = 4

    _ignore_ = ['_labels']
    _labels = None

    def label(self):
        return EncryptionProtocolType._labels[self.value] if self.value >= 0 else 'None'


EncryptionProtocolType._labels = (
    'None',
    'WEP',
    'CKIP',
    'TKIP',
    'CCMP'
)


@unique
class ExpertProblemId(IntEnum, metaclass=OmniEnumMeta):
    NONE = 0
    BUSY_NETOWRK_OR_SERVER = 1
    INEFFICIENT_CLIENT = 2
    LOW_SERVER_TO_CLIENT_THROUGHPUT = 3
    LOW_CLIENT_TO_SERVER_THROUGHPUT = 4
    NON_RESPONSIVE_CLIENT = 5
    NON_RESPONSIVE_SERVER = 6
    ONE_WAY_TRAFFIC = 7
    SLOW_SERVER_RESPONSE_TIME = 8
    APDEX_CLIENT_LOW_SCORE = 9
    APEX_TASK_ENDED = 10
    APEX_TASK_ENDED_TOLERATING = 11
    APEX_TASK_ENDED_FRUSTRATED = 12
    DHCP_LOW_LEASE_TIME = 13
    DHCP_MULTIPLE_SERVER_RESPONSE = 14
    DHCP_REQUEST_REJECTED = 15
    DHCP_REQUEST_STORM = 16
    DNS_SLOW_RESPONSE_TIME = 17
    DNS_ERROR = 18
    DNS_NON_EXISTENT_DOMAIN = 19
    FTP_SLOW_RESPONSE_TIME = 20
    HTTP_REQUEST_NOT_FOUND = 21
    HTTP_CLIENT_ERROR = 22
    HTTP_SERVER_ERROR = 23
    HTTP_SLOW_RESPONSE_TIME = 24
    KERBEROS_REQUEST_REJECTED = 25
    LDAP_SLOW_RESPONSE_TIME = 26
    NFS_RETRANSMISSION = 27
    ORACLE_LOGIN_DENIED = 28
    ORACLE_SLOW_RESPONSE_TIME = 29
    ORACLE_TNS_CONNECTION_REFUSED = 30
    POP3_LOGIN_FAILED = 31
    POP3_SERVER_RETURNED_ERROR = 32
    POP3_SLOW_RESPONSE_TIME = 33
    SMB_LOGON_OR_ACCESS_DENIED = 34
    SMB_COMMAND_REJECTED = 35
    SMB_INVALID_NETWORK_RESOURCE = 36
    SMB_REPEATED_OR_LOOPED_TRANSACTION = 37
    SMB_EXCESSIVE_TRANSACTION_LOOPS = 38
    SMTP_SERVER_RETURNED_ERROR = 39
    SMTP_SLOW_RESPONSE_TIME = 40
    SQL_FAILED_LOGIN = 41
    SQL_SERVER_CLIENT_ERROR = 42
    SQL_SERVER_FATAL_ERROR = 43
    SQL_SERVER_RESOURCE_ERROR = 44
    SQL_SERVER_SLOW_RESPONSE_ERROR = 45
    WINDOWS_MASTER_BROWSER_ELECTION = 46
    NETBIOS_OVER_IP_SESSION_REFUSED = 47
    H_225_RAS_REJECT = 48
    H_225_CALL_SIGNALING_Q_931_CALL_DROPPED = 49
    H_225_CALL_SIGNALING_Q_931_CALL_REJECTED = 50
    H_245_CONTROL_REJECT = 51
    LOW_MOS_CQ = 52
    LOW_R_FACTOR_CONVERSATIONAL = 53
    MGCP_TRANSIENT_ERROR = 54
    MGCP_PERMANENT_ERROR = 55
    MGCP_CONNECTION_DELETED_OR_RESTART_IN_PROGRESS = 56
    RTP_EXCESSIVE_JITTER_DETECTED = 57
    RTP_EXCESSIVE_JITTER_REPORTED = 58
    RTP_EXCESSIVE_PACKET_LOSS_DETECTED = 59
    RTP_EXCESSIVE_PACKET_LOSS_REPORTED = 60
    RTP_PACKET_NOT_MARKED_FOR_QOS = 61
    RTP_LATE_PACKET_ARRIVAL = 62
    RTP_PACKET_OUT_OF_SEQUENCE = 63
    SCCP_STATION_ALARM_ADVISORY = 64
    SCCP_STATION_CRITICAL_ALARM = 65
    SCCP_STATION_QOS_ERROR = 66
    SCCP_STATION_REGISTER_REJECT = 67
    SIP_POST_DIAL_DELAY_EXCEEDED = 68
    SIP_REDIRECTION = 69
    SIP_CLIENT_AUTHENTICATION_REQUIRED = 70
    SIP_CLIENT_ERROR = 71
    SIP_SERVER_ERROR = 72
    SIP_GLOBAL_ERROR = 73
    RSVP_ERROR = 74
    TCP_CONNECTION_REFUSED = 75
    TCP_CONNECTION_LOST = 76
    TCP_INACTIVE_CONNECTION_RESET = 77
    TCP_CONNECTION_RESET = 78
    TCP_TOO_MANY_RETRANSMISSIONS = 79
    TCP_RETRANSMISSION_BY_ACK = 80
    TCP_RETRANSMISSION_BY_TIME = 81
    TCP_SLOW_FIRST_RETRANSMISSION = 82
    TCP_RETRANSMISSION = 83
    TCP_IDLE_TOO_LONG = 84
    TCP_INVALID_CHECKSUM = 85
    TCP_LOW_STARTING_MSS = 86
    TCP_REPEATED_CONNECT_ATTEMPT = 87
    TCP_SLOW_ACKNOWLEDGEMENT = 88
    TCP_SLOW_SEGMENT_RECOVERY = 89
    TCP_TRIPLE_DUPLICATE_ACK = 90
    TCP_LOW_WINDOW = 91
    TCP_STUCK_WINDOW = 92
    TCP_ZERO_WINDOW = 93
    TCP_SEGMENT_OUT_OF_SEQUENCE = 94
    TCP_SEGMENT_OUTSIDE_WINDOW = 95
    TCP_SEGMENT_ACKED_BUT_MISSING = 96
    UDP_INVALID_CHECKSUM = 97
    IP_INVALID_HEADER_CHECKSUM = 98
    IP_LOCAL_ROUTING = 99
    IP_NETWORK_DUPLICATED_PACKET = 100
    IP_LOW_TIME_TO_LIVE = 101
    IP_MISSING_FRAGMENT = 102
    IP_PACKET_WITH_CRC_FRAME_ERROR = 103
    IP_ZERO_ADDRESS_IN_BROADCAST = 104
    ICMP_NETWORK_UNREACHABLE = 105
    ICMP_HOST_UNREACHABLE = 106
    ICMP_PROTOCOL_UNREACHABLE = 107
    ICMP_PORT_UNREACHABLE = 108
    ICMP_FRAGMENTATION_NEEDED = 109
    ICMP_SOURCE_ROUTE_FAILED = 110
    ICMP_HOST_UNKNOWN = 111
    ICMP_NET_UNREACHABLE_TOS = 112
    ICMP_HOST_UNREACHABLE_TOS = 113
    ICMP_COMM_ADMIN_PROHIBITED = 114
    ICMP_HOST_PRECEDENCE_VIOLATION = 115
    ICMP_PRECEDENCE_CUTOFF = 116
    ICMP_HOST_REDIRECT = 117
    ICMP_HOST_TOS_REDIRECT = 118
    ICMP_TTL_EXCEEDED = 119
    ICMP_FRAGMENTATION_TIME_EXCEEDED = 120
    ICMP_PARAMETER_PROBLEM = 121
    ICMP_OBSOLETE_MESSAGE = 122
    _802_1X_DICTIONARY_ATTACK = 123
    ARP_REQUEST_STORM = 124
    BROADCAST_STORM = 125
    MULTICAST_STORM = 126
    SEVERE_BROADCAST_STORM = 127
    SEVERE_MULTICAST_STORM = 128
    BPDU_TOPOLOGY_CHANGE = 129
    EAP_AUTHENTICATION_FAILURE = 130
    FRAME_RELAY_EXCESSIVE_FECN = 131
    FRAME_RELAY_EXCESSIVE_BECN = 132
    FRAME_RELAY_DLCI_STATUS_CHANGE = 133
    PPP_REJECT = 134
    PPP_CONFIGURE_NAK = 135
    PPP_TERMINATE_REQUEST = 136
    TOO_MANY_PHYSICAL_ERRORS = 137
    MAC_FLOODING = 138
    WIRELESS_TOO_MANY_PHYSICAL_ERRORS = 139
    WIRELESS_AP_QBSS_CLIENT_TOO_MANY = 140
    WIRELESS_AP_BROADCASTING_ESSID = 141
    WIRELESS_INCONSISTENT_CONFIGURATION = 142
    WIRELESS_AP_MISSING = 143
    WIRELESS_AP_MIXED_MODE = 144
    WIRELESS_AP_NOT_CONFIGURED = 145
    WIRELESS_AP_802_11N_CAPABLE = 146
    WIRELESS_AP_802_11N_DUAL_CHANNEL_CAPABLE = 147
    WIRELESS_AP_PHYSICAL_ERRORS = 148
    WIRELESS_AP_POSSIBLE_SPOOF = 149
    WIRELESS_AP_QOS_NOT_ENABLED = 150
    WIRELESS_AP_REPEATER_MODE_DETECTED = 151
    WIRELESS_AP_RESTARTED = 152
    WIRELESS_AP_ROGUE = 153
    WIRELESS_AP_TOO_MANY = 154
    WIRELESS_AP_TOO_MANY_CLIENTS = 155
    WIRELESS_AP_TOO_MANY_RETRIES = 156
    WIRELESS_AP_WEAK_SIGNAL = 157
    WIRELESS_AP_WEP_NOT_REQUIRED = 158
    WIRELESS_AD_HOC_DETECTED = 159
    WIRELESS_ASSOCIATION_ATTACK = 160
    WIRELESS_ASSOCIATION_DENIED = 161
    WIRELESS_AUTHENTICATION_ATTACK = 162
    WIRELESS_AUTHENTICATION_DENIED = 163
    WIRELESS_CHANNEL_OVERLAP = 164
    WIRELESS_CLIENT_ASSOCIATED_WITH_ROGUE_ACCESS_POINT = 165
    WIRELESS_CLIENT_EXCESSIVE_ROAM_TIME = 166
    WIRELESS_CLIENT_HIGH_FRAGMENTATION_RATE = 167
    WIRELESS_CLIENT_NO_RESPONSE_PROBE_REQUEST = 168
    WIRELESS_CLIENT_PHYSICAL_ERRORS = 169
    WIRELESS_CLIENT_POWER_SAVE_INTERVAL_EXCEEDED = 170
    WIRELESS_CLIENT_POWER_SAVE_LISTEN_INTERVAL_TOO_LONG = 171
    WIRELESS_CLIENT_POWER_SAVE_MISSED_PACKET = 172
    WIRELESS_CLIENT_PROBE_RESPONSE_NOT_ACCEPTED = 173
    WIRELESS_CLIENT_ACTING_AS_DHCP_SERVER = 174
    WIRELESS_CLIENT_ROGUE = 175
    WIRELESS_CLIENT_TOO_MANY_RETRIES = 176
    WIRELESS_CLIENT_USING_ACCESS_POINT_ESSID = 177
    WIRELESS_CLIENT_USING_ACCESS_POINT_ADDRESS = 178
    WIRELESS_CLIENT_WEAK_SIGNAL = 179
    WIRELESS_DATA_RATE_CHANGE = 180
    WIRELESS_DATA_SENT_BUT_NOT_ASSOCIATED = 181
    WIRELESS_DEAUTHORIZATION_ATTACK = 182
    WIRELESS_DURATION_ATTACK = 183
    WIRELESS_EXCESSIVE_DATA_RATE_CHANGE = 184
    WIRELESS_EXCESSIVE_PROBE_REQUESTS = 185
    WIRELESS_EXCESSIVE_RTS = 186
    WIRELESS_FRAGMENTATION_PACKET_SIZE = 187
    WIRELESS_G_DEVICE_SHORT_TIME_SLOT = 188
    WIRELESS_HIGH_BEACON_RATE = 189
    WIRELESS_LOW_SIGNAL_TO_NOISE_RATIO = 190
    WIRELESS_PSPF_VIOLATION = 191
    WIRELESS_REASSOCIATION_DENIED = 192
    WIRELESS_RF_INTERFERENCE = 193
    WIRELESS_RF_JAMMING = 194
    WIRELESS_RTS_CTS_DATA_PACKETS_TOO_SMALL = 195
    WIRELESS_SAME_SEND_AND_RECEIVE = 196
    WIRELESS_SECURITY_ERROR = 197
    WIRELESS_SOURCE_ADDRESS_IS_BROADCAST = 198
    WIRELESS_SOURCE_ADDRESS_IS_MULTICAST = 199
    WIRELESS_TRANSMISSION_RETRY = 200
    NETWORK_POLICY_VENDOR_ID = 201
    NETWORK_POLICY_CHANNEL = 202
    NETWORK_POLICY_ESSID = 203
    NETWORK_POLICY_ENCRYPTION = 204
    NETWORK_POLICY_AUTHENTICATION = 205
    ESP_OUT_OF_SEQUENCE = 206
    TCP_KEEP_ALIVE = 207
    TCP_KEEP_ALIVE_ACK = 208
    IP_LENGTH_EXCEEDS_PACKET_LENGTH = 209
    TCP_HEADER_INCOMPLETE = 210
    UDP_LENGTH_EXCEEDS_PACKET_LENGTH = 211
    GRATUITOUS_ARP = 212
    TCP_DUPLICATE_ACK = 213
    TCP_SELECTIVE_ACK = 214


@unique
class ExpertSensitivity(IntEnum, metaclass=OmniEnumMeta):
    NONE = 0
    LOW = 1
    MEDIUM = 2
    HIGH = 3


@unique
class ExpertSettingGroupId(IntEnum, metaclass=OmniEnumMeta):
    CURRENT = 0
    DEFAULT = 1


@unique
class ExpertSeverity(IntEnum, metaclass=OmniEnumMeta):
    """Expert Severity Levels
    Note: Severity starts with INFORMATIONAL = 0.
    """
    NONE = 0
    INFORMATIONAL = 1
    MINOR = 2
    MAJOR = 3
    SEVERE = 4


@unique
class DatabaseOperation(IntEnum, metaclass=OmniEnumMeta):
    """Database Operations"""
    SYNC = 0
    INDEX = 1
    MAINTENANCE = 2


@unique
class SessionDataType(IntEnum, metaclass=OmniEnumMeta):
    """Capture Session Data Types"""
    UTILIZATION_MBPS = 0
    PACKETS = 1
    MULTICAST = 2
    PACKET_SIZES = 3
    VLAN_MPLS = 4
    PROTOCOLS_MBPS = 5
    PROTOCOLS_PPS = 6
    CALL_QUALITY = 7
    CALL_UTILIZATION = 8
    WIRELESS_PACKETS = 9
    WIRELESS_RETRIES = 10
    APPLICATIONS_MBPS = 11
    APPLICATIONS_PPS = 12


@unique
class SessionStatisticsType(IntEnum, metaclass=OmniEnumMeta):
    """Capture Session Statistics Types"""
    TOP_APPLICATIONS = 0
    TOP_IPV4_NODES = 1
    TOP_IPV6_NODES = 2
    TOP_PHYSICAL_NODES = 3
    TOP_PROTOCOLS = 4


"""Capture Packet Decode Format"""
DECODE_PLAIN_TEXT = 0
DECODE_HTML = 1
DECODE_TAG_STREAM = 2


@unique
class Diagnostics(IntEnum, metaclass=OmniEnumMeta):
    """Diagnostics Commands"""
    DEFAULT = 0
    DRIVES = 1
    PROCESSES = 2
    RAID = 3
    SYSTEM_LOG = 4


DIAGNOSTICS_COMMAND_DEFAULT = 'default'
DIAGNOSTICS_COMMAND_DRIVES = 'drives'
DIAGNOSTICS_COMMAND_PROCESSES = 'processes'
DIAGNOSTICS_COMMAND_RAID = 'raid'
DIAGNOSTICS_COMMAND_SYSTEM_LOG = 'system-log'
DIAGNOSTICS_COMMANDS = [
    DIAGNOSTICS_COMMAND_DEFAULT,
    DIAGNOSTICS_COMMAND_DRIVES,
    DIAGNOSTICS_COMMAND_PROCESSES,
    DIAGNOSTICS_COMMAND_RAID,
    DIAGNOSTICS_COMMAND_SYSTEM_LOG
]

"""Direction Labels"""
DIRECTION_TO_LEFT = 0
DIRECTION_TO_RIGHT = 1
DIRECTION_BOTH = 2


"""CaptureTemplate Filtering Modes"""
FILTER_MODE_ACCEPT_All = 0
FILTER_MODE_ACCEPT_MATCHING_ANY = 1
FILTER_MODE_REJECT_ALL = 2
FILTER_MODE_REJECT_MATCHING = 3
FILTER_MODE_ACCEPT_MATCHING_ALL = 4
FILTER_MODE_REJECT_MATCHING_ALL = 5

"""FileInformation Flags"""
FILE_FLAGS_READONLY = 0x00000001
FILE_FLAGS_HIDDEN = 0x00000002
FILE_FLAGS_SYSTEM = 0x00000004
FILE_FLAGS_DIRECTORY = 0x00000010
FILE_FLAGS_ARCHIVE = 0x00000020
FILE_FLAGS_DEVICE = 0x00000040
FILE_FLAGS_NORMAL = 0x00000080
FILE_FLAGS_TEMPORARY = 0x00000100
FILE_FLAGS_SPARSE_FILE = 0x00000200
FILE_FLAGS_REPARSE_POINT = 0x00000400
FILE_FLAGS_COMPRESSED = 0x00000800
FILE_FLAGS_OFFLINE = 0x00001000
FILE_FLAGS_NOT_CONTENT_INDEXED = 0x00002000
FILE_FLAGS_ENCRYPTED = 0x00004000
FILE_FLAGS_VIRTUAL = 0x00010000


@unique
class FindType(str, Enum):
    """Find in list Types"""
    ID = 'id'
    NAME = 'name'


"""ForensicSearch Status"""
FORENSIC_CLOSED = 0
FORENSIC_OPENING = 1
FORENSIC_COMPLETE = 2

"""OmniId formating flags"""
ID_FLAG_NONE = 0x00
ID_FLAG_NO_BRACES = 0x00
ID_FLAG_BRACES = 0x01
ID_FLAG_LOWERCASE = 0x02
ID_FLAG_UPPERCASE = 0x00


@unique
class LicenseType(IntEnum, metaclass=OmniEnumMeta):
    """License Types"""
    UNKNOWN = 0
    PERPETUAL = 1
    TRIAL = 2
    SUBSCRIPTION = 3


@unique
class LiveFlowFlowDirection(IntEnum, metaclass=OmniEnumMeta):
    INGRESS = 0
    EGRESS = 1

    def label(self):
        return 'Egress' if self.value else 'Ingress'


@unique
class LiveFlowRecordType(IntEnum, metaclass=OmniEnumMeta):
    NONE = 0
    AVC = 1
    FINANCIAL_SERVICES = 2
    FNF = 3
    MEDIANET = 4
    PLATFORM = 5
    SIGNALING_DN = 6
    SNA = 7

    _ignore_ = ['_json', '_labels']
    _json = None
    _labels = None

    def json(self):
        return LiveFlowRecordType._json[self.value] if self.value >= 0 else 'null'

    # def json_list(self):
    #     return self._json

    def label(self):
        return LiveFlowRecordType._labels[self.value] if self.value >= 0 else 'None'


LiveFlowRecordType._json = (
    'none',
    'avc',
    'financial_services',
    'fnf',
    'medianet',
    'platform',
    'signaling_dn',
    'sna'
)


LiveFlowRecordType._labels = (
    'None',
    'AVC',
    'Financial_Services',
    'FNF',
    'MediaNet',
    'Platform',
    'Signaling_DN',
    'SNA'
)


@unique
class LiveFlowTargetType(IntEnum, metaclass=OmniEnumMeta):
    NONE = 0
    KAFKA = 1
    TCP = 2
    UDP = 3
    WEBSOCKET = 4

    _ignore_ = ['_json', '_labels']
    _json = None
    _labels = None

    def json(self):
        return LiveFlowTargetType._json[self.value] if self.value >= 0 else 'null'

    def label(self):
        return LiveFlowTargetType._labels[self.value] if self.value >= 0 else 'None'


LiveFlowTargetType._json = (
    'none',
    'kafka',
    'tcp',
    'udp',
    'websocket'
)


LiveFlowTargetType._labels = (
    'None',
    'Kafka',
    'TCP',
    'UDP',
    'WebSocket'
)


"""Statistic Limit Types"""
LIMIT_TYPE_NONE = 0
LIMIT_TYPE_PACKETS = 1
LIMIT_TYPE_BYTES = 2
LIMIT_TYPE_BUFFER = 3


@unique
class MediaSpecification_Class(IntEnum, metaclass=OmniEnumMeta):
    """Media Specification Classes"""
    NONE = 0
    PROTOCOL = 1
    ADDRESS = 2
    PORT = 3


@unique
class MediaSpecification_Domain(IntEnum, metaclass=OmniEnumMeta):
    """Media Specification Wireless Domains"""
    NONE = 0
    FCC = 1
    MKK = 2
    ETSU = 3


@unique
class MediaSpecification_Type(IntEnum, metaclass=OmniEnumMeta):
    """Media Specification Types"""
    NONE = 0
    ETHERNET_PROTOCOL = 1
    LSAP = 2
    SNAP = 3
    APPLETALK_LAP = 4
    APPLETALK_DDP = 5
    MAC_CONTROL = 6
    PROTOCOL_ID_HIERARCHY = 7
    APPLICATION_ID = 8
    PROTOCOL = 9
    ETHERNET_ADDRESS = 10
    TOKENRING_ADDRESS = 11
    APPLETALK_LAP_ADDRESS = 12
    WIRELESS_ADDRESS = 13
    PACE2_APPLICATION_ID = 14
    APPLETALK_ADDRESS = 20
    IP_ADDRESS = 21
    DECNET_ADDRESS = 22
    OTHER_ADDRESS = 23
    IPV6_ADDRESS = 24
    IPX_ADDRESS = 25
    ERROR = 32
    AT_PORT = 33
    IP_PORT = 34
    NETWARE_PORT = 35
    TCP_PORT_PAIR = 36
    WAN_PPP_PROTOCOL = 37
    WAN_FRAMERELAY_PROTOCOL = 38
    WAN_X25_PROTOCOL = 39
    WAN_X25E_PROTOCOL = 40
    WAN_IPARS_PROTOCOL = 41
    WAN_U200_PROTOCOL = 42
    WAN_DLCI_ADDRESS = 43
    WAN_Q931_PROTOCOL = 44


MAX_PROTOSPEC_DEPTH = 32

"""MediaSpec Media Types"""
MEDIA_TYPE_802_3 = 0                # Ethernet (802.3)
MEDIA_TYPE_802_5 = 1                # Token Ring (802.5)
MEDIA_TYPE_FDDI = 2                 # FDDI
MEDIA_TYPE_WAN = 3                  # WAN
MEDIA_TYPE_LOCALTALK = 4            # LocalTalk
MEDIA_TYPE_DIX = 5                  # DEC/Intel/Xerox (DIX) Ethernet
MEDIA_TYPE_ARCNET_RAW = 6           # ARCNET (raw)
MEDIA_TYPE_ARCNET_878_2 = 7         # ARCNET (878.2)
MEDIA_TYPE_ATM = 8                  # ATM
MEDIA_TYPE_WIRELESS_WAN = 9         # Various wireless media
MEDIA_TYPE_IRDA = 10                # Infrared (IrDA)
MEDIA_TYPE_BPC = 11                 # Broadcast Architecture
MEDIA_TYPE_CO_WAN = 12              # Connection-oriented WAN
MEDIA_TYPE_1394 = 13                # IEEE 1394 (FireWire)
MEDIA_TYPE_MAX = 14                 # Defined the upper-bound, not a real type.

MEDIA_TYPE_NAMES = [
    'Ethernet',                     # MEDIA_TYPE_802_3
    'Token Ring',                   # MEDIA_TYPE_802_5
    'FDDI',                         # MEDIA_TYPE_FDDI
    'WAN',                          # MEDIA_TYPE_WAN
    'LocalTalk',                    # MEDIA_TYPE_LOCALTALK
    'DIX Ethernet',                 # MEDIA_TYPE_DIX
    'ARCNET Raw',                   # MEDIA_TYPE_ARCNET_RAW
    'ARCNET',                       # MEDIA_TYPE_ARCNET_878_2
    'ATM',                          # MEDIA_TYPE_ATM
    'Wireless WAN',                 # MEDIA_TYPE_WIRELESS_WAN
    'IrDA',                         # MEDIA_TYPE_IRDA
    'Broadcast Architecture',       # MEDIA_TYPE_BPC
    'Connection-oriented WAN',      # MEDIA_TYPE_CO_WAN
    'IEEE 1394 (FireWire)',         # MEDIA_TYPE_1394
    'Invalid Value'                 # MEDIA_TYPE_MAX
]

"""MediaSpec Media Sub-Types"""
MEDIA_SUB_TYPE_NATIVE = 0           # Native media specified by the media type.
MEDIA_SUB_TYPE_802_11_B = 1         # Wireless LAN network using 802.11b.
MEDIA_SUB_TYPE_802_11_A = 2         # Wireless LAN network using 802.11a.
MEDIA_SUB_TYPE_802_11_GENERAL = 3   # All possible 802.11 types: a b g combos
MEDIA_SUB_TYPE_WAN_PPP = 4          # PPP over a T1 or an E1
MEDIA_SUB_TYPE_WAN_FRAMERELAY = 5   # Frame Relay
MEDIA_SUB_TYPE_WAN_X25 = 6          # X.25
MEDIA_SUB_TYPE_WAN_X25E = 7         # X.25mod128
MEDIA_SUB_TYPE_WAN_IPARS = 8        # IPARS
MEDIA_SUB_TYPE_WAN_U200 = 9         # U200
MEDIA_SUB_TYPE_WAN_Q931 = 10        # Q.931
MEDIA_SUB_TYPE_MAX = 11             # Defined the upper-bound, not a real type.

MEDIA_SUB_TYPE_NAMES = [
    'Native',                       # MEDIA_SUB_TYPE_NATIVE
    '802.11b',                      # MEDIA_SUB_TYPE_802_11_B
    '802.11a',                      # MEDIA_SUB_TYPE_802_11_A
    '802.11',                       # MEDIA_SUB_TYPE_802_11_GENERAL
    'PPP',                          # MEDIA_SUB_TYPE_WAN_PPP
    'Frame Relay',                  # MEDIA_SUB_TYPE_WAN_FRAMERELAY
    'X.25',                         # MEDIA_SUB_TYPE_WAN_X25
    'X.25mod128',                   # MEDIA_SUB_TYPE_WAN_X25E
    'IPARS',                        # MEDIA_SUB_TYPE_WAN_IPARS
    'U200',                         # MEDIA_SUB_TYPE_WAN_U200
    'Q.931',                        # MEDIA_SUB_TYPE_WAN_Q931
    'Invalid Value'                 # MEDIA_SUB_TYPE_MAX
]

"""ForensicTemplate Filter Modes"""
MODE_ACCEPT_ALL = 0
MODE_ACCEPT_ANY_MATCHING = 1
MODE_REJECT_ALL = 2
MODE_REJECT_ANY_MATCHING = 3
MODE_ACCEPT_ALL_MATCHING = 4
MODE_REJECT_ALL_MATCHING = 5

"""NodeStatistic Column Indexes"""
NODE_COLUMN_BYTES_SENT = 0
NODE_COLUMN_BYTES_RECEIVED = 1
NODE_COLUMN_PACKETS_SENT = 2
NODE_COLUMN_PACKETS_RECEIVED = 3
NODE_COLUMN_BROADCAST_PACKETS = 4
NODE_COLUMN_BROADCAST_BYTES = 5
NODE_COLUMN_MULTICAST_PACKETS = 6
NODE_COLUMN_MULTICAST_BYTES = 7
NODE_COLUMN_MIN_SIZE_SENT = 8
NODE_COLUMN_MAX_SIZE_SENT = 9
NODE_COLUMN_MIN_SIZE_RECEIVED = 10
NODE_COLUMN_MAX_SIZE_RECEIVED = 11
NODE_COLUMN_FIRST_TIME_SENT = 12
NODE_COLUMN_LAST_TIME_SENT = 13
NODE_COLUMN_FIRST_TIME_RECEIVED = 14
NODE_COLUMN_LAST_TIME_RECEIVED = 15


@unique
class EmailScheme(IntEnum, metaclass=OmniEnumMeta):
    """Notification Types"""
    SMTP = 0
    SMTP_SSL = 1
    SMTP_TLS = 2


@unique
class Capability_Types(Enum):
    """Engine Capabilities"""
    CAPTURE_ETHERNET = 0
    CAPTURE_WIRELESS = auto()
    CAPTURE_GIGHARDWARE = auto()
    CAPTURE_WAN = auto()
    EXPERT = auto()
    PEERMAP = auto()
    VOICE = auto()
    LOCAL_CAPTURE = auto()
    REMOTE_CAPTURE = auto()
    GRAPHS = auto()
    CAPTURE_LOCAL_WIRELESS = auto()
    ENGINE_STATS = auto()
    TELCHEMY_VOIP = auto()
    APDEX = auto()
    NO_EXPERT_LIMIT = auto()
    NO_ADAPTER_LIMIT = auto()
    NO_REMOTE_CONSOLE_LIMIT = auto()
    DASHBOARD = auto()
    WEB_VIEWS = auto()
    RADCOM_VOIP = auto()
    FORENSIC_SEARCH = auto()
    PROMISCUOUS_CAPTURE = auto()
    CALL_PLAYBACK = auto()
    ORA = auto()
    ORA_2 = auto()
    ORA_3 = auto()
    ORA_4 = auto()
    MSA = auto()
    FILESVIEW = auto()
    IMPORT_EVENTS = auto()
    LIVEFLOW = auto()
    LIVEFLOW_LIMIT_1 = auto()
    LIVEFLOW_LIMIT_2 = auto()
    LIVEFLOW_LIMIT_3 = auto()
    THREATEYE_NV = auto()
    NO_CAPTURE_TO_DISK = auto()

    @classmethod
    def get_capability_names(cls, capabilities: str):
        return [v.name for k, v in enumerate(cls) if int(capabilities[k])]


@unique
class NotificationActionType(IntEnum, metaclass=OmniEnumMeta):
    NONE = 0
    EMAIL = 1
    EXECUTE = 2
    LOG = 3
    SNMP = 4
    SYSLOG = 5
    TEXTLOG = 6


"""Numeric Constants"""
BYTES_PER_KILOBYTE = 1024
BYTES_PER_MEGABYTE = 1024 * 1024
BYTES_PER_GIGABYTE = 1024 * 1024 * 1024
BYTES_PER_TERABYTE = 1024 * 1024 * 1024 * 1024
KILOBYTES_PER_MEGABYTE = 1024
KILOBYTES_PER_GIGABYTE = 1024 * 1024
KILOBYTES_PER_TERABYTE = 1024 * 1024 * 1024
MEGABYTES_PER_GIGABYTE = 1024
MEGABYTES_PER_TERABYTE = 1024 * 1024


"""Time Constant"""
MILLISECONDS_PER_SECOND = 1000
MICROSECONDS_PER_SECOND = 1000000
NANOSECONDS_PER_SECOND = 1000000000
SECONDS_PER_MINUTE = 60
MINUTES_PER_HOUR = 60
SECONDS_PER_HOUR = SECONDS_PER_MINUTE * MINUTES_PER_HOUR
HOURS_PER_DAY = 24
MINUTES_PER_DAY = MINUTES_PER_HOUR * HOURS_PER_DAY
SECONDS_PER_DAY = SECONDS_PER_HOUR * HOURS_PER_DAY


"""OmniAPI Command Ids"""
OMNI_CONNECT = 1
OMNI_DISCONNECT = 2
OMNI_IS_CONNECTED = 3
OMNI_GET_STATS_CONTEXT = 4

"""OmniEngine Command Ids"""
OMNI_GET_VERSION = 100
OMNI_GET_STATUS = 110
OMNI_GET_CAPABILITIES = 111
OMNI_GET_LOG_MSGS = 112
OMNI_GET_ADAPTER_LIST = 113
OMNI_GET_CAPTURE_LIST = 114
OMNI_GET_CAPTURE_PROPS = 115
OMNI_CREATE_CAPTURE = 116
OMNI_DELETE_CAPTURES = 117
OMNI_GET_CAPTURE_OPTIONS = 118
OMNI_SET_CAPTURE_OPTIONS = 119
OMNI_START_CAPTURES = 120
OMNI_STOP_CAPTURES = 121
OMNI_CLEAR_CAPTURES = 122
OMNI_GET_STATS = 123
OMNI_TAKE_SNAPSHOT = 124
OMNI_GET_FILTERS = 125
OMNI_SET_FILTERS = 126
OMNI_GET_FILTER_CONFIG = 127
OMNI_SET_FILTER_CONFIG = 128
OMNI_GET_NOTIFICATIONS = 129
OMNI_SET_NOTIFICATIONS = 130
OMNI_GET_PACKETS = 131
OMNI_SELECT_RELATED = 132
OMNI_CLEAR_LOG = 133
OMNI_GET_FILE_LIST = 137
OMNI_GET_FILE = 138
OMNI_DELETE_FILES = 139
OMNI_SAVE_CAPTURE_FILE = 140
OMNI_GET_ALARMS = 141
OMNI_GET_HARDWARE_OPTIONS = 155
OMNI_SET_HARDWARE_OPTIONS = 156
OMNI_GET_ADAPTER_CONFIG = 157
OMNI_SET_ADAPTER_CONFIG = 158
OMNI_GET_GRAPH_TEMPLATES = 160
OMNI_MODIFY_FILTERS = 173
OMNI_EXPERT_EXECUTE_QUERY = 178
OMNI_PLUGIN_MESSAGE = 179
OMNI_GET_PACKETFILE_TABLE = 184
OMNI_CREATE_FILE_VIEW = 185
OMNI_DELETE_FILE_VIEW = 186
OMNI_DELETE_CAPTURE_SESSION = 187
OMNI_SYNC_DATABASE = 199
OMNI_GET_CAPTURE_SESSIONS = 201
OMNI_DELETE_ALL_CAPTURE_SESSIONS = 203
OMNI_GET_FILE_VIEW_LIST = 210
OMNI_SET_FILE = 213
OMNI_SET_ADAPTER_NAME = 216
OMNI_DELETE_ADAPTERS = 219
OMNI_RESTART_ENGINE = 508
OMNI_GET_ACL = 515
OMNI_SET_ACL = 516
OMNI_GET_INSTALLED_PLUGINS = 523
OMNI_GET_AUDIT_LOG = 710
OMNI_CLEAR_AUDIT_LOG = 711
OMNI_QUERY_AUDIT_LOG = 712
OMNI_GET_DIAGNOSTICS_INFO = 720
OMNI_DEBUG_COMMAND = 730

"""OmniScript Flags"""
OMNI_FLAG_NO_HTTPS_WARNINGS = 0x0001

"""Operating Systems"""
OPERATING_SYSTEM_UNKNOWN = None
OPERATING_SYSTEM_WINDOWS = "Windows"
OPERATING_SYSTEM_LINUX = "Linux"
OPERATING_SYSTEM_MAC = "Macintosh"

"""Forensic Search Options"""
OPTION_PACKETS = 0
OPTION_EXPERT = 1
OPTION_WEB = 2
OPTION_VOICE = 3
OPTION_BREAK_OUT_STATS = 4
OPTION_NETWORK_STATS = 5
OPTION_ERROR_STATS = 6
OPTION_NODE_STATS = 7
OPTION_PROTOCOL_STATS = 8
OPTION_CONVERSATION_STATS = 9
OPTION_SIZE_STATS = 10
OPTION_SUMMARY_STATS = 11
OPTION_TOP_TALKER_STATS = 12
OPTION_HISTORY_STATS = 13
OPTION_WIRELESS_CHANNEL_STATS = 14
OPTION_WIRELESS_NODE_STATS = 15

"""PatternNode Pattern Types"""
PATTERN_TYPE_ASCII = 0
PATTERN_TYPE_UNICODE = 1
PATTERN_TYPE_RAWDATA = 2    # Hex Data
PATTERN_TYPE_EBCDIC = 3
PATTERN_TYPE_REGEX = 4

"""Notification Sources"""
NOTIFICATION_SOURCE_PEEK_AGENT = 'B3866820-50E1-49A6-88BA-21348CFE3F40'
NOTIFICATION_SOURCE_PEEK_CAPTURE = '9BDA7C1D-D372-4973-B6F8-8B45C7C73946'
NOTIFICATION_SOURCE_PEEK_FORENSIC_SEARCH = '69646F71-77FF-4B65-A2AF-BF2F866E7377'
NOTIFICATION_SOURCE_PEEK_DISTRIBUTED_FORENSIC_SEARCH = '571C1CBC-21C0-4678-8F6D-5DFB9FDF2CDE'
NOTIFICATION_SOURCE_PEEK_ALARMS = 'E18AF1CF-7F83-45A7-95CB-410138FBC3E3'
NOTIFICATION_SOURCE_PEEK_EXPERT = '3C24866B-CC05-4CD3-8473-75AABF4A6D68'
NOTIFICATION_SOURCE_PEEK_FTP_PLUGIN = 'B77F78E1-ABC6-4ACF-9664-3C8A9671695A'
NOTIFICATION_SOURCE_PEEK_WEB_PLUGIN = 'E2E91781-238D-4DB6-85E2-142A1EB01A7A'
NOTIFICATION_SOURCES = [
    NOTIFICATION_SOURCE_PEEK_AGENT,
    NOTIFICATION_SOURCE_PEEK_CAPTURE,
    NOTIFICATION_SOURCE_PEEK_FORENSIC_SEARCH,
    NOTIFICATION_SOURCE_PEEK_DISTRIBUTED_FORENSIC_SEARCH,
    NOTIFICATION_SOURCE_PEEK_ALARMS,
    NOTIFICATION_SOURCE_PEEK_EXPERT,
    NOTIFICATION_SOURCE_PEEK_FTP_PLUGIN,
    NOTIFICATION_SOURCE_PEEK_WEB_PLUGIN
]

"""OmniPort Port Types"""
PORT_TYPE_UNDEFINED = 0
PORT_TYPE_APPLETALK = 33
PORT_TYPE_IP = 34
PORT_TYPE_NETWARE = 35
PORT_TYPE_TCP_PAIR = 36


@unique
class PacketFileIndexing(IntEnum, metaclass=OmniEnumMeta):
    """Packet File Indexing"""
    IPV4 = 0
    IPV6 = 1
    ETHERNET = 2
    PORT = 3
    PROTOCOL = 4
    APPLICATION = 5
    VLAN = 6
    MPLS = 7
    COUNTRY = 8


@unique
class PeekResult(IntEnum, metaclass=OmniEnumMeta):
    """Peek Result"""
    OK = 0
    FALSE = 1
    UNEXPECTED = 0x8000FFFF
    PENDING = 0x8000000A
    NOT_IMPLEMENTED = 0x80004001
    NO_INTERFACE = 0x80004002
    INVALID_OR_NULL_POINTER = 0x80004003
    ABORT = 0x80004004
    FAIL = 0x80004005
    NOT_AVAILABLE = 0x80040111
    FACTORY_NOT_REGISTERED = 0x80040154
    FACTORY_NOT_LOADED = 0x800401F8
    FILE_NOT_FOUND = 0x80070002
    PATH_NOT_FOUND = 0x80070003
    ACCESS_DENIED = 0x80070005
    INVALID_HANDLE = 0x80070006
    OUT_OF_MEMORY = 0x8007000E
    WRITE_PROTECTED = 0x80070013
    EOF = 0x80070026
    FILE_EXISTS = 0x80070050
    ILLEGAL_OR_INVALID_VALUE = 0x80070057
    DISK_FULL = 0x80070070
    INSUFFICIENT_BUFFER = 0x8007007A
    ILLEGAL_FILE_NAME = 0x8007007B
    CANCELLED = 0x800704C7
    TIMEOUT = 0x800705B4
    TYPE_MISMATCH = 0x80020005
    BAD_VARIABLE_TYPE = 0x80020008
    OVERFLOW = 0x8002000A


@unique
class ProtocolLayer(IntEnum, metaclass=OmniEnumMeta):
    """OSI Protocol Layers plus Omni Extension"""
    UNKNOWN = -1
    PHYSICAL = 0
    DATA_LINK = 1
    NETWORK = 2
    TRANSPORT = 3
    SESSION = 4
    APPLICATION = 5
    CLIENT_SERVER = 6
    WIRELESS = 7
    WAN = 8
    VOIP = 9
    NETWORK_POLICY = 10

    _ignore_ = ['_labels']
    _labels = None

    def label(self):
        return ProtocolLayer._labels[self.value] if self.value >= 0 else 'Unknown'


ProtocolLayer._labels = (
    'Physical',
    'Data Link',
    'Network',
    'Transport',
    'Session',
    'Application',
    'Client Server',
    'Wireless',
    'WAN',
    'VoIP',
    'Network Policy'
)


@unique
class VariantType(IntEnum, metaclass=OmniEnumMeta):
    """Variant Type"""
    EMPTY = 0
    NULL = 1
    SIGNED_16_BIT_INTEGER = 2
    SIGNED_32_BIT_INTEGER = 3
    SMALL_DECIMAL_FLOAT = 4
    LARGE_DECIMAL_DOUBLE = 5
    CY = 6
    DATE = 7
    B_STRING = 8
    DISPATCH = 9
    ERROR = 10
    BOOLEAN = 11
    VARIANT = 12
    UNKNOWN = 13
    DECIMAL = 14
    CHARACTER = 16
    UNSIGNED_8_BIT_INTEGER = 17
    UNSIGNED_16_BIT_INTEGER = 18
    UNSIGNED_32_BIT_INTEGER = 19
    SIGNED_64_BIT_INTEGER = 20
    UNSIGNED_64_BIT_INTEGER = 21
    SIGNED_INTEGER = 22
    UNSIGNED_INTEGER = 23
    VOID = 24
    PEEK_RESULT = 25
    POINTER = 26
    SAFE_ARRAY = 27
    C_ARRAY = 28
    USER_DEFINED = 29
    MULTI_BYTE_STRING = 30
    WIDE_STRING = 31
    RECORD = 36
    SIGNED_INTEGER_POINTER = 37
    UNSIGNED_INTEGER_POINTER = 38
    FILE_TIME = 64
    BLOB = 65
    STREAM = 66
    STORAGE = 67
    STREAMED_OBJECT = 68
    STORED_OBJECT = 69
    BLOB_OBJECT = 70
    CF = 71
    CLSID = 72
    VERSIONED_STREAM = 73
    WIDE_STRING_BLOB_ILLEGAL_TYPE_MASK = 0x0FFF
    VECTOR = 0x1000
    ARRAY = 0x2000
    BY_REFERENCE = 0x4000
    RESERVED = 0x8000
    ILLEGAL = 0xFFFF


"""Property Bag"""
PROP_BAG_TRUE = '1'
PROP_BAG_FALSE = '0'

"""OmniEngine default port"""
DEFAULT_HOST = 'localhost'
DEFAULT_PORT = 443

"""OmniEngine default timeouts"""
DEFAULT_CONNECTION_TIMEOUT = 180.0
DEFAULT_REQUEST_TIMEOUT = 60.0

"""Select Related Types"""
SELECT_BY_SOURCE = 0
SELECT_BY_DESTINATION = 1
SELECT_BY_SOURCE_DESTINATION = 2
SELECT_BY_PROTOCOL = 3
SELECT_BY_PORT = 4
SELECT_BY_CONVERSATION = 5
SELECT_BY_VLAN = 6
SELECT_BY_APPLICATION = 7


@unique
class Severity(IntEnum, metaclass=OmniEnumMeta):
    """Severity Types
    Note: ExpertSeverity starts with NONE = 0.
    """
    INFORMATIONAL = 0
    MINOR = 1
    MAJOR = 2
    SEVERE = 3

    _ignore_ = ['_labels']
    _labels = None

    def label(self):
        return Severity._labels[self.value] if self.value >= 0 else 'Informational'


Severity._labels = (
    'Informational',
    'Minor',
    'Major',
    'Severe'
)

"""ForensicSearch Completion Status"""
STATUS_LOADING = 0
STATUS_PROCESSING = 1
STATUS_COMPLETE = 2


@unique
class SummaryType(IntEnum, metaclass=OmniEnumMeta):
    """Summary Statistic value types"""
    NONE = 0
    DATE = 1
    TIME = 2
    DURATION = 3
    PACKETS = 4
    BYTES = 5
    PAIR = 6
    INT = 7
    DOUBLE = 8


"""Tap Timestamp Types"""
TAP_TIMESTAMPS_DEFAULT = 0
TAP_TIMESTAMPS_APCON = 1
TAP_TIMESTAMPS_IXIA_ANUE = 2
TAP_TIMESTAMPS_IXIA_NETOPTICS = 3
TAP_TIMESTAMPS_GIGAMON = 4

"""PeekTime Flags"""
TIME_FLAGS_NONE = 0x00
TIME_FLAGS_NANOSECONDS = 0x01


@unique
class TimeUnit(IntEnum, metaclass=OmniEnumMeta):
    NONE = 0
    NANOSECONDS = 1
    MICROSECONDS = 2
    MILLISECONDS = 3
    SECONDS = 4
    MINUTES = 5
    HOURS = 6
    DAYS = 7


@unique
class TraceLogLevel(IntEnum, metaclass=OmniEnumMeta):
    """Trace Log Logging Levels"""
    OFF = 0
    LOW = 1
    MEDIUM = 2
    HIGH = 3
    ALWAYS = 4


"""ValueNode Flags"""
VALUE_FLAG_NETWORK_BYTE_ORDER = 0x01
VALUE_FLAG_SIGNED = 0x02
VALUE_FLAG_HEX = 0x04
VALUE_FLAG_BINARY = 0x08

"""ValueNode Operators"""
VALUE_OPERATOR_EQUAL = 0x01
VALUE_OPERATOR_GREATER = 0x02
VALUE_OPERATOR_LESS = 0x04
VALUE_OPERATOR_NOT_EQUAL = VALUE_OPERATOR_GREATER | VALUE_OPERATOR_LESS
VALUE_OPERATOR_GREATER_EQUAL = VALUE_OPERATOR_EQUAL | VALUE_OPERATOR_GREATER
VALUE_OPERATOR_LESS_EQUAL = VALUE_OPERATOR_EQUAL | VALUE_OPERATOR_LESS

"""ValueNode Value Types"""
VALUE_TYPE_UNSIGNED_BYTE = 0
VALUE_TYPE_SIGNED_BYTE = 1
VALUE_TYPE_UNSIGNED_SHORT = 2
VALUE_TYPE_SIGNED_SHORT = 3
VALUE_TYPE_UNSIGNED_WORD = 4
VALUE_TYPE_SIGNED_WORD = 5
VALUE_TYPE_UNSIGNED_LONG = 6
VALUE_TYPE_SIGNED_LONG = 7

"""WanDirectionNode Directions"""
WAN_DIRECTION_UNDEFINED = 0
WAN_DIRECTION_TO_DTE = 1
WAN_DIRECTION_TO_DCE = 2

"""Wireless Hardware Options"""
WIRELESS_CONFIGURATION_SINGLE_CHANNEL = 0
WIRELESS_CONFIGURATION_CHANNEL_SCANNING = 3

"""WirelessNode Wireless Bands"""
WIRELESS_BAND_ALL = 0
WIRELESS_BAND_GENERIC = 1
WIRELESS_BAND_B = 2
WIRELESS_BAND_A = 3
WIRELESS_BAND_G = 4
WIRELESS_BAND_BG = WIRELESS_BAND_G
WIRELESS_BAND_N = 6
WIRELESS_BAND_TURBOA = 7
WIRELESS_BAND_TURBOG = 8
WIRELESS_BAND_SUPERG = 9
WIRELESS_BAND_LICENSEDA1MHZ = 100
WIRELESS_BAND_LICENSEDA5MHZ = 101
WIRELESS_BAND_LICENSEDA10MHZ = 102
WIRELESS_BAND_LICENSEDA15MHZ = 103
WIRELESS_BAND_LICENSEDA20MHZ = 104
WIRELESS_BAND_PRIMARYAC0 = 201
WIRELESS_BAND_PRIMARYAC1 = 202
WIRELESS_BAND_PRIMARYAC2 = 203
WIRELESS_BAND_PRIMARYAC3 = 204
WIRELESS_BAND_UNKNOWN5 = 205
WIRELESS_BAND_UNKNOWN6 = 206
WIRELESS_BAND_UNKNOWN7 = 207
WIRELESS_BAND_UNKNOWN8 = 208
WIRELESS_BAND_UNKNOWN9 = 209
WIRELESS_BAND_N20MHZ = 300
WIRELESS_BAND_N40MHZ = 301
WIRELESS_BAND_N40MHZLOW = 302
WIRELESS_BAND_N40MHZHIGH = 303

"""WirelessNode Wireless Data Masks"""
WIRELESS_DATA_MASK_CHANNEL = 0x00001
WIRELESS_DATA_MASK_DATA_RATE = 0x00002
WIRELESS_DATA_MASK_SIGNAL = 0x00004
WIRELESS_DATA_MASK_SIGNAL_DBM = 0x00008
WIRELESS_DATA_MASK_NOISE = 0x00010
WIRELESS_DATA_MASK_NOISE_DBM = 0x00020
WIRELESS_DATA_MASK_ENCRYPTION = 0x00040
WIRELESS_DATA_MASK_DECRYPTION_ERROR = 0x00080
WIRELESS_DATA_MASK_BSSID = 0x00100
WIRELESS_DATA_MASK_SIGNAL_DBM_1 = 0x00200
WIRELESS_DATA_MASK_SIGNAL_DBM_2 = 0x00400
WIRELESS_DATA_MASK_SIGNAL_DBM_3 = 0x00800
WIRELESS_DATA_MASK_NOISE_DBM_1 = 0x01000
WIRELESS_DATA_MASK_NOISE_DBM_2 = 0x02000
WIRELESS_DATA_MASK_NOISE_DBM_3 = 0x04000
WIRELESS_DATA_MASK_FLAGS = 0x08000

"""WirelessNode bit flags"""
WIRELESS_FLAG_20MHZ_LOWER = 0x00000001
WIRELESS_FLAG_20MHZ_UPPER = 0x00000002
WIRELESS_FLAG_40MHZ = 0x00000004
WIRELESS_FLAG_HALF_GI = 0x00000008
WIRELESS_FLAG_FULL_GI = 0x00000010
WIRELESS_FLAG_AMPDU = 0x00000020
WIRELESS_FLAG_VHT = 0x00000040
WIRELESS_FLAG_HTGREENFIELD = 0x00000080
WIRELESS_FLAG_MCS = 0x00000100
WIRELESS_FLAG_80MHZ = 0x00000200
WIRELESS_FLAG_160MHZ = 0x00000400
WIRELESS_FLAG_NSS = 0x00000800
WIRELESS_FLAG_MODE_2X2 = 0x00001000
WIRELESS_FLAG_MODE_2X3 = 0x00002000
WIRELESS_FLAG_CISCO_AC_2 = 0x00004000
WIRELESS_FLAG_CISCO_AC_3 = 0x00008000
