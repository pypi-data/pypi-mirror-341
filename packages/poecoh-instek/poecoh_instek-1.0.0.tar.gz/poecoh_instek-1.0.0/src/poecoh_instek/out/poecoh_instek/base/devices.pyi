from .modes import *

class GPD:
    def __init__(self, port: str, identity: Identity | None = None) -> None: ...
    @property
    def manufacturer(self) -> str: ...
    @property
    def model(self) -> str: ...
    @property
    def serial(self) -> str: ...
    @property
    def firmware(self) -> str: ...
    @property
    def output(self) -> bool: ...
    @output.setter
    def output(self, state: bool) -> None: ...
    @property
    def beep(self) -> bool: ...
    @beep.setter
    def beep(self, state: bool) -> None: ...
    @property
    def independent(self) -> Independent: ...
    @property
    def series(self) -> Series: ...
    @property
    def series_common(self) -> SeriesCommon: ...
    @property
    def parallel(self) -> Parallel: ...
    def close(self) -> None: ...

class GPD2303(GPD): ...
class GPD3303(GPD): ...

class GPD4303(GPD):
    @property
    def ch3(self) -> Channel3: ...
    @property
    def ch4(self) -> Channel4: ...

model_map: dict[str, type[GPD2303] | type[GPD3303] | type[GPD4303]]

def find() -> list[GPD2303 | GPD3303 | GPD4303]: ...
