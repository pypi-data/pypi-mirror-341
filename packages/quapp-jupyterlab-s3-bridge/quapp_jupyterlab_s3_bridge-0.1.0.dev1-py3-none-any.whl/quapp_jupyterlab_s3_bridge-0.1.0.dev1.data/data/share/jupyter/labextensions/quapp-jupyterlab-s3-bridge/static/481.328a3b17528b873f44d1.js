"use strict";(self.webpackChunkquapp_jupyterlab_s3_bridge=self.webpackChunkquapp_jupyterlab_s3_bridge||[]).push([[481],{481:(e,t,n)=>{n.r(t),n.d(t,{default:()=>p});var s=n(643),o=n(752),r=n(256),i=n(602),a=n(979),d=n(916);class c extends r.Widget{constructor(){super(),this._versionChanged=new i.Signal(this),this.addClass("versions-dropdown-widget"),this._select=document.createElement("select"),this._select.style.margin="0 4px",this._select.style.width="150px",this._select.addEventListener("change",this._onChange.bind(this)),this.node.appendChild(this._select),this.refresh()}get versionChanged(){return this._versionChanged}get selectedVersion(){return this._select.value}async refresh(){try{const e=d.ServerConnection.makeSettings(),t=a.URLExt.join(e.baseUrl,"s3bridge","versions"),n=await fetch(t,{credentials:"include"});if(!n.ok)throw new Error(`Fetch failed: ${n.status}`);const s=(await n.json()).data.map((e=>Number(e.version))).sort(((e,t)=>e-t));this._select.innerHTML="",s.forEach((e=>{const t=document.createElement("option");t.value=e.toString(),t.textContent=`v${e}`,this._select.appendChild(t)})),s.length>0&&(this._select.value=s[s.length-1].toString())}catch(e){console.error("Dropdown load error:",e)}}async _onChange(){const e=this.selectedVersion;try{const t=d.ServerConnection.makeSettings(),n=a.URLExt.join(t.baseUrl,"s3bridge","versions",e),s=await fetch(n,{method:"PATCH",credentials:"include"});if(!s.ok)throw new Error(`PATCH failed: ${s.status}`);await s.json(),this._versionChanged.emit(e)}catch(e){console.error("Version switch failed:",e)}}dispose(){this._select.removeEventListener("change",this._onChange),super.dispose()}}var l=n(178);const h={id:"quapp_jupyterlab_s3_bridge:plugin",autoStart:!0,requires:[s.IFileBrowserFactory],optional:[o.ISettingRegistry],activate:(e,t,n)=>{function s(e){const n=t.tracker.find((t=>t.id===e));if(!n)return;const s=new c,o=(i=()=>s.refresh(),new l.ToolbarButton({icon:l.saveIcon,tooltip:"Push local changes to S3 backend",onClick:async()=>{try{const e=d.ServerConnection.makeSettings(),t=a.URLExt.join(e.baseUrl,"s3bridge","upload-s3"),n=await fetch(t,{method:"POST",credentials:"include"});if(!n.ok)throw new Error(`Upload error: ${n.status}`);await n.json(),i()}catch(e){console.error("Upload failed:",e),alert("Upload failed: "+e)}}}));var i;const h=function(e){const t=new r.Widget;t.addClass("jp-FileBrowser-version-toolbar"),t.node.style.display="flex",t.node.style.alignItems="center",t.node.style.padding="2px 4px",t.node.style.borderTop="1px solid var(--jp-border-color2)";const n=document.createElement("span");return n.textContent="Version:",n.style.margin="0 4px",t.node.appendChild(n),t.node.appendChild(e.node),t}(s);setTimeout((()=>{n.toolbar.node.querySelector("#saveS3Button")||(n.toolbar.insertItem(1,"saveS3",o),n.layout.insertWidget(1,h))}),100)}console.log("JupyterLab S3 extension activated."),n&&n.load(h.id).then((e=>{console.log("Settings:",e.composite)})),t.tracker.forEach((e=>s(e.id))),t.tracker.widgetAdded.connect(((e,t)=>s(t.id)))}},p=h}}]);