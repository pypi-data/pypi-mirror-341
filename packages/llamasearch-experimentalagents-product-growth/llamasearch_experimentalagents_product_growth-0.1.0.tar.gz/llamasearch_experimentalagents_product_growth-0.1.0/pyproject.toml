[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llamasearch-experimentalagents-product-growth"
description = "AI-powered product growth platform with multi-LLM support"
readme = "README.md"
requires-python = ">=3.10"
version = "0.1.0"
license = { text = "MIT" }
authors = [
    { name = "Nik Jois", email = "nikjois@llamasearch.ai" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "typer>=0.9.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.2.0",
    "tqdm>=4.65.0",
    "rich>=13.3.5",
    "pydantic>=2.0.0",
    "openai>=1.0.0",
    "python-dotenv>=1.0.0",
    "datasets>=2.12.0",
    "datasette>=0.64.5",
    "sqlite-utils>=3.35",
]

[project.optional-dependencies]
mlx = [
    "mlx>=0.0.1; sys_platform == 'darwin'",
]
jax = [
    "jax>=0.4.8",
    "jaxlib>=0.4.7",
]
anthropic = [
    "anthropic>=0.5.0",
]
local = [
    "llama-cpp-python>=0.1.77",
]
dev = [
    "black>=23.3.0",
    "isort>=5.12.0",
    "mypy>=1.2.0",
    "ruff>=0.0.262",
    "pytest>=7.3.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "pre-commit>=3.3.1",
]
docs = [
    "mkdocs>=1.4.3",
    "mkdocs-material>=9.1.8",
    "mkdocstrings>=0.21.2",
    "mkdocstrings-python>=1.1.2",
]
all = [
    "llamasearch-experimentalagents-product-growth[mlx,jax,anthropic,local,dev,docs]",
]

[project.urls]
Homepage = "https://github.com/llamasearch/experimentalagents-product-growth"
Documentation = "https://llamasearch.github.io/experimentalagents-product-growth"
Source = "https://github.com/llamasearch/experimentalagents-product-growth"
"Bug Tracker" = "https://github.com/llamasearch/experimentalagents-product-growth/issues"

[project.scripts]
llamasearch = "llamasearch_experimentalagents_product_growth.cli:app"

[tool.hatch.build.targets.wheel]
packages = ["src/llamasearch_experimentalagents_product_growth"]

[tool.isort]
profile = "black"
known_first_party = ["llamasearch_experimentalagents_product_growth"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["llamasearch_experimentalagents_product_growth"]
omit = ["tests/*", "examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "W",   # pycodestyle warnings
    "B",   # flake8-bugbear
]
ignore = [
    "E203",  # Whitespace before ':' (conflicts with black)
]

[tool.ruff.isort]
known-first-party = ["llamasearch_experimentalagents_product_growth"] 