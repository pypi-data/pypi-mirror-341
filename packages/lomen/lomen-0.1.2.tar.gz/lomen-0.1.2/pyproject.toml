[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lomen"
version = "0.1.2"
authors = [
    {name = "Lomen Development Team", email = "example@example.com"},
]
description = "Plugin-based framework for blockchain/web3 tools"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "pydantic",
    "langchain",
    "langgraph",
    "python-dotenv",
    "aiohttp",
    "web3",
    "langchain-openai>=0.3.12",
    "fastapi>=0.115.12",
    "langchain-community>=0.3.21",
    "uvicorn>=0.34.0",
    "mcp>=1.6.0",
    "starlette>=0.46.1",
    "pytest>=8.3.5",
]

[project.scripts]
lomen = "lomen.cli:main"

[project.urls]
"Homepage" = "https://github.com/username/lomen"
"Bug Tracker" = "https://github.com/username/lomen/issues"
"Documentation" = "https://github.com/username/lomen#readme"

[project.optional-dependencies]
dev = [
    "black>=25.1.0",
    "pytest>=8.3.5",
    "pytest-asyncio", # For async test support
    "pytest-mock",    # For mocker fixture
    "ruff>=0.11.4",
    "pytest-cov>=4.1.0",
]

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I"]

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "asyncio: mark test as an asyncio test"
]
filterwarnings = [
    "ignore::DeprecationWarning:websockets.*:"
]
# We'll add coverage separately

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "examples/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]
